#*****************************************************************************************
# Vivado (TM) v2022.2_AR000035739_AR000034905 (64-bit)
#
# HELIX.tcl: Tcl script for re-creating project 'HELIX'
#
# Generated by Vivado on Wed Mar 19 17:20:06 CET 2025
# IP Build 3669848 on Fri Oct 14 08:30:02 MDT 2022
#
# This file contains the Vivado Tcl commands for re-creating the project to the state*
# when this script was generated. In order to re-create the project, please source this
# file in the Vivado Tcl Shell.
#
# * Note that the runs in the created project will be configured the same way as the
#   original project, however they will not be launched automatically. To regenerate the
#   run results please launch the synthesis/implementation runs as needed.
#
#*****************************************************************************************
# NOTE: In order to use this script for source control purposes, please make sure that the
#       following files are added to the source control system:-
#
# 1. This project restoration tcl script (HELIX.tcl) that was generated.
#
# 2. The following source(s) files that were local or imported into the original project.
#    (Please see the '$orig_proj_dir' and '$origin_dir' variable setting below at the start of the script)

#
#*****************************************************************************************

# Check file required for this script exists
proc checkRequiredFiles { origin_dir} {
  set status true
  set files [list \
 "[file normalize "$origin_dir/src/design_1_wrapper.vhd"]"\
 "[file normalize "$origin_dir/src/udp.xdc"]"\
 "[file normalize "$origin_dir/src/mts.xdc"]"\
 "[file normalize "$origin_dir/src/spi_mux.xdc"]"\
  ]
  foreach ifile $files {
    if { ![file isfile $ifile] } {
      puts " Could not find local file $ifile "
      set status false
    }
  }


  set paths [list \
 "[file normalize "$origin_dir/../../[file normalize "$origin_dir/IP_REPO"]"]"\
  ]
  foreach ipath $paths {
    if { ![file isdirectory $ipath] } {
      puts " Could not access $ipath "
      set status false
    }
  }

  return $status
}
# Set the reference directory for source file relative paths (by default the value is script directory path)
set origin_dir "."

# Use origin directory path location variable, if specified in the tcl shell
if { [info exists ::origin_dir_loc] } {
  set origin_dir $::origin_dir_loc
}

# Set the project name
set _xil_proj_name_ "HELIX"

# Use project name variable, if specified in the tcl shell
if { [info exists ::user_project_name] } {
  set _xil_proj_name_ $::user_project_name
}

variable script_file
set script_file "HELIX.tcl"

# Help information for this script
proc print_help {} {
  variable script_file
  puts "\nDescription:"
  puts "Recreate a Vivado project from this script. The created project will be"
  puts "functionally equivalent to the original project for which this script was"
  puts "generated. The script contains commands for creating a project, filesets,"
  puts "runs, adding/importing sources and setting properties on various objects.\n"
  puts "Syntax:"
  puts "$script_file"
  puts "$script_file -tclargs \[--origin_dir <path>\]"
  puts "$script_file -tclargs \[--project_name <name>\]"
  puts "$script_file -tclargs \[--help\]\n"
  puts "Usage:"
  puts "Name                   Description"
  puts "-------------------------------------------------------------------------"
  puts "\[--origin_dir <path>\]  Determine source file paths wrt this path. Default"
  puts "                       origin_dir path value is \".\", otherwise, the value"
  puts "                       that was set with the \"-paths_relative_to\" switch"
  puts "                       when this script was generated.\n"
  puts "\[--project_name <name>\] Create project with the specified name. Default"
  puts "                       name is the name of the project from where this"
  puts "                       script was generated.\n"
  puts "\[--help\]               Print help information for this script"
  puts "-------------------------------------------------------------------------\n"
  exit 0
}

if { $::argc > 0 } {
  for {set i 0} {$i < $::argc} {incr i} {
    set option [string trim [lindex $::argv $i]]
    switch -regexp -- $option {
      "--origin_dir"   { incr i; set origin_dir [lindex $::argv $i] }
      "--project_name" { incr i; set _xil_proj_name_ [lindex $::argv $i] }
      "--help"         { print_help }
      default {
        if { [regexp {^-} $option] } {
          puts "ERROR: Unknown option '$option' specified, please type '$script_file -tclargs --help' for usage info.\n"
          return 1
        }
      }
    }
  }
}

# Set the directory path for the original project from where this script was exported
set orig_proj_dir "[file normalize "$origin_dir/HELIX"]"

# Check for paths and files needed for project creation
set validate_required 0
if { $validate_required } {
  if { [checkRequiredFiles $origin_dir] } {
    puts "Tcl file $script_file is valid. All files required for project creation is accesable. "
  } else {
    puts "Tcl file $script_file is not valid. Not all files required for project creation is accesable. "
    return
  }
}

# Create project
create_project ${_xil_proj_name_} ./${_xil_proj_name_} -part xczu48dr-fsvg1517-2-e

# Set the directory path for the new project
set proj_dir [get_property directory [current_project]]

# Set project properties
set obj [current_project]
set_property -name "board_part" -value "xilinx.com:zcu208:part0:2.0" -objects $obj
set_property -name "default_lib" -value "xil_defaultlib" -objects $obj
set_property -name "enable_resource_estimation" -value "0" -objects $obj
set_property -name "enable_vhdl_2008" -value "1" -objects $obj
set_property -name "ip_cache_permissions" -value "read write" -objects $obj
set_property -name "mem.enable_memory_map_generation" -value "1" -objects $obj
set_property -name "platform.board_id" -value "zcu111" -objects $obj
set_property -name "revised_directory_structure" -value "1" -objects $obj
set_property -name "sim.central_dir" -value "$proj_dir/${_xil_proj_name_}.ip_user_files" -objects $obj
set_property -name "sim.ip.auto_export_scripts" -value "1" -objects $obj
set_property -name "simulator_language" -value "Mixed" -objects $obj
set_property -name "sim_compile_state" -value "1" -objects $obj
set_property -name "webtalk.activehdl_export_sim" -value "541" -objects $obj
set_property -name "webtalk.ies_export_sim" -value "462" -objects $obj
set_property -name "webtalk.modelsim_export_sim" -value "542" -objects $obj
set_property -name "webtalk.questa_export_sim" -value "542" -objects $obj
set_property -name "webtalk.riviera_export_sim" -value "541" -objects $obj
set_property -name "webtalk.vcs_export_sim" -value "541" -objects $obj
set_property -name "webtalk.xsim_export_sim" -value "545" -objects $obj
set_property -name "xpm_libraries" -value "XPM_CDC XPM_FIFO XPM_MEMORY" -objects $obj

# Create 'sources_1' fileset (if not found)
if {[string equal [get_filesets -quiet sources_1] ""]} {
  create_fileset -srcset sources_1
}

# Set IP repository paths
set obj [get_filesets sources_1]
if { $obj != {} } {
   set_property "ip_repo_paths" "[file normalize "$origin_dir/IP_REPO"]" $obj

   # Rebuild user ip_repo's index before adding any source files
   update_ip_catalog -rebuild
}


# Set 'sources_1' fileset file properties for local files
set file "[file normalize ${origin_dir}/src/design_1_wrapper.vhd]"
set file_imported [import_files -fileset sources_1 [list $file]]
set file "src/design_1_wrapper.vhd"
set file_obj [get_files -of_objects [get_filesets sources_1] [list "*$file"]]
set_property -name "file_type" -value "VHDL" -objects $file_obj


# Set 'sources_1' fileset properties
set obj [get_filesets sources_1]
set_property -name "dataflow_viewer_settings" -value "min_width=16" -objects $obj
set_property -name "top" -value "design_1_wrapper" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj

# Create 'constrs_1' fileset (if not found)
if {[string equal [get_filesets -quiet constrs_1] ""]} {
  create_fileset -constrset constrs_1
}

# Set 'constrs_1' fileset object
set obj [get_filesets constrs_1]

# Add/Import constrs file and set constrs file properties
set file "[file normalize ${origin_dir}/src/udp.xdc]"
set file_imported [import_files -fileset constrs_1 [list $file]]
set file "src/udp.xdc"
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize ${origin_dir}/src/mts.xdc]"
set file_imported [import_files -fileset constrs_1 [list $file]]
set file "src/mts.xdc"
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Add/Import constrs file and set constrs file properties
set file "[file normalize ${origin_dir}/src/spi_mux.xdc]"
set file_imported [import_files -fileset constrs_1 [list $file]]
set file "src/spi_mux.xdc"
set file_obj [get_files -of_objects [get_filesets constrs_1] [list "*$file"]]
set_property -name "file_type" -value "XDC" -objects $file_obj

# Set 'constrs_1' fileset properties
set obj [get_filesets constrs_1]

# Create 'sim_1' fileset (if not found)
if {[string equal [get_filesets -quiet sim_1] ""]} {
  create_fileset -simset sim_1
}

# Set 'sim_1' fileset object
set obj [get_filesets sim_1]
# Empty (no sources present)

# Set 'sim_1' fileset properties
set obj [get_filesets sim_1]
set_property -name "top" -value "design_1_wrapper" -objects $obj
set_property -name "top_auto_set" -value "0" -objects $obj
set_property -name "top_lib" -value "xil_defaultlib" -objects $obj

# Set 'utils_1' fileset object
set obj [get_filesets utils_1]
# Empty (no sources present)

# Set 'utils_1' fileset properties
set obj [get_filesets utils_1]


# Adding sources referenced in BDs, if not already added


# Proc to create BD design_1
proc cr_bd_design_1 { parentCell } {

  # CHANGE DESIGN NAME HERE
  set design_name design_1

  common::send_gid_msg -ssname BD::TCL -id 2010 -severity "INFO" "Currently there is no design <$design_name> in project, so creating one..."

  create_bd_design $design_name

  set bCheckIPsPassed 1
  ##################################################################
  # CHECK IPs
  ##################################################################
  set bCheckIPs 1
  if { $bCheckIPs == 1 } {
     set list_check_ips "\ 
  xilinx.com:ip:axi_gpio:2.0\
  xilinx.com:ip:axis_register_slice:1.1\
  user.org:user:rx_controlled_buffer:1.0\
  user.org:user:stream_manager:1.0\
  user.org:user:udp_stack:1.0\
  xilinx.com:ip:usp_rf_data_converter:2.6\
  xilinx.com:ip:util_ds_buf:2.2\
  xilinx.com:ip:zynq_ultra_ps_e:3.4\
  xilinx.com:ip:clk_wiz:6.0\
  xilinx.com:user:sync:1.0\
  xilinx.com:ip:xlconstant:1.1\
  xilinx.com:ip:axi_dma:7.1\
  xilinx.com:ip:smartconnect:1.0\
  xilinx.com:ip:axis_data_fifo:2.0\
  xilinx.com:ip:xlconcat:2.1\
  xilinx.com:ip:proc_sys_reset:5.0\
  xilinx.com:user:CE_5G_NR_v2:1.0\
  xilinx.com:user:CFO_correction_TOP:1.0\
  user.org:user:FILTER_DS_x8_v3:1.0\
  xilinx.com:user:LDPCdecoder_v2:1.0\
  user.org:user:MMSE_EQ_V2:1.0\
  xilinx.com:user:OFDM_demod_TOP_v3_wrp_0:1.0\
  xilinx.com:user:PTRS_5G_IP:1.0\
  xilinx.com:user:SSB_TOP_v3:1.0\
  user.org:user:automatic_gain_control:1.0\
  xilinx.com:ip:axis_broadcaster:1.1\
  xilinx.com:ip:axis_combiner:1.1\
  xilinx.com:user:demapper_top:1.0\
  xilinx.com:user:packetizer_RT:1.0\
  xilinx.com:ip:util_vector_logic:2.0\
  xilinx.com:ip:xlslice:1.0\
  xilinx.com:user:OFDM_MOD:1.0\
  user.org:user:SSB_LBM:1.0\
  xilinx.com:user:TxUpsampleIFS_5G_IP:1.0\
  user.org:user:delay_buffer:1.0\
  user.org:user:nrPDSCH_top:1.0\
  user.org:user:txBuildGrid_wrp_v2_5G_IP:1.0\
  user.org:user:tx_buffer_top:1.0\
  "

   set list_ips_missing ""
   common::send_gid_msg -ssname BD::TCL -id 2011 -severity "INFO" "Checking if the following IPs exist in the project's IP catalog: $list_check_ips ."

   foreach ip_vlnv $list_check_ips {
      set ip_obj [get_ipdefs -all $ip_vlnv]
      if { $ip_obj eq "" } {
         lappend list_ips_missing $ip_vlnv
      }
   }

   if { $list_ips_missing ne "" } {
      catch {common::send_gid_msg -ssname BD::TCL -id 2012 -severity "ERROR" "The following IPs are not found in the IP Catalog:\n  $list_ips_missing\n\nResolution: Please add the repository containing the IP(s) to the project." }
      set bCheckIPsPassed 0
   }

  }

  if { $bCheckIPsPassed != 1 } {
    common::send_gid_msg -ssname BD::TCL -id 2023 -severity "WARNING" "Will not continue with creation of design due to the error(s) above."
    return 3
  }

  
# Hierarchical cell: soft_reset
proc create_hier_cell_soft_reset_1 { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_soft_reset_1() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir I -from 0 -to 0 Op1
  create_bd_pin -dir I -from 0 -to 0 Op2
  create_bd_pin -dir O -from 0 -to 0 Res
  create_bd_pin -dir I -type clk s01_axis_aclk

  # Create instance: sync_0, and set properties
  set sync_0 [ create_bd_cell -type ip -vlnv xilinx.com:user:sync:1.0 sync_0 ]
  set_property CONFIG.SRC_INPUT_REG {0} $sync_0


  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property CONFIG.C_SIZE {1} $util_vector_logic_0


  # Create instance: util_vector_logic_1, and set properties
  set util_vector_logic_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_1 ]
  set_property -dict [list \
    CONFIG.C_OPERATION {not} \
    CONFIG.C_SIZE {1} \
  ] $util_vector_logic_1


  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]
  set_property CONFIG.CONST_VAL {0} $xlconstant_0


  # Create port connections
  connect_bd_net -net Op1_1 [get_bd_pins Op1] [get_bd_pins util_vector_logic_0/Op1]
  connect_bd_net -net Op2_1 [get_bd_pins Op2] [get_bd_pins util_vector_logic_1/Op1]
  connect_bd_net -net s01_axis_aclk_1 [get_bd_pins s01_axis_aclk] [get_bd_pins sync_0/dest_clk]
  connect_bd_net -net sync_0_dest_out [get_bd_pins sync_0/dest_out] [get_bd_pins util_vector_logic_0/Op2]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins Res] [get_bd_pins util_vector_logic_0/Res]
  connect_bd_net -net util_vector_logic_1_Res [get_bd_pins sync_0/src_in] [get_bd_pins util_vector_logic_1/Res]
  connect_bd_net -net xlconstant_0_dout [get_bd_pins sync_0/src_clk] [get_bd_pins xlconstant_0/dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: soft_reset
proc create_hier_cell_soft_reset { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_soft_reset() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir I -from 0 -to 0 Op1
  create_bd_pin -dir I -from 0 -to 0 Op2
  create_bd_pin -dir O -from 0 -to 0 Res
  create_bd_pin -dir I -type clk s01_axis_aclk

  # Create instance: sync_0, and set properties
  set sync_0 [ create_bd_cell -type ip -vlnv xilinx.com:user:sync:1.0 sync_0 ]
  set_property CONFIG.SRC_INPUT_REG {0} $sync_0


  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property CONFIG.C_SIZE {1} $util_vector_logic_0


  # Create instance: util_vector_logic_1, and set properties
  set util_vector_logic_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_1 ]
  set_property -dict [list \
    CONFIG.C_OPERATION {not} \
    CONFIG.C_SIZE {1} \
  ] $util_vector_logic_1


  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]
  set_property CONFIG.CONST_VAL {0} $xlconstant_0


  # Create port connections
  connect_bd_net -net Op1_1 [get_bd_pins Op1] [get_bd_pins util_vector_logic_0/Op1]
  connect_bd_net -net Op2_1 [get_bd_pins Op2] [get_bd_pins util_vector_logic_1/Op1]
  connect_bd_net -net s01_axis_aclk_1 [get_bd_pins s01_axis_aclk] [get_bd_pins sync_0/dest_clk]
  connect_bd_net -net sync_0_dest_out [get_bd_pins sync_0/dest_out] [get_bd_pins util_vector_logic_0/Op2]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins Res] [get_bd_pins util_vector_logic_0/Res]
  connect_bd_net -net util_vector_logic_1_Res [get_bd_pins sync_0/src_in] [get_bd_pins util_vector_logic_1/Res]
  connect_bd_net -net xlconstant_0_dout [get_bd_pins sync_0/src_clk] [get_bd_pins xlconstant_0/dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: enable_recv
proc create_hier_cell_enable_recv { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_enable_recv() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir I -from 94 -to 0 Din
  create_bd_pin -dir I -from 0 -to 0 Op1
  create_bd_pin -dir O -from 0 -to 0 Res
  create_bd_pin -dir I -type clk s01_axis_aclk

  # Create instance: sync_0, and set properties
  set sync_0 [ create_bd_cell -type ip -vlnv xilinx.com:user:sync:1.0 sync_0 ]
  set_property CONFIG.SRC_INPUT_REG {0} $sync_0


  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property CONFIG.C_SIZE {1} $util_vector_logic_0


  # Create instance: xlconstant_1, and set properties
  set xlconstant_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_1 ]
  set_property CONFIG.CONST_VAL {0} $xlconstant_1


  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]
  set_property -dict [list \
    CONFIG.DIN_FROM {6} \
    CONFIG.DIN_TO {6} \
    CONFIG.DIN_WIDTH {95} \
  ] $xlslice_0


  # Create port connections
  connect_bd_net -net Din_1 [get_bd_pins Din] [get_bd_pins xlslice_0/Din]
  connect_bd_net -net SSB_TOP_v3_0_m00_axis_tvalid [get_bd_pins Op1] [get_bd_pins util_vector_logic_0/Op1]
  connect_bd_net -net s01_axis_aclk_1 [get_bd_pins s01_axis_aclk] [get_bd_pins sync_0/dest_clk]
  connect_bd_net -net sync_0_dest_out [get_bd_pins sync_0/dest_out] [get_bd_pins util_vector_logic_0/Op2]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins Res] [get_bd_pins util_vector_logic_0/Res]
  connect_bd_net -net xlconstant_1_dout [get_bd_pins sync_0/src_clk] [get_bd_pins xlconstant_1/dout]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins sync_0/src_in] [get_bd_pins xlslice_0/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: tx_reset
proc create_hier_cell_tx_reset { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_tx_reset() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir I -from 94 -to 0 Din
  create_bd_pin -dir I -from 0 -to 0 Op1
  create_bd_pin -dir O -from 0 -to 0 Res
  create_bd_pin -dir I -type clk s01_axis_aclk

  # Create instance: sync_0, and set properties
  set sync_0 [ create_bd_cell -type ip -vlnv xilinx.com:user:sync:1.0 sync_0 ]
  set_property CONFIG.SRC_INPUT_REG {0} $sync_0


  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property CONFIG.C_SIZE {1} $util_vector_logic_0


  # Create instance: util_vector_logic_1, and set properties
  set util_vector_logic_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_1 ]
  set_property -dict [list \
    CONFIG.C_OPERATION {not} \
    CONFIG.C_SIZE {1} \
  ] $util_vector_logic_1


  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]
  set_property CONFIG.CONST_VAL {0} $xlconstant_0


  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]
  set_property -dict [list \
    CONFIG.DIN_FROM {0} \
    CONFIG.DIN_TO {0} \
    CONFIG.DIN_WIDTH {95} \
  ] $xlslice_0


  # Create port connections
  connect_bd_net -net Din_1 [get_bd_pins Din] [get_bd_pins xlslice_0/Din]
  connect_bd_net -net Op1_1 [get_bd_pins Op1] [get_bd_pins util_vector_logic_0/Op1]
  connect_bd_net -net s01_axis_aclk_1 [get_bd_pins s01_axis_aclk] [get_bd_pins sync_0/dest_clk]
  connect_bd_net -net sync_0_dest_out [get_bd_pins sync_0/dest_out] [get_bd_pins util_vector_logic_0/Op2]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins Res] [get_bd_pins util_vector_logic_0/Res]
  connect_bd_net -net util_vector_logic_1_Res [get_bd_pins sync_0/src_in] [get_bd_pins util_vector_logic_1/Res]
  connect_bd_net -net xlconstant_0_dout [get_bd_pins sync_0/src_clk] [get_bd_pins xlconstant_0/dout]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins util_vector_logic_1/Op1] [get_bd_pins xlslice_0/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: tx_blocks
proc create_hier_cell_tx_blocks { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_tx_blocks() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M05_AXIS

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 M_AXI_MM2S

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S_AXI_CTRL

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S_AXI_LITE

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m00_axis

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s00_axi

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s00_axi1

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s00_axi2

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s00_axis

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_BUS_A

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s_axi_BUS_A1


  # Create pins
  create_bd_pin -dir I -from 94 -to 0 Din
  create_bd_pin -dir I -type clk M05_AXIS_ACLK
  create_bd_pin -dir I -type rst M05_AXIS_ARESETN
  create_bd_pin -dir I -from 0 -to 0 Op2
  create_bd_pin -dir I -type clk aclk
  create_bd_pin -dir I -type rst aresetn
  create_bd_pin -dir O prog_empty
  create_bd_pin -dir I -type clk s00_axi_aclk
  create_bd_pin -dir I -type rst s00_axi_aresetn

  # Create instance: OFDM_MOD_0, and set properties
  set OFDM_MOD_0 [ create_bd_cell -type ip -vlnv xilinx.com:user:OFDM_MOD:1.0 OFDM_MOD_0 ]

  # Create instance: SSB_LBM_0, and set properties
  set SSB_LBM_0 [ create_bd_cell -type ip -vlnv user.org:user:SSB_LBM:1.0 SSB_LBM_0 ]
  set_property -dict [list \
    CONFIG.LOAD_DATA_LBM_I_BIT {3} \
    CONFIG.MUX_LBM_I_BIT {4} \
    CONFIG.RST_I_BIT {5} \
  ] $SSB_LBM_0


  # Create instance: TxUpsampleIFS_5G_IP_0, and set properties
  set TxUpsampleIFS_5G_IP_0 [ create_bd_cell -type ip -vlnv xilinx.com:user:TxUpsampleIFS_5G_IP:1.0 TxUpsampleIFS_5G_IP_0 ]

  # Create instance: axi_dma_0, and set properties
  set axi_dma_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_dma:7.1 axi_dma_0 ]
  set_property -dict [list \
    CONFIG.c_include_mm2s {1} \
    CONFIG.c_include_mm2s_dre {1} \
    CONFIG.c_include_s2mm {0} \
    CONFIG.c_include_sg {0} \
    CONFIG.c_m_axi_mm2s_data_width {256} \
    CONFIG.c_m_axis_mm2s_tdata_width {256} \
    CONFIG.c_mm2s_burst_size {64} \
  ] $axi_dma_0


  # Create instance: axis_interconnect_0, and set properties
  set axis_interconnect_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_interconnect:2.1 axis_interconnect_0 ]
  set_property -dict [list \
    CONFIG.ENABLE_ADVANCED_OPTIONS {0} \
    CONFIG.NUM_MI {6} \
    CONFIG.NUM_SI {5} \
    CONFIG.ROUTING_MODE {1} \
    CONFIG.S00_HAS_REGSLICE {0} \
  ] $axis_interconnect_0


  # Create instance: delay_buffer_0, and set properties
  set delay_buffer_0 [ create_bd_cell -type ip -vlnv user.org:user:delay_buffer:1.0 delay_buffer_0 ]

  # Create instance: nrPDSCH_top_0, and set properties
  set nrPDSCH_top_0 [ create_bd_cell -type ip -vlnv user.org:user:nrPDSCH_top:1.0 nrPDSCH_top_0 ]

  # Create instance: soft_reset
  create_hier_cell_soft_reset_1 $hier_obj soft_reset

  # Create instance: txBuildGrid_wrp_v2_5_0, and set properties
  set txBuildGrid_wrp_v2_5_0 [ create_bd_cell -type ip -vlnv user.org:user:txBuildGrid_wrp_v2_5G_IP:1.0 txBuildGrid_wrp_v2_5_0 ]

  # Create instance: tx_buffer_top_0, and set properties
  set tx_buffer_top_0 [ create_bd_cell -type ip -vlnv user.org:user:tx_buffer_top:1.0 tx_buffer_top_0 ]

  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]

  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]
  set_property -dict [list \
    CONFIG.DIN_FROM {2} \
    CONFIG.DIN_TO {2} \
    CONFIG.DIN_WIDTH {95} \
  ] $xlslice_0


  # Create interface connections
  connect_bd_intf_net -intf_net Conn1 [get_bd_intf_pins s00_axi] [get_bd_intf_pins OFDM_MOD_0/s00_axi]
  connect_bd_intf_net -intf_net Conn2 [get_bd_intf_pins m00_axis] [get_bd_intf_pins TxUpsampleIFS_5G_IP_0/m00_axis]
  connect_bd_intf_net -intf_net Conn3 [get_bd_intf_pins S_AXI_LITE] [get_bd_intf_pins axi_dma_0/S_AXI_LITE]
  connect_bd_intf_net -intf_net Conn7 [get_bd_intf_pins s_axi_BUS_A] [get_bd_intf_pins nrPDSCH_top_0/s_axi_BUS_A]
  connect_bd_intf_net -intf_net Conn9 [get_bd_intf_pins s_axi_BUS_A1] [get_bd_intf_pins txBuildGrid_wrp_v2_5_0/s_axi_BUS_A]
  connect_bd_intf_net -intf_net Conn10 [get_bd_intf_pins S_AXI_CTRL] [get_bd_intf_pins axis_interconnect_0/S_AXI_CTRL]
  connect_bd_intf_net -intf_net OFDM_MOD_0_m00_axis [get_bd_intf_pins OFDM_MOD_0/m00_axis] [get_bd_intf_pins axis_interconnect_0/S03_AXIS]
  connect_bd_intf_net -intf_net SSB_LBM_0_m00_axis [get_bd_intf_pins SSB_LBM_0/m00_axis] [get_bd_intf_pins txBuildGrid_wrp_v2_5_0/ssbIn]
  connect_bd_intf_net -intf_net axi_dma_0_M_AXIS_MM2S [get_bd_intf_pins SSB_LBM_0/s00_axis] [get_bd_intf_pins axi_dma_0/M_AXIS_MM2S]
  connect_bd_intf_net -intf_net axi_dma_0_M_AXI_MM2S [get_bd_intf_pins M_AXI_MM2S] [get_bd_intf_pins axi_dma_0/M_AXI_MM2S]
  connect_bd_intf_net -intf_net axis_interconnect_0_M00_AXIS [get_bd_intf_pins axis_interconnect_0/M00_AXIS] [get_bd_intf_pins nrPDSCH_top_0/bitsIn]
  connect_bd_intf_net -intf_net axis_interconnect_0_M01_AXIS [get_bd_intf_pins axis_interconnect_0/M01_AXIS] [get_bd_intf_pins txBuildGrid_wrp_v2_5_0/pdschIn]
  connect_bd_intf_net -intf_net axis_interconnect_0_M02_AXIS [get_bd_intf_pins OFDM_MOD_0/s00_axis] [get_bd_intf_pins axis_interconnect_0/M02_AXIS]
  connect_bd_intf_net -intf_net axis_interconnect_0_M03_AXIS [get_bd_intf_pins TxUpsampleIFS_5G_IP_0/s00_axis] [get_bd_intf_pins axis_interconnect_0/M03_AXIS]
  connect_bd_intf_net -intf_net axis_interconnect_0_M04_AXIS [get_bd_intf_pins axis_interconnect_0/M04_AXIS] [get_bd_intf_pins delay_buffer_0/S00_AXIS]
  connect_bd_intf_net -intf_net axis_interconnect_0_M05_AXIS [get_bd_intf_pins M05_AXIS] [get_bd_intf_pins axis_interconnect_0/M05_AXIS]
  connect_bd_intf_net -intf_net delay_buffer_0_M00_AXIS [get_bd_intf_pins axis_interconnect_0/S04_AXIS] [get_bd_intf_pins delay_buffer_0/M00_AXIS]
  connect_bd_intf_net -intf_net nrPDSCH_top_0_symbolsOut [get_bd_intf_pins axis_interconnect_0/S01_AXIS] [get_bd_intf_pins nrPDSCH_top_0/symbolsOut]
  connect_bd_intf_net -intf_net s00_axi1_1 [get_bd_intf_pins s00_axi1] [get_bd_intf_pins TxUpsampleIFS_5G_IP_0/s00_axi]
  connect_bd_intf_net -intf_net s00_axi2_1 [get_bd_intf_pins s00_axi2] [get_bd_intf_pins SSB_LBM_0/s00_axi]
  connect_bd_intf_net -intf_net s00_axis_1 [get_bd_intf_pins s00_axis] [get_bd_intf_pins tx_buffer_top_0/s00_axis]
  connect_bd_intf_net -intf_net txBuildGrid_wrp_v2_5_0_gridOut [get_bd_intf_pins axis_interconnect_0/S02_AXIS] [get_bd_intf_pins txBuildGrid_wrp_v2_5_0/gridOut]
  connect_bd_intf_net -intf_net tx_buffer_top_0_m00_axis [get_bd_intf_pins axis_interconnect_0/S00_AXIS] [get_bd_intf_pins tx_buffer_top_0/m00_axis]

  # Create port connections
  connect_bd_net -net Din_1 [get_bd_pins Din] [get_bd_pins SSB_LBM_0/GPIO_i] [get_bd_pins xlslice_0/Din]
  connect_bd_net -net M05_AXIS_ACLK_1 [get_bd_pins M05_AXIS_ACLK] [get_bd_pins axis_interconnect_0/M05_AXIS_ACLK]
  connect_bd_net -net M05_AXIS_ARESETN_1 [get_bd_pins M05_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/M05_AXIS_ARESETN]
  connect_bd_net -net Net [get_bd_pins aclk] [get_bd_pins OFDM_MOD_0/aclk] [get_bd_pins SSB_LBM_0/m00_axis_aclk] [get_bd_pins TxUpsampleIFS_5G_IP_0/aclk] [get_bd_pins axis_interconnect_0/ACLK] [get_bd_pins axis_interconnect_0/M00_AXIS_ACLK] [get_bd_pins axis_interconnect_0/M01_AXIS_ACLK] [get_bd_pins axis_interconnect_0/M02_AXIS_ACLK] [get_bd_pins axis_interconnect_0/M03_AXIS_ACLK] [get_bd_pins axis_interconnect_0/M04_AXIS_ACLK] [get_bd_pins axis_interconnect_0/S00_AXIS_ACLK] [get_bd_pins axis_interconnect_0/S01_AXIS_ACLK] [get_bd_pins axis_interconnect_0/S02_AXIS_ACLK] [get_bd_pins axis_interconnect_0/S03_AXIS_ACLK] [get_bd_pins axis_interconnect_0/S04_AXIS_ACLK] [get_bd_pins delay_buffer_0/clk] [get_bd_pins nrPDSCH_top_0/ap_clk] [get_bd_pins soft_reset/s01_axis_aclk] [get_bd_pins txBuildGrid_wrp_v2_5_0/ap_clk] [get_bd_pins tx_buffer_top_0/aclk]
  connect_bd_net -net Net1 [get_bd_pins OFDM_MOD_0/aresetn] [get_bd_pins SSB_LBM_0/m00_axis_aresetn] [get_bd_pins TxUpsampleIFS_5G_IP_0/aresetn] [get_bd_pins axis_interconnect_0/ARESETN] [get_bd_pins axis_interconnect_0/M00_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/M01_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/M02_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/M03_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/M04_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/S00_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/S01_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/S02_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/S03_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/S04_AXIS_ARESETN] [get_bd_pins delay_buffer_0/aresetn] [get_bd_pins nrPDSCH_top_0/ap_rst_n] [get_bd_pins soft_reset/Res] [get_bd_pins txBuildGrid_wrp_v2_5_0/ap_rst_n] [get_bd_pins tx_buffer_top_0/aresetn]
  connect_bd_net -net Net2 [get_bd_pins TxUpsampleIFS_5G_IP_0/s00_axis_tvalid] [get_bd_pins TxUpsampleIFS_5G_IP_0/triggerIn] [get_bd_pins axis_interconnect_0/M03_AXIS_tvalid]
  connect_bd_net -net Op2_1 [get_bd_pins Op2] [get_bd_pins soft_reset/Op2]
  connect_bd_net -net aresetn_1 [get_bd_pins aresetn] [get_bd_pins soft_reset/Op1]
  connect_bd_net -net s00_axi_aclk_1 [get_bd_pins s00_axi_aclk] [get_bd_pins OFDM_MOD_0/s00_axi_aclk] [get_bd_pins SSB_LBM_0/s00_axi_aclk] [get_bd_pins SSB_LBM_0/s00_axis_aclk] [get_bd_pins TxUpsampleIFS_5G_IP_0/s00_axi_aclk] [get_bd_pins axi_dma_0/m_axi_mm2s_aclk] [get_bd_pins axi_dma_0/s_axi_lite_aclk] [get_bd_pins axis_interconnect_0/S_AXI_CTRL_ACLK]
  connect_bd_net -net s00_axi_aresetn_1 [get_bd_pins s00_axi_aresetn] [get_bd_pins OFDM_MOD_0/s00_axi_aresetn] [get_bd_pins SSB_LBM_0/s00_axi_aresetn] [get_bd_pins SSB_LBM_0/s00_axis_aresetn] [get_bd_pins TxUpsampleIFS_5G_IP_0/s00_axi_aresetn] [get_bd_pins axi_dma_0/axi_resetn] [get_bd_pins axis_interconnect_0/S_AXI_CTRL_ARESETN]
  connect_bd_net -net tx_buffer_top_0_prog_empty [get_bd_pins prog_empty] [get_bd_pins tx_buffer_top_0/prog_empty]
  connect_bd_net -net xlconstant_0_dout [get_bd_pins OFDM_MOD_0/triggerIn] [get_bd_pins xlconstant_0/dout]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins SSB_LBM_0/send_pkt_i] [get_bd_pins xlslice_0/Dout]

  # Perform GUI Layout
  regenerate_bd_layout -hierarchy [get_bd_cells /tx_blocks] -layout_string {
   "ActiveEmotionalView":"Default View",
   "Default View_ScaleFactor":"0.523129",
   "Default View_TopLeft":"-954,4",
   "ExpandedHierarchyInLayout":"",
   "guistr":"# # String gsaved with Nlview 7.0r4  2019-12-20 bk=1.5203 VDI=41 GEI=36 GUI=JA:10.0 TLS
#  -string -flagsOSRD
preplace port s00_axi -pg 1 -lvl 0 -x 0 -y 1130 -defaultsOSRD
preplace port s00_axi1 -pg 1 -lvl 0 -x 0 -y 1060 -defaultsOSRD
preplace port s00_axis -pg 1 -lvl 0 -x 0 -y 1080 -defaultsOSRD
preplace port S_AXI_LITE -pg 1 -lvl 0 -x 0 -y 1350 -defaultsOSRD
preplace port s_axi_BUS_A -pg 1 -lvl 0 -x 0 -y 630 -defaultsOSRD
preplace port s00_axi2 -pg 1 -lvl 0 -x 0 -y 760 -defaultsOSRD
preplace port s_axi_BUS_A1 -pg 1 -lvl 0 -x 0 -y 720 -defaultsOSRD
preplace port M_AXI_MM2S -pg 1 -lvl 7 -x 2160 -y 1350 -defaultsOSRD
preplace port S_AXI_CTRL -pg 1 -lvl 0 -x 0 -y 140 -defaultsOSRD
preplace port m00_axis -pg 1 -lvl 7 -x 2160 -y 750 -defaultsOSRD
preplace port M05_AXIS -pg 1 -lvl 7 -x 2160 -y 430 -defaultsOSRD
preplace port port-id_s00_axi_aclk -pg 1 -lvl 0 -x 0 -y 890 -defaultsOSRD
preplace port port-id_s00_axi_aresetn -pg 1 -lvl 0 -x 0 -y 910 -defaultsOSRD
preplace port port-id_aclk -pg 1 -lvl 0 -x 0 -y 1010 -defaultsOSRD
preplace port port-id_aresetn -pg 1 -lvl 0 -x 0 -y 970 -defaultsOSRD
preplace port port-id_prog_empty -pg 1 -lvl 7 -x 2160 -y 1120 -defaultsOSRD
preplace port port-id_M05_AXIS_ACLK -pg 1 -lvl 0 -x 0 -y 680 -defaultsOSRD
preplace port port-id_M05_AXIS_ARESETN -pg 1 -lvl 0 -x 0 -y 700 -defaultsOSRD
preplace portBus Op2 -pg 1 -lvl 0 -x 0 -y 990 -defaultsOSRD
preplace portBus Din -pg 1 -lvl 0 -x 0 -y 820 -defaultsOSRD
preplace inst soft_reset -pg 1 -lvl 1 -x 150 -y 990 -defaultsOSRD
preplace inst axi_dma_0 -pg 1 -lvl 5 -x 1720 -y 1380 -defaultsOSRD
preplace inst xlslice_0 -pg 1 -lvl 1 -x 150 -y 820 -defaultsOSRD
preplace inst txBuildGrid_wrp_v2_5_0 -pg 1 -lvl 3 -x 820 -y 870 -defaultsOSRD
preplace inst axis_interconnect_0 -pg 1 -lvl 4 -x 1250 -y 370 -defaultsOSRD
preplace inst xlconstant_0 -pg 1 -lvl 2 -x 450 -y 1230 -defaultsOSRD
preplace inst OFDM_MOD_0 -pg 1 -lvl 3 -x 820 -y 1170 -defaultsOSRD
preplace inst SSB_LBM_0 -pg 1 -lvl 2 -x 450 -y 870 -defaultsOSRD
preplace inst TxUpsampleIFS_5G_IP_0 -pg 1 -lvl 5 -x 1720 -y 770 -defaultsOSRD
preplace inst nrPDSCH_top_0 -pg 1 -lvl 3 -x 820 -y 640 -defaultsOSRD
preplace inst delay_buffer_0 -pg 1 -lvl 3 -x 820 -y 490 -defaultsOSRD
preplace inst tx_buffer_top_0 -pg 1 -lvl 4 -x 1250 -y 870 -defaultsOSRD
preplace netloc Din_1 1 0 2 30 750 300J
preplace netloc M05_AXIS_ACLK_1 1 0 4 NJ 680 NJ 680 620J 730 1020J
preplace netloc M05_AXIS_ARESETN_1 1 0 4 30J 390 NJ 390 NJ 390 1010J
preplace netloc Net 1 0 5 30 1060 280 1060 650 410 1040 780 1490
preplace netloc Net1 1 1 4 300 1030 610 400 1050 790 1470
preplace netloc Net2 1 4 1 1510 390n
preplace netloc Op2_1 1 0 1 NJ 990
preplace netloc aresetn_1 1 0 1 NJ 970
preplace netloc s00_axi_aclk_1 1 0 5 NJ 890 270 1050 630 1010 1060 1010 1440
preplace netloc s00_axi_aresetn_1 1 0 5 NJ 910 290 1040 620 980 1030 950 1500
preplace netloc tx_buffer_top_0_prog_empty 1 4 3 1470 1010 1910 1120 NJ
preplace netloc xlconstant_0_dout 1 2 1 NJ 1230
preplace netloc xlslice_0_Dout 1 1 1 NJ 820
preplace netloc Conn1 1 0 3 NJ 1130 NJ 1130 NJ
preplace netloc Conn2 1 5 2 N 750 NJ
preplace netloc Conn3 1 0 5 NJ 1350 NJ 1350 NJ 1350 NJ 1350 NJ
preplace netloc Conn7 1 0 3 NJ 630 NJ 630 NJ
preplace netloc Conn9 1 0 3 NJ 720 NJ 720 600J
preplace netloc Conn10 1 0 4 NJ 140 NJ 140 NJ 140 NJ
preplace netloc OFDM_MOD_0_m00_axis 1 3 1 1000 120n
preplace netloc SSB_LBM_0_m00_axis 1 2 1 N 850
preplace netloc axi_dma_0_M_AXIS_MM2S 1 1 5 310 1020 NJ 1020 NJ 1020 NJ 1020 1900
preplace netloc axi_dma_0_M_AXI_MM2S 1 5 2 NJ 1350 NJ
preplace netloc axis_interconnect_0_M00_AXIS 1 2 3 680 740 NJ 740 1450
preplace netloc axis_interconnect_0_M01_AXIS 1 2 3 680 750 NJ 750 1440
preplace netloc axis_interconnect_0_M02_AXIS 1 2 3 670 760 NJ 760 1430
preplace netloc axis_interconnect_0_M03_AXIS 1 4 1 1520 370n
preplace netloc axis_interconnect_0_M04_AXIS 1 2 3 660 970 NJ 970 1460
preplace netloc axis_interconnect_0_M05_AXIS 1 4 3 NJ 430 NJ 430 NJ
preplace netloc delay_buffer_0_M00_AXIS 1 3 1 970 160n
preplace netloc nrPDSCH_top_0_symbolsOut 1 3 1 960 80n
preplace netloc s00_axi1_1 1 0 5 20J 1070 NJ 1070 640J 1050 1060J 1030 1480J
preplace netloc s00_axi2_1 1 0 2 NJ 760 270J
preplace netloc s00_axis_1 1 0 4 NJ 1080 NJ 1080 590J 770 990
preplace netloc txBuildGrid_wrp_v2_5_0_gridOut 1 3 1 980 100n
preplace netloc tx_buffer_top_0_m00_axis 1 3 2 1070 770 1430
levelinfo -pg 1 0 150 450 820 1250 1720 2040 2160
pagesize -pg 1 -db -bbox -sgen -200 0 2310 1470
"
}

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: rx_reset
proc create_hier_cell_rx_reset { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_rx_reset() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir I -from 94 -to 0 Din
  create_bd_pin -dir I -from 0 -to 0 Op1
  create_bd_pin -dir O -from 0 -to 0 Res
  create_bd_pin -dir I -type clk s01_axis_aclk

  # Create instance: sync_0, and set properties
  set sync_0 [ create_bd_cell -type ip -vlnv xilinx.com:user:sync:1.0 sync_0 ]
  set_property CONFIG.SRC_INPUT_REG {0} $sync_0


  # Create instance: util_vector_logic_0, and set properties
  set util_vector_logic_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_0 ]
  set_property CONFIG.C_SIZE {1} $util_vector_logic_0


  # Create instance: util_vector_logic_1, and set properties
  set util_vector_logic_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_vector_logic:2.0 util_vector_logic_1 ]
  set_property -dict [list \
    CONFIG.C_OPERATION {not} \
    CONFIG.C_SIZE {1} \
  ] $util_vector_logic_1


  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]
  set_property CONFIG.CONST_VAL {0} $xlconstant_0


  # Create instance: xlslice_0, and set properties
  set xlslice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlslice:1.0 xlslice_0 ]
  set_property -dict [list \
    CONFIG.DIN_FROM {1} \
    CONFIG.DIN_TO {1} \
    CONFIG.DIN_WIDTH {95} \
  ] $xlslice_0


  # Create port connections
  connect_bd_net -net Din_1 [get_bd_pins Din] [get_bd_pins xlslice_0/Din]
  connect_bd_net -net Op1_1 [get_bd_pins Op1] [get_bd_pins util_vector_logic_0/Op1]
  connect_bd_net -net s01_axis_aclk_1 [get_bd_pins s01_axis_aclk] [get_bd_pins sync_0/dest_clk]
  connect_bd_net -net sync_0_dest_out [get_bd_pins sync_0/dest_out] [get_bd_pins util_vector_logic_0/Op2]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins Res] [get_bd_pins util_vector_logic_0/Res]
  connect_bd_net -net util_vector_logic_1_Res [get_bd_pins sync_0/src_in] [get_bd_pins util_vector_logic_1/Res]
  connect_bd_net -net xlconstant_0_dout [get_bd_pins sync_0/src_clk] [get_bd_pins xlconstant_0/dout]
  connect_bd_net -net xlslice_0_Dout [get_bd_pins util_vector_logic_1/Op1] [get_bd_pins xlslice_0/Dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: rx_blocks
proc create_hier_cell_rx_blocks { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_rx_blocks() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S00_AXI3

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S10_AXIS

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S_AXI_CTRL

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 m00_axis

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s00_axi

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s00_axi1

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s00_axi2

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s00_axi4

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s00_axi5

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s00_axi6

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s00_axi7

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s00_axi8

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s00_axi9

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 s00_axi10

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s00_axis

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 s01_axis


  # Create pins
  create_bd_pin -dir I -from 94 -to 0 Din
  create_bd_pin -dir I -from 0 -to 0 Op1
  create_bd_pin -dir I -from 0 -to 0 Op2
  create_bd_pin -dir O -from 0 -to 0 Res
  create_bd_pin -dir I -type rst axi_resetn
  create_bd_pin -dir I coreClk
  create_bd_pin -dir O m00_axis_tlast1
  create_bd_pin -dir I -type clk s00_axi_aclk
  create_bd_pin -dir I -type clk s00_axi_aclk1
  create_bd_pin -dir I -type rst s00_axi_aresetn
  create_bd_pin -dir I -from 0 -to 0 -type rst s00_axi_aresetn1
  create_bd_pin -dir I -type clk s01_axis_aclk
  create_bd_pin -dir I triggerIn
  create_bd_pin -dir I triggerin_TEMP

  # Create instance: CE_5G_NR_v2_0, and set properties
  set CE_5G_NR_v2_0 [ create_bd_cell -type ip -vlnv xilinx.com:user:CE_5G_NR_v2:1.0 CE_5G_NR_v2_0 ]

  # Create instance: CFO_correction_TOP_0, and set properties
  set CFO_correction_TOP_0 [ create_bd_cell -type ip -vlnv xilinx.com:user:CFO_correction_TOP:1.0 CFO_correction_TOP_0 ]

  # Create instance: FILTER_DS_x8_v3_0, and set properties
  set FILTER_DS_x8_v3_0 [ create_bd_cell -type ip -vlnv user.org:user:FILTER_DS_x8_v3:1.0 FILTER_DS_x8_v3_0 ]

  # Create instance: LDPCdecoder_v2_0, and set properties
  set LDPCdecoder_v2_0 [ create_bd_cell -type ip -vlnv xilinx.com:user:LDPCdecoder_v2:1.0 LDPCdecoder_v2_0 ]

  # Create instance: MMSE_EQ_V2_0, and set properties
  set MMSE_EQ_V2_0 [ create_bd_cell -type ip -vlnv user.org:user:MMSE_EQ_V2:1.0 MMSE_EQ_V2_0 ]

  # Create instance: OFDM_demod_TOP_v3_wr_0, and set properties
  set OFDM_demod_TOP_v3_wr_0 [ create_bd_cell -type ip -vlnv xilinx.com:user:OFDM_demod_TOP_v3_wrp_0:1.0 OFDM_demod_TOP_v3_wr_0 ]

  # Create instance: PTRS_5G_IP_0, and set properties
  set PTRS_5G_IP_0 [ create_bd_cell -type ip -vlnv xilinx.com:user:PTRS_5G_IP:1.0 PTRS_5G_IP_0 ]

  # Create instance: SSB_TOP_v3_0, and set properties
  set SSB_TOP_v3_0 [ create_bd_cell -type ip -vlnv xilinx.com:user:SSB_TOP_v3:1.0 SSB_TOP_v3_0 ]

  # Create instance: automatic_gain_contr_0, and set properties
  set automatic_gain_contr_0 [ create_bd_cell -type ip -vlnv user.org:user:automatic_gain_control:1.0 automatic_gain_contr_0 ]
  set_property CONFIG.AXIS_TDATA_WIDTH {64} $automatic_gain_contr_0


  # Create instance: axis_broadcaster_0, and set properties
  set axis_broadcaster_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_broadcaster:1.1 axis_broadcaster_0 ]
  set_property -dict [list \
    CONFIG.HAS_TLAST {1} \
    CONFIG.M01_TDATA_REMAP {tdata[63:32]} \
    CONFIG.M_TDATA_NUM_BYTES {4} \
    CONFIG.S_TDATA_NUM_BYTES {8} \
  ] $axis_broadcaster_0


  # Create instance: axis_combiner_0, and set properties
  set axis_combiner_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_combiner:1.1 axis_combiner_0 ]

  # Create instance: axis_interconnect_0, and set properties
  set axis_interconnect_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_interconnect:2.1 axis_interconnect_0 ]
  set_property -dict [list \
    CONFIG.NUM_MI {10} \
    CONFIG.NUM_SI {12} \
    CONFIG.ROUTING_MODE {1} \
  ] $axis_interconnect_0


  # Create instance: axis_register_slice_0, and set properties
  set axis_register_slice_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_register_slice:1.1 axis_register_slice_0 ]

  # Create instance: axis_register_slice_1, and set properties
  set axis_register_slice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_register_slice:1.1 axis_register_slice_1 ]

  # Create instance: demapper_top_0, and set properties
  set demapper_top_0 [ create_bd_cell -type ip -vlnv xilinx.com:user:demapper_top:1.0 demapper_top_0 ]

  # Create instance: enable_recv
  create_hier_cell_enable_recv $hier_obj enable_recv

  # Create instance: packetizer_RT_0, and set properties
  set packetizer_RT_0 [ create_bd_cell -type ip -vlnv xilinx.com:user:packetizer_RT:1.0 packetizer_RT_0 ]

  # Create instance: soft_reset
  create_hier_cell_soft_reset $hier_obj soft_reset

  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]

  # Create interface connections
  connect_bd_intf_net -intf_net CE_5G_NR_v2_0_m00_axis [get_bd_intf_pins CE_5G_NR_v2_0/m00_axis] [get_bd_intf_pins MMSE_EQ_V2_0/s00_axis]
  connect_bd_intf_net -intf_net CE_5G_NR_v2_0_m01_axis [get_bd_intf_pins CE_5G_NR_v2_0/m01_axis] [get_bd_intf_pins MMSE_EQ_V2_0/s01_axis]
  connect_bd_intf_net -intf_net CE_5G_NR_v2_0_m02_axis [get_bd_intf_pins CE_5G_NR_v2_0/m02_axis] [get_bd_intf_pins MMSE_EQ_V2_0/s02_axis]
  connect_bd_intf_net -intf_net CE_5G_NR_v2_0_m03_axis [get_bd_intf_pins CE_5G_NR_v2_0/m03_axis] [get_bd_intf_pins MMSE_EQ_V2_0/s03_axis]
  connect_bd_intf_net -intf_net CFO_correction_TOP_0_m00_axis [get_bd_intf_pins CFO_correction_TOP_0/m00_axis] [get_bd_intf_pins FILTER_DS_x8_v3_0/S00_AXIS]
  connect_bd_intf_net -intf_net CFO_correction_TOP_0_m01_axis [get_bd_intf_pins CFO_correction_TOP_0/m01_axis] [get_bd_intf_pins FILTER_DS_x8_v3_0/S01_AXIS]
  connect_bd_intf_net -intf_net Conn1 [get_bd_intf_pins s00_axi] [get_bd_intf_pins CE_5G_NR_v2_0/s00_axi]
  connect_bd_intf_net -intf_net Conn2 [get_bd_intf_pins s00_axi1] [get_bd_intf_pins CFO_correction_TOP_0/s00_axi]
  connect_bd_intf_net -intf_net Conn3 [get_bd_intf_pins s00_axi10] [get_bd_intf_pins automatic_gain_contr_0/s00_axi]
  connect_bd_intf_net -intf_net Conn4 [get_bd_intf_pins S00_AXI3] [get_bd_intf_pins FILTER_DS_x8_v3_0/S00_AXI]
  connect_bd_intf_net -intf_net Conn5 [get_bd_intf_pins s00_axi4] [get_bd_intf_pins LDPCdecoder_v2_0/s00_axi]
  connect_bd_intf_net -intf_net Conn6 [get_bd_intf_pins s00_axi5] [get_bd_intf_pins MMSE_EQ_V2_0/s00_axi]
  connect_bd_intf_net -intf_net Conn7 [get_bd_intf_pins s00_axi6] [get_bd_intf_pins OFDM_demod_TOP_v3_wr_0/s00_axi]
  connect_bd_intf_net -intf_net Conn8 [get_bd_intf_pins s00_axi7] [get_bd_intf_pins PTRS_5G_IP_0/s00_axi]
  connect_bd_intf_net -intf_net Conn9 [get_bd_intf_pins s00_axi8] [get_bd_intf_pins SSB_TOP_v3_0/s00_axi]
  connect_bd_intf_net -intf_net Conn12 [get_bd_intf_pins M_AXIS] [get_bd_intf_pins axis_combiner_0/M_AXIS]
  connect_bd_intf_net -intf_net Conn13 [get_bd_intf_pins S_AXI_CTRL] [get_bd_intf_pins axis_interconnect_0/S_AXI_CTRL]
  connect_bd_intf_net -intf_net Conn14 [get_bd_intf_pins s00_axi9] [get_bd_intf_pins packetizer_RT_0/s00_axi]
  connect_bd_intf_net -intf_net Conn15 [get_bd_intf_pins m00_axis] [get_bd_intf_pins packetizer_RT_0/m00_axis]
  connect_bd_intf_net -intf_net FILTER_DS_x8_v3_0_M00_AXIS [get_bd_intf_pins FILTER_DS_x8_v3_0/M00_AXIS] [get_bd_intf_pins SSB_TOP_v3_0/s00_axis]
  connect_bd_intf_net -intf_net FILTER_DS_x8_v3_0_M01_AXIS [get_bd_intf_pins FILTER_DS_x8_v3_0/M01_AXIS] [get_bd_intf_pins SSB_TOP_v3_0/s01_axis]
  connect_bd_intf_net -intf_net FILTER_DS_x8_v3_0_M02_AXIS [get_bd_intf_pins FILTER_DS_x8_v3_0/M02_AXIS] [get_bd_intf_pins SSB_TOP_v3_0/s02_axis]
  connect_bd_intf_net -intf_net FILTER_DS_x8_v3_0_M03_AXIS [get_bd_intf_pins FILTER_DS_x8_v3_0/M03_AXIS] [get_bd_intf_pins SSB_TOP_v3_0/s03_axis]
  connect_bd_intf_net -intf_net LDPCdecoder_v2_0_m00_axis [get_bd_intf_pins LDPCdecoder_v2_0/m00_axis] [get_bd_intf_pins axis_interconnect_0/S08_AXIS]
  connect_bd_intf_net -intf_net LDPCdecoder_v2_0_m01_axis [get_bd_intf_pins LDPCdecoder_v2_0/m01_axis] [get_bd_intf_pins axis_interconnect_0/S09_AXIS]
  connect_bd_intf_net -intf_net MMSE_EQ_V2_0_m00_axis [get_bd_intf_pins MMSE_EQ_V2_0/m00_axis] [get_bd_intf_pins PTRS_5G_IP_0/s00_axis]
  connect_bd_intf_net -intf_net MMSE_EQ_V2_0_m01_axis [get_bd_intf_pins MMSE_EQ_V2_0/m01_axis] [get_bd_intf_pins PTRS_5G_IP_0/s01_axis]
  connect_bd_intf_net -intf_net MMSE_EQ_V2_0_m02_axis [get_bd_intf_pins MMSE_EQ_V2_0/m02_axis] [get_bd_intf_pins packetizer_RT_0/s00_axis]
  connect_bd_intf_net -intf_net MMSE_EQ_V2_0_m03_axis [get_bd_intf_pins MMSE_EQ_V2_0/m03_axis] [get_bd_intf_pins packetizer_RT_0/s01_axis]
  connect_bd_intf_net -intf_net OFDM_demod_TOP_v3_wr_0_m00_axis [get_bd_intf_pins OFDM_demod_TOP_v3_wr_0/m00_axis] [get_bd_intf_pins axis_interconnect_0/S02_AXIS]
  connect_bd_intf_net -intf_net OFDM_demod_TOP_v3_wr_0_m01_axis [get_bd_intf_pins OFDM_demod_TOP_v3_wr_0/m01_axis] [get_bd_intf_pins axis_interconnect_0/S03_AXIS]
  connect_bd_intf_net -intf_net PTRS_5G_IP_0_m00_axis [get_bd_intf_pins PTRS_5G_IP_0/m00_axis] [get_bd_intf_pins axis_interconnect_0/S04_AXIS]
  connect_bd_intf_net -intf_net PTRS_5G_IP_0_m01_axis [get_bd_intf_pins PTRS_5G_IP_0/m01_axis] [get_bd_intf_pins axis_interconnect_0/S05_AXIS]
  connect_bd_intf_net -intf_net S10_AXIS_1 [get_bd_intf_pins axis_broadcaster_0/M00_AXIS] [get_bd_intf_pins axis_interconnect_0/S10_AXIS]
  connect_bd_intf_net -intf_net S10_AXIS_2 [get_bd_intf_pins S10_AXIS] [get_bd_intf_pins axis_broadcaster_0/S_AXIS]
  connect_bd_intf_net -intf_net SSB_TOP_v3_0_m00_axis [get_bd_intf_pins SSB_TOP_v3_0/m00_axis] [get_bd_intf_pins axis_interconnect_0/S00_AXIS]
  connect_bd_intf_net -intf_net SSB_TOP_v3_0_m01_axis [get_bd_intf_pins SSB_TOP_v3_0/m01_axis] [get_bd_intf_pins axis_interconnect_0/S01_AXIS]
  connect_bd_intf_net -intf_net automatic_gain_contr_0_m00_axis [get_bd_intf_pins CFO_correction_TOP_0/s00_axis] [get_bd_intf_pins automatic_gain_contr_0/m00_axis]
  connect_bd_intf_net -intf_net automatic_gain_contr_0_m01_axis [get_bd_intf_pins CFO_correction_TOP_0/s01_axis] [get_bd_intf_pins automatic_gain_contr_0/m01_axis]
  connect_bd_intf_net -intf_net axis_broadcaster_0_M01_AXIS [get_bd_intf_pins axis_broadcaster_0/M01_AXIS] [get_bd_intf_pins axis_interconnect_0/S11_AXIS]
  connect_bd_intf_net -intf_net axis_interconnect_0_M00_AXIS [get_bd_intf_pins OFDM_demod_TOP_v3_wr_0/s00_axis] [get_bd_intf_pins axis_interconnect_0/M00_AXIS]
  connect_bd_intf_net -intf_net axis_interconnect_0_M01_AXIS [get_bd_intf_pins OFDM_demod_TOP_v3_wr_0/s01_axis] [get_bd_intf_pins axis_interconnect_0/M01_AXIS]
  connect_bd_intf_net -intf_net axis_interconnect_0_M02_AXIS [get_bd_intf_pins CE_5G_NR_v2_0/s00_axis] [get_bd_intf_pins axis_interconnect_0/M02_AXIS]
  connect_bd_intf_net -intf_net axis_interconnect_0_M03_AXIS [get_bd_intf_pins CE_5G_NR_v2_0/s01_axis] [get_bd_intf_pins axis_interconnect_0/M03_AXIS]
  connect_bd_intf_net -intf_net axis_interconnect_0_M04_AXIS [get_bd_intf_pins axis_interconnect_0/M04_AXIS] [get_bd_intf_pins demapper_top_0/s00_axis]
  connect_bd_intf_net -intf_net axis_interconnect_0_M05_AXIS [get_bd_intf_pins axis_interconnect_0/M05_AXIS] [get_bd_intf_pins demapper_top_0/s01_axis]
  connect_bd_intf_net -intf_net axis_interconnect_0_M06_AXIS [get_bd_intf_pins axis_interconnect_0/M06_AXIS] [get_bd_intf_pins axis_register_slice_0/S_AXIS]
  connect_bd_intf_net -intf_net axis_interconnect_0_M07_AXIS [get_bd_intf_pins axis_interconnect_0/M07_AXIS] [get_bd_intf_pins axis_register_slice_1/S_AXIS]
  connect_bd_intf_net -intf_net axis_interconnect_0_M08_AXIS [get_bd_intf_pins axis_combiner_0/S00_AXIS] [get_bd_intf_pins axis_interconnect_0/M08_AXIS]
  connect_bd_intf_net -intf_net axis_interconnect_0_M09_AXIS [get_bd_intf_pins axis_combiner_0/S01_AXIS] [get_bd_intf_pins axis_interconnect_0/M09_AXIS]
  connect_bd_intf_net -intf_net axis_register_slice_0_M_AXIS [get_bd_intf_pins LDPCdecoder_v2_0/s00_axis] [get_bd_intf_pins axis_register_slice_0/M_AXIS]
  connect_bd_intf_net -intf_net axis_register_slice_1_M_AXIS [get_bd_intf_pins LDPCdecoder_v2_0/s01_axis] [get_bd_intf_pins axis_register_slice_1/M_AXIS]
  connect_bd_intf_net -intf_net demapper_top_0_m00_axis [get_bd_intf_pins axis_interconnect_0/S06_AXIS] [get_bd_intf_pins demapper_top_0/m00_axis]
  connect_bd_intf_net -intf_net demapper_top_0_m01_axis [get_bd_intf_pins axis_interconnect_0/S07_AXIS] [get_bd_intf_pins demapper_top_0/m01_axis]
  connect_bd_intf_net -intf_net s00_axi2_1 [get_bd_intf_pins s00_axi2] [get_bd_intf_pins demapper_top_0/s00_axi]
  connect_bd_intf_net -intf_net s00_axis_1 [get_bd_intf_pins s00_axis] [get_bd_intf_pins automatic_gain_contr_0/s00_axis]
  connect_bd_intf_net -intf_net s01_axis_1 [get_bd_intf_pins s01_axis] [get_bd_intf_pins automatic_gain_contr_0/s01_axis]

  # Create port connections
  connect_bd_net -net CE_5G_NR_v2_0_CE_triggerOut [get_bd_pins CE_5G_NR_v2_0/CE_triggerOut] [get_bd_pins MMSE_EQ_V2_0/CE_triggerIn]
  connect_bd_net -net CE_5G_NR_v2_0_nVarOut [get_bd_pins CE_5G_NR_v2_0/nVarOut] [get_bd_pins MMSE_EQ_V2_0/nVar_In] [get_bd_pins packetizer_RT_0/nVar]
  connect_bd_net -net CE_5G_NR_v2_0_nVarValidOut [get_bd_pins CE_5G_NR_v2_0/nVarValidOut] [get_bd_pins MMSE_EQ_V2_0/nVar_In_Valid] [get_bd_pins packetizer_RT_0/nVarValidIn]
  connect_bd_net -net CE_5G_NR_v2_0_triggerOut [get_bd_pins CE_5G_NR_v2_0/triggerOut] [get_bd_pins MMSE_EQ_V2_0/triggerIn]
  connect_bd_net -net Din_1 [get_bd_pins Din] [get_bd_pins enable_recv/Din]
  connect_bd_net -net OFDM_demod_TOP_v3_wr_0_countOFDMOut [get_bd_pins CE_5G_NR_v2_0/countOFDMIn] [get_bd_pins OFDM_demod_TOP_v3_wr_0/countOFDMOut]
  connect_bd_net -net OFDM_demod_TOP_v3_wr_0_countSCOut [get_bd_pins CE_5G_NR_v2_0/countSCIn] [get_bd_pins OFDM_demod_TOP_v3_wr_0/countSCOut]
  connect_bd_net -net OFDM_demod_TOP_v3_wr_0_triggerOut [get_bd_pins CE_5G_NR_v2_0/triggerIn] [get_bd_pins OFDM_demod_TOP_v3_wr_0/triggerOut]
  connect_bd_net -net Op1_1 [get_bd_pins Op1] [get_bd_pins soft_reset/Op1]
  connect_bd_net -net Op2_1 [get_bd_pins Op2] [get_bd_pins soft_reset/Op2]
  connect_bd_net -net SSB_TOP_v3_0_cfoOut [get_bd_pins CFO_correction_TOP_0/angleIn] [get_bd_pins SSB_TOP_v3_0/cfoOut] [get_bd_pins packetizer_RT_0/cfoIn]
  connect_bd_net -net SSB_TOP_v3_0_cfoValidOut [get_bd_pins CFO_correction_TOP_0/angleIn_valid] [get_bd_pins SSB_TOP_v3_0/cfoValidOut] [get_bd_pins packetizer_RT_0/cfoValidIn]
  connect_bd_net -net SSB_TOP_v3_0_m00_axis_tlast [get_bd_pins SSB_TOP_v3_0/m00_axis_tlast] [get_bd_pins automatic_gain_contr_0/slot_finished] [get_bd_pins axis_interconnect_0/S00_AXIS_tlast]
  connect_bd_net -net SSB_TOP_v3_0_m00_axis_tvalid [get_bd_pins SSB_TOP_v3_0/m00_axis_tvalid] [get_bd_pins enable_recv/Op1]
  connect_bd_net -net SSB_TOP_v3_0_pssenergyOut [get_bd_pins SSB_TOP_v3_0/pssenergyOut] [get_bd_pins packetizer_RT_0/pssEnergy]
  connect_bd_net -net SSB_TOP_v3_0_pssenergyValidOut [get_bd_pins SSB_TOP_v3_0/pssenergyValidOut] [get_bd_pins packetizer_RT_0/pssEnergyValid]
  connect_bd_net -net SSB_TOP_v3_0_triggerOut [get_bd_pins SSB_TOP_v3_0/triggerOut] [get_bd_pins automatic_gain_contr_0/slot_detected]
  connect_bd_net -net axi_resetn_1 [get_bd_pins axi_resetn] [get_bd_pins automatic_gain_contr_0/axi_resetn]
  connect_bd_net -net coreClk_1 [get_bd_pins coreClk] [get_bd_pins LDPCdecoder_v2_0/coreClk]
  connect_bd_net -net demapper_top_0_triggerOut [get_bd_pins LDPCdecoder_v2_0/triggerIn] [get_bd_pins demapper_top_0/triggerOut]
  connect_bd_net -net packetizer_RT_0_m00_axis_tlast [get_bd_pins m00_axis_tlast1] [get_bd_pins packetizer_RT_0/m00_axis_tlast]
  connect_bd_net -net s00_axi_aclk1_1 [get_bd_pins s00_axi_aclk1] [get_bd_pins packetizer_RT_0/s00_axi_aclk]
  connect_bd_net -net s00_axi_aclk_1 [get_bd_pins s00_axi_aclk] [get_bd_pins CE_5G_NR_v2_0/s00_axi_aclk] [get_bd_pins CFO_correction_TOP_0/s00_axi_aclk] [get_bd_pins FILTER_DS_x8_v3_0/s00_axi_aclk] [get_bd_pins LDPCdecoder_v2_0/s00_axi_aclk] [get_bd_pins MMSE_EQ_V2_0/s00_axi_aclk] [get_bd_pins OFDM_demod_TOP_v3_wr_0/s00_axi_aclk] [get_bd_pins PTRS_5G_IP_0/s00_axi_aclk] [get_bd_pins SSB_TOP_v3_0/s00_axi_aclk] [get_bd_pins axis_interconnect_0/S_AXI_CTRL_ACLK] [get_bd_pins demapper_top_0/s00_axi_aclk]
  connect_bd_net -net s00_axi_aresetn1_1 [get_bd_pins s00_axi_aresetn1] [get_bd_pins packetizer_RT_0/s00_axi_aresetn]
  connect_bd_net -net s00_axi_aresetn_1 [get_bd_pins s00_axi_aresetn] [get_bd_pins CE_5G_NR_v2_0/s00_axi_aresetn] [get_bd_pins CFO_correction_TOP_0/s00_axi_aresetn] [get_bd_pins FILTER_DS_x8_v3_0/s00_axi_aresetn] [get_bd_pins LDPCdecoder_v2_0/s00_axi_aresetn] [get_bd_pins MMSE_EQ_V2_0/s00_axi_aresetn] [get_bd_pins OFDM_demod_TOP_v3_wr_0/s00_axi_aresetn] [get_bd_pins PTRS_5G_IP_0/s00_axi_aresetn] [get_bd_pins SSB_TOP_v3_0/s00_axi_aresetn] [get_bd_pins axis_interconnect_0/S_AXI_CTRL_ARESETN] [get_bd_pins demapper_top_0/s00_axi_aresetn]
  connect_bd_net -net s01_axis_aclk_1 [get_bd_pins s01_axis_aclk] [get_bd_pins CE_5G_NR_v2_0/m00_axis_aclk] [get_bd_pins CE_5G_NR_v2_0/m01_axis_aclk] [get_bd_pins CE_5G_NR_v2_0/m02_axis_aclk] [get_bd_pins CE_5G_NR_v2_0/m03_axis_aclk] [get_bd_pins CE_5G_NR_v2_0/s00_axis_aclk] [get_bd_pins CE_5G_NR_v2_0/s01_axis_aclk] [get_bd_pins CFO_correction_TOP_0/aclk] [get_bd_pins FILTER_DS_x8_v3_0/m00_axis_aclk] [get_bd_pins FILTER_DS_x8_v3_0/m01_axis_aclk] [get_bd_pins FILTER_DS_x8_v3_0/m02_axis_aclk] [get_bd_pins FILTER_DS_x8_v3_0/m03_axis_aclk] [get_bd_pins FILTER_DS_x8_v3_0/s00_axis_aclk] [get_bd_pins FILTER_DS_x8_v3_0/s01_axis_aclk] [get_bd_pins LDPCdecoder_v2_0/m00_axis_aclk] [get_bd_pins LDPCdecoder_v2_0/m01_axis_aclk] [get_bd_pins LDPCdecoder_v2_0/s00_axis_aclk] [get_bd_pins LDPCdecoder_v2_0/s01_axis_aclk] [get_bd_pins MMSE_EQ_V2_0/m00_axis_aclk] [get_bd_pins MMSE_EQ_V2_0/m01_axis_aclk] [get_bd_pins MMSE_EQ_V2_0/m02_axis_aclk] [get_bd_pins MMSE_EQ_V2_0/m03_axis_aclk] [get_bd_pins MMSE_EQ_V2_0/s00_axis_aclk] [get_bd_pins MMSE_EQ_V2_0/s01_axis_aclk] [get_bd_pins MMSE_EQ_V2_0/s02_axis_aclk] [get_bd_pins MMSE_EQ_V2_0/s03_axis_aclk] [get_bd_pins OFDM_demod_TOP_v3_wr_0/m00_axis_aclk] [get_bd_pins OFDM_demod_TOP_v3_wr_0/m01_axis_aclk] [get_bd_pins OFDM_demod_TOP_v3_wr_0/s00_axis_aclk] [get_bd_pins OFDM_demod_TOP_v3_wr_0/s01_axis_aclk] [get_bd_pins PTRS_5G_IP_0/m00_axis_aclk] [get_bd_pins PTRS_5G_IP_0/m01_axis_aclk] [get_bd_pins PTRS_5G_IP_0/s00_axis_aclk] [get_bd_pins PTRS_5G_IP_0/s01_axis_aclk] [get_bd_pins SSB_TOP_v3_0/m00_axis_aclk] [get_bd_pins SSB_TOP_v3_0/m01_axis_aclk] [get_bd_pins SSB_TOP_v3_0/s00_axis_aclk] [get_bd_pins SSB_TOP_v3_0/s01_axis_aclk] [get_bd_pins SSB_TOP_v3_0/s02_axis_aclk] [get_bd_pins SSB_TOP_v3_0/s03_axis_aclk] [get_bd_pins automatic_gain_contr_0/aclk] [get_bd_pins axis_broadcaster_0/aclk] [get_bd_pins axis_combiner_0/aclk] [get_bd_pins axis_interconnect_0/ACLK] [get_bd_pins axis_interconnect_0/M00_AXIS_ACLK] [get_bd_pins axis_interconnect_0/M01_AXIS_ACLK] [get_bd_pins axis_interconnect_0/M02_AXIS_ACLK] [get_bd_pins axis_interconnect_0/M03_AXIS_ACLK] [get_bd_pins axis_interconnect_0/M04_AXIS_ACLK] [get_bd_pins axis_interconnect_0/M05_AXIS_ACLK] [get_bd_pins axis_interconnect_0/M06_AXIS_ACLK] [get_bd_pins axis_interconnect_0/M07_AXIS_ACLK] [get_bd_pins axis_interconnect_0/M08_AXIS_ACLK] [get_bd_pins axis_interconnect_0/M09_AXIS_ACLK] [get_bd_pins axis_interconnect_0/S00_AXIS_ACLK] [get_bd_pins axis_interconnect_0/S01_AXIS_ACLK] [get_bd_pins axis_interconnect_0/S02_AXIS_ACLK] [get_bd_pins axis_interconnect_0/S03_AXIS_ACLK] [get_bd_pins axis_interconnect_0/S04_AXIS_ACLK] [get_bd_pins axis_interconnect_0/S05_AXIS_ACLK] [get_bd_pins axis_interconnect_0/S06_AXIS_ACLK] [get_bd_pins axis_interconnect_0/S07_AXIS_ACLK] [get_bd_pins axis_interconnect_0/S08_AXIS_ACLK] [get_bd_pins axis_interconnect_0/S09_AXIS_ACLK] [get_bd_pins axis_interconnect_0/S10_AXIS_ACLK] [get_bd_pins axis_interconnect_0/S11_AXIS_ACLK] [get_bd_pins axis_register_slice_0/aclk] [get_bd_pins axis_register_slice_1/aclk] [get_bd_pins demapper_top_0/m00_axis_aclk] [get_bd_pins demapper_top_0/m01_axis_aclk] [get_bd_pins demapper_top_0/s00_axis_aclk] [get_bd_pins demapper_top_0/s01_axis_aclk] [get_bd_pins enable_recv/s01_axis_aclk] [get_bd_pins packetizer_RT_0/aclk] [get_bd_pins soft_reset/s01_axis_aclk]
  connect_bd_net -net s01_axis_aresetn_1 [get_bd_pins Res] [get_bd_pins CE_5G_NR_v2_0/m00_axis_aresetn] [get_bd_pins CE_5G_NR_v2_0/m01_axis_aresetn] [get_bd_pins CE_5G_NR_v2_0/m02_axis_aresetn] [get_bd_pins CE_5G_NR_v2_0/m03_axis_aresetn] [get_bd_pins CE_5G_NR_v2_0/s00_axis_aresetn] [get_bd_pins CE_5G_NR_v2_0/s01_axis_aresetn] [get_bd_pins CFO_correction_TOP_0/aresetn] [get_bd_pins CFO_correction_TOP_0/cfo_resetn] [get_bd_pins FILTER_DS_x8_v3_0/m00_axis_aresetn] [get_bd_pins FILTER_DS_x8_v3_0/m01_axis_aresetn] [get_bd_pins FILTER_DS_x8_v3_0/m02_axis_aresetn] [get_bd_pins FILTER_DS_x8_v3_0/m03_axis_aresetn] [get_bd_pins FILTER_DS_x8_v3_0/s00_axis_aresetn] [get_bd_pins FILTER_DS_x8_v3_0/s01_axis_aresetn] [get_bd_pins LDPCdecoder_v2_0/m00_axis_aresetn] [get_bd_pins LDPCdecoder_v2_0/m01_axis_aresetn] [get_bd_pins LDPCdecoder_v2_0/s00_axis_aresetn] [get_bd_pins LDPCdecoder_v2_0/s01_axis_aresetn] [get_bd_pins MMSE_EQ_V2_0/m00_axis_aresetn] [get_bd_pins MMSE_EQ_V2_0/m01_axis_aresetn] [get_bd_pins MMSE_EQ_V2_0/m02_axis_aresetn] [get_bd_pins MMSE_EQ_V2_0/m03_axis_aresetn] [get_bd_pins MMSE_EQ_V2_0/s00_axis_aresetn] [get_bd_pins MMSE_EQ_V2_0/s01_axis_aresetn] [get_bd_pins MMSE_EQ_V2_0/s02_axis_aresetn] [get_bd_pins MMSE_EQ_V2_0/s03_axis_aresetn] [get_bd_pins OFDM_demod_TOP_v3_wr_0/m00_axis_aresetn] [get_bd_pins OFDM_demod_TOP_v3_wr_0/m01_axis_aresetn] [get_bd_pins OFDM_demod_TOP_v3_wr_0/s00_axis_aresetn] [get_bd_pins OFDM_demod_TOP_v3_wr_0/s01_axis_aresetn] [get_bd_pins PTRS_5G_IP_0/m00_axis_aresetn] [get_bd_pins PTRS_5G_IP_0/m01_axis_aresetn] [get_bd_pins PTRS_5G_IP_0/s00_axis_aresetn] [get_bd_pins PTRS_5G_IP_0/s01_axis_aresetn] [get_bd_pins SSB_TOP_v3_0/m00_axis_aresetn] [get_bd_pins SSB_TOP_v3_0/m01_axis_aresetn] [get_bd_pins SSB_TOP_v3_0/s00_axis_aresetn] [get_bd_pins SSB_TOP_v3_0/s01_axis_aresetn] [get_bd_pins SSB_TOP_v3_0/s02_axis_aresetn] [get_bd_pins SSB_TOP_v3_0/s03_axis_aresetn] [get_bd_pins automatic_gain_contr_0/aresetn] [get_bd_pins axis_broadcaster_0/aresetn] [get_bd_pins axis_combiner_0/aresetn] [get_bd_pins axis_interconnect_0/ARESETN] [get_bd_pins axis_interconnect_0/M00_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/M01_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/M02_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/M03_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/M04_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/M05_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/M06_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/M07_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/M08_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/M09_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/S00_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/S01_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/S02_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/S03_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/S04_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/S05_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/S06_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/S07_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/S08_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/S09_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/S10_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/S11_AXIS_ARESETN] [get_bd_pins axis_register_slice_0/aresetn] [get_bd_pins axis_register_slice_1/aresetn] [get_bd_pins demapper_top_0/m00_axis_aresetn] [get_bd_pins demapper_top_0/m01_axis_aresetn] [get_bd_pins demapper_top_0/s00_axis_aresetn] [get_bd_pins demapper_top_0/s01_axis_aresetn] [get_bd_pins packetizer_RT_0/aresetn] [get_bd_pins soft_reset/Res]
  connect_bd_net -net triggerIn_1 [get_bd_pins triggerIn] [get_bd_pins packetizer_RT_0/triggerIn]
  connect_bd_net -net util_vector_logic_0_Res [get_bd_pins axis_interconnect_0/S00_AXIS_tvalid] [get_bd_pins axis_interconnect_0/S01_AXIS_tvalid] [get_bd_pins enable_recv/Res]
  connect_bd_net -net xlconstant_0_dout [get_bd_pins CFO_correction_TOP_0/s00_axis_tvalid] [get_bd_pins CFO_correction_TOP_0/s01_axis_tvalid] [get_bd_pins OFDM_demod_TOP_v3_wr_0/GlobalStart] [get_bd_pins xlconstant_0/dout]

  # Perform GUI Layout
  regenerate_bd_layout -hierarchy [get_bd_cells /rx_blocks] -layout_string {
   "ActiveEmotionalView":"Default View",
   "Default View_ScaleFactor":"1.0",
   "Default View_TopLeft":"5220,1242",
   "ExpandedHierarchyInLayout":"/rx_blocks/soft_reset",
   "guistr":"# # String gsaved with Nlview 7.0r4  2019-12-20 bk=1.5203 VDI=41 GEI=36 GUI=JA:10.0 TLS
#  -string -flagsOSRD
preplace port s00_axi -pg 1 -lvl 0 -x -900 -y 1100 -defaultsOSRD
preplace port s00_axi1 -pg 1 -lvl 0 -x -900 -y 1750 -defaultsOSRD
preplace port s00_axi2 -pg 1 -lvl 0 -x -900 -y 120 -defaultsOSRD
preplace port S00_AXI3 -pg 1 -lvl 0 -x -900 -y 1220 -defaultsOSRD
preplace port s00_axi5 -pg 1 -lvl 0 -x -900 -y 580 -defaultsOSRD
preplace port s00_axi6 -pg 1 -lvl 0 -x -900 -y 1120 -defaultsOSRD
preplace port s00_axi7 -pg 1 -lvl 0 -x -900 -y 1270 -defaultsOSRD
preplace port s00_axi8 -pg 1 -lvl 0 -x -900 -y 1950 -defaultsOSRD
preplace port s00_axis -pg 1 -lvl 0 -x -900 -y 1620 -defaultsOSRD
preplace port s01_axis -pg 1 -lvl 0 -x -900 -y 1730 -defaultsOSRD
preplace port s00_axi4 -pg 1 -lvl 0 -x -900 -y 540 -defaultsOSRD
preplace port M_AXIS -pg 1 -lvl 12 -x 6850 -y 1540 -defaultsOSRD
preplace port S_AXI_CTRL -pg 1 -lvl 0 -x -900 -y 1590 -defaultsOSRD
preplace port s00_axi9 -pg 1 -lvl 0 -x -900 -y 1160 -defaultsOSRD
preplace port m00_axis -pg 1 -lvl 12 -x 6850 -y 1020 -defaultsOSRD
preplace port s00_axi10 -pg 1 -lvl 0 -x -900 -y 1320 -defaultsOSRD
preplace port S10_AXIS -pg 1 -lvl 0 -x -900 -y 1970 -defaultsOSRD
preplace port port-id_triggerin_TEMP -pg 1 -lvl 0 -x -900 -y 260 -defaultsOSRD
preplace port port-id_s01_axis_aclk -pg 1 -lvl 0 -x -900 -y 1770 -defaultsOSRD
preplace port port-id_s00_axi_aclk -pg 1 -lvl 0 -x -900 -y 1790 -defaultsOSRD
preplace port port-id_s00_axi_aresetn -pg 1 -lvl 0 -x -900 -y 1810 -defaultsOSRD
preplace port port-id_coreClk -pg 1 -lvl 0 -x -900 -y 560 -defaultsOSRD
preplace port port-id_s00_axi_aclk1 -pg 1 -lvl 0 -x -900 -y 1180 -defaultsOSRD
preplace port port-id_triggerIn -pg 1 -lvl 0 -x -900 -y 1530 -defaultsOSRD
preplace port port-id_m00_axis_tlast1 -pg 1 -lvl 12 -x 6850 -y 1040 -defaultsOSRD
preplace port port-id_axi_resetn -pg 1 -lvl 0 -x -900 -y 1370 -defaultsOSRD
preplace portBus Op1 -pg 1 -lvl 0 -x -900 -y 1550 -defaultsOSRD
preplace portBus Op2 -pg 1 -lvl 0 -x -900 -y 1570 -defaultsOSRD
preplace portBus s00_axi_aresetn1 -pg 1 -lvl 0 -x -900 -y 1200 -defaultsOSRD
preplace portBus Din -pg 1 -lvl 0 -x -900 -y 20 -defaultsOSRD
preplace portBus Res -pg 1 -lvl 12 -x 6850 -y 1160 -defaultsOSRD
preplace inst OFDM_demod_TOP_v3_wr_0 -pg 1 -lvl 6 -x 1460 -y 1180 -defaultsOSRD
preplace inst FILTER_DS_x8_v3_0 -pg 1 -lvl 3 -x 170 -y 1350 -defaultsOSRD
preplace inst CE_5G_NR_v2_0 -pg 1 -lvl 7 -x 2070 -y 1560 -defaultsOSRD
preplace inst MMSE_EQ_V2_0 -pg 1 -lvl 7 -x 2070 -y 870 -defaultsOSRD
preplace inst PTRS_5G_IP_0 -pg 1 -lvl 8 -x 3110 -y 1290 -defaultsOSRD
preplace inst soft_reset -pg 1 -lvl 11 -x 5930 -y 1452 -defaultsOSRD
preplace inst xlconstant_0 -pg 1 -lvl 2 -x -190 -y 1670 -defaultsOSRD
preplace inst axis_combiner_0 -pg 1 -lvl 11 -x 5930 -y 1804 -defaultsOSRD
preplace inst LDPCdecoder_v2_0 -pg 1 -lvl 11 -x 5930 -y 1190 -defaultsOSRD
preplace inst axis_interconnect_0 -pg 1 -lvl 9 -x 3720 -y 1920 -defaultsOSRD
preplace inst CFO_correction_TOP_0 -pg 1 -lvl 2 -x -190 -y 1350 -defaultsOSRD
preplace inst axis_register_slice_0 -pg 1 -lvl 10 -x 5530 -y 1080 -defaultsOSRD
preplace inst axis_register_slice_1 -pg 1 -lvl 10 -x 5530 -y 1240 -defaultsOSRD
preplace inst enable_recv -pg 1 -lvl 5 -x 1040 -y 1290 -defaultsOSRD
preplace inst axis_broadcaster_0 -pg 1 -lvl 8 -x 3110 -y 2080 -defaultsOSRD
preplace inst SSB_TOP_v3_0 -pg 1 -lvl 4 -x 600 -y 1350 -defaultsOSRD
preplace inst automatic_gain_contr_0 -pg 1 -lvl 1 -x -560 -y 1330 -defaultsOSRD
preplace inst packetizer_RT_0 -pg 1 -lvl 8 -x 3110 -y 880 -defaultsOSRD
preplace inst demapper_top_0 -pg 1 -lvl 9 -x 3720 -y 1000 -defaultsOSRD
preplace inst soft_reset|util_vector_logic_0 -pg 1 -lvl 3 -x 6520 -y 1472 -defaultsOSRD
preplace inst soft_reset|util_vector_logic_1 -pg 1 -lvl 1 -x 6020 -y 1522 -defaultsOSRD
preplace inst soft_reset|sync_0 -pg 1 -lvl 2 -x 6270 -y 1622 -defaultsOSRD
preplace inst soft_reset|xlconstant_0 -pg 1 -lvl 1 -x 6020 -y 1622 -defaultsOSRD
preplace netloc CE_5G_NR_v2_0_CE_triggerOut 1 6 2 1810 530 2280
preplace netloc CE_5G_NR_v2_0_nVarOut 1 6 2 1820 540 2320J
preplace netloc CE_5G_NR_v2_0_nVarValidOut 1 6 2 1850 1270 2380J
preplace netloc CE_5G_NR_v2_0_triggerOut 1 6 2 1800 520 2290
preplace netloc Din_1 1 0 5 NJ 20 N 20 NJ 20 NJ 20 800
preplace netloc OFDM_demod_TOP_v3_wr_0_countOFDMOut 1 6 1 1650 1190n
preplace netloc OFDM_demod_TOP_v3_wr_0_countSCOut 1 6 1 1680 1170n
preplace netloc OFDM_demod_TOP_v3_wr_0_triggerOut 1 6 1 1630 1230n
preplace netloc Op1_1 1 0 11 NJ 1550 -350 1580 -40J 1620 380J 1600 N 1600 N 1600 1700 480 NJ 480 NJ 480 3960 1340 5660
preplace netloc Op2_1 1 0 11 NJ 1570 -400 1600 NJ 1600 350J 1610 N 1610 N 1610 1690 420 NJ 420 NJ 420 3970J 1350 5650
preplace netloc SSB_TOP_v3_0_cfoOut 1 1 7 -350 1060 N 1060 340J 1030 820 440 N 440 N 440 2440J
preplace netloc SSB_TOP_v3_0_cfoValidOut 1 1 7 -360 1040 N 1040 310J 1010 830 510 N 510 N 510 2420J
preplace netloc SSB_TOP_v3_0_m00_axis_tlast 1 0 9 -780 1110 -380 1070 N 1070 350 1040 870 1030 1240 970 1640 1220 2400 1080 3350
preplace netloc SSB_TOP_v3_0_m00_axis_tvalid 1 4 1 870 1270n
preplace netloc SSB_TOP_v3_0_pssenergyOut 1 4 4 810 450 N 450 N 450 2460
preplace netloc SSB_TOP_v3_0_pssenergyValidOut 1 4 4 860 460 N 460 N 460 2430
preplace netloc SSB_TOP_v3_0_triggerOut 1 0 5 -760 1730 NJ 1730 NJ 1730 410J 1630 820
preplace netloc axi_resetn_1 1 0 1 -800 1360n
preplace netloc coreClk_1 1 0 11 -870J 530 N 530 NJ 530 NJ 530 780 430 N 430 N 430 NJ 430 N 430 N 430 5700
preplace netloc packetizer_RT_0_m00_axis_tlast 1 8 4 3270 770 N 770 5670 970 6830J
preplace netloc s00_axi_aclk1_1 1 0 8 -870J 1070 -420 990 NJ 990 NJ 990 N 990 1190 940 1760 1240 2340J
preplace netloc s00_axi_aclk_1 1 0 11 -770J 1530 -410 1150 30 1110 390 1050 N 1050 1230 900 1770 1260 2410 1070 3270 1230 3940 1320 5710
preplace netloc s00_axi_aresetn1_1 1 0 8 -850J 1080 -410 1000 NJ 1000 NJ 1000 N 1000 1200 960 1780 1200 2330J
preplace netloc s00_axi_aresetn_1 1 0 11 -780J 1520 -380 1160 20 1100 400 1090 N 1090 1180 950 1730 1840 2460 1500 3360 1190 3940 1160 5640
preplace netloc s01_axis_aclk_1 1 0 11 -790J 1540 -340 1530 -10 1120 410 1100 850 1100 1210 910 1740 1850 2430 1510 3310 780 3950 1330 5640
preplace netloc s01_axis_aresetn_1 1 0 12 -770 1460 -400 1520 0 1130 380 1070 N 1070 1220 920 1750 1860 2440 1490 3340 1200 4000 990 5670 990 6810
preplace netloc triggerIn_1 1 0 8 -880J 1560 -370 1590 -50J 1630 400J 1620 N 1620 N 1620 1760 1310 2360J
preplace netloc util_vector_logic_0_Res 1 5 4 1170 980 1720 1230 2390 1090 3330
preplace netloc xlconstant_0_dout 1 1 5 -340 1170 -30 1080 360 1060 N 1060 1200
preplace netloc demapper_top_0_triggerOut 1 9 2 3930J 1000 5650
preplace netloc CE_5G_NR_v2_0_m00_axis 1 6 2 1840 550 2250
preplace netloc CE_5G_NR_v2_0_m01_axis 1 6 2 1790 1810 2270
preplace netloc CE_5G_NR_v2_0_m02_axis 1 6 2 1830 1290 2240
preplace netloc CE_5G_NR_v2_0_m03_axis 1 6 2 1840 1280 2260
preplace netloc CFO_correction_TOP_0_m00_axis 1 2 1 -20 1210n
preplace netloc CFO_correction_TOP_0_m01_axis 1 2 1 10 1230n
preplace netloc Conn1 1 0 7 NJ 1100 -390 1050 NJ 1050 320 1020 N 1020 1160 1410 N
preplace netloc Conn2 1 0 2 -830J 1200 -420
preplace netloc Conn3 1 0 1 -840 1300n
preplace netloc Conn4 1 0 3 -840J 1190 -430 1180 10J
preplace netloc Conn5 1 0 11 NJ 540 N 540 NJ 540 NJ 540 790 470 N 470 N 470 NJ 470 N 470 N 470 5690
preplace netloc Conn6 1 0 7 NJ 580 N 580 NJ 580 NJ 580 N 580 N 580 1710
preplace netloc Conn7 1 0 6 NJ 1120 -370 1090 NJ 1090 370J 1080 N 1080 1190
preplace netloc Conn8 1 0 8 -860J 1060 -430 980 NJ 980 NJ 980 N 980 1160 930 1630 1210 NJ
preplace netloc Conn9 1 0 4 -810J 1090 -400 1030 NJ 1030 330J
preplace netloc Conn12 1 11 1 6810 1540n
preplace netloc Conn13 1 0 9 NJ 1590 -430 1610 NJ 1610 310J 1640 N 1640 N 1640 1630 1830 2470J 1550 NJ
preplace netloc Conn14 1 0 8 -880J 520 N 520 NJ 520 NJ 520 770 420 N 420 1650 410 2470J
preplace netloc Conn15 1 8 4 3280 790 N 790 5640 980 6820J
preplace netloc FILTER_DS_x8_v3_0_M00_AXIS 1 3 1 310 1160n
preplace netloc FILTER_DS_x8_v3_0_M01_AXIS 1 3 1 350 1180n
preplace netloc FILTER_DS_x8_v3_0_M02_AXIS 1 3 1 370 1200n
preplace netloc FILTER_DS_x8_v3_0_M03_AXIS 1 3 1 340 1220n
preplace netloc LDPCdecoder_v2_0_m00_axis 1 8 4 3370 750 NJ 750 5720 950 6800J
preplace netloc LDPCdecoder_v2_0_m01_axis 1 8 4 3380 760 N 760 5710 960 6790
preplace netloc MMSE_EQ_V2_0_m00_axis 1 7 1 2370 830n
preplace netloc MMSE_EQ_V2_0_m01_axis 1 7 1 2350 850n
preplace netloc MMSE_EQ_V2_0_m02_axis 1 7 1 2300 750n
preplace netloc MMSE_EQ_V2_0_m03_axis 1 7 1 2310 770n
preplace netloc OFDM_demod_TOP_v3_wr_0_m00_axis 1 6 3 1660 1820 2450 1480 3320
preplace netloc OFDM_demod_TOP_v3_wr_0_m01_axis 1 6 3 1710 1250 2340 1470 3330
preplace netloc PTRS_5G_IP_0_m00_axis 1 8 1 3290 1270n
preplace netloc PTRS_5G_IP_0_m01_axis 1 8 1 3280 1290n
preplace netloc S10_AXIS_1 1 8 1 3280 1570n
preplace netloc S10_AXIS_2 1 0 8 N 1970 N 1970 N 1970 N 1970 N 1970 N 1970 N 1970 2260
preplace netloc SSB_TOP_v3_0_m00_axis 1 4 5 840 1010 1250 990 1670 1190 2300 1110 3300
preplace netloc SSB_TOP_v3_0_m01_axis 1 4 5 770 1370 N 1370 1710 1300 2420 1100 3320
preplace netloc automatic_gain_contr_0_m00_axis 1 1 1 -430 1240n
preplace netloc automatic_gain_contr_0_m01_axis 1 1 1 -370 1280n
preplace netloc axis_broadcaster_0_M01_AXIS 1 8 1 3300 1590n
preplace netloc axis_interconnect_0_M00_AXIS 1 5 5 1270 500 N 500 N 500 NJ 500 3890
preplace netloc axis_interconnect_0_M01_AXIS 1 5 5 1260 490 N 490 N 490 NJ 490 3920
preplace netloc axis_interconnect_0_M02_AXIS 1 6 4 1840 2620 NJ 2620 NJ 2620 3880
preplace netloc axis_interconnect_0_M03_AXIS 1 6 4 1850 2610 NJ 2610 NJ 2610 3870
preplace netloc axis_interconnect_0_M06_AXIS 1 9 1 3930 1060n
preplace netloc axis_interconnect_0_M07_AXIS 1 9 1 3980 1220n
preplace netloc axis_interconnect_0_M08_AXIS 1 9 2 3990 1580 5660
preplace netloc axis_interconnect_0_M09_AXIS 1 9 2 4000 1600 5650
preplace netloc axis_register_slice_0_M_AXIS 1 10 1 5640 1050n
preplace netloc axis_register_slice_1_M_AXIS 1 10 1 5680 1070n
preplace netloc s00_axis_1 1 0 1 -850 1260n
preplace netloc s01_axis_1 1 0 1 -820 1280n
preplace netloc demapper_top_0_m00_axis 1 8 2 3400 1220 3880
preplace netloc demapper_top_0_m01_axis 1 8 2 3390 1210 3870
preplace netloc axis_interconnect_0_M04_AXIS 1 8 2 3390 800 3910
preplace netloc axis_interconnect_0_M05_AXIS 1 8 2 3400 810 3900
preplace netloc s00_axi2_1 1 0 9 N 120 N 120 N 120 N 120 N 120 N 120 N 120 N 120 3360
preplace netloc soft_reset|Op1_1 1 0 3 NJ 1462 NJ 1462 N
preplace netloc soft_reset|Op2_1 1 0 1 NJ 1522
preplace netloc soft_reset|s01_axis_aclk_1 1 0 2 NJ 1682 6170
preplace netloc soft_reset|sync_0_dest_out 1 2 1 6370 1482n
preplace netloc soft_reset|util_vector_logic_0_Res 1 3 1 N 1472
preplace netloc soft_reset|util_vector_logic_1_Res 1 1 1 6170 1522n
preplace netloc soft_reset|xlconstant_0_dout 1 1 1 NJ 1622
levelinfo -pg 1 -900 -560 -190 170 600 1040 1460 2070 3110 3720 5530 5930 6850
levelinfo -hier soft_reset * 6020 6270 6520 *
pagesize -pg 1 -db -bbox -sgen -1110 -80 7020 3820
pagesize -hier soft_reset -db -bbox -sgen 5840 1402 6700 1692
"
}

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: reset_block
proc create_hier_cell_reset_block { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_reset_block() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins

  # Create pins
  create_bd_pin -dir I -type rst ext_reset_in
  create_bd_pin -dir O -from 0 -to 0 -type rst peripheral_aresetn
  create_bd_pin -dir O -from 0 -to 0 -type rst peripheral_aresetn1
  create_bd_pin -dir O -from 0 -to 0 -type rst peripheral_aresetn2
  create_bd_pin -dir O -from 0 -to 0 -type rst peripheral_aresetn3
  create_bd_pin -dir O -from 0 -to 0 -type rst peripheral_aresetn4
  create_bd_pin -dir O -from 0 -to 0 -type rst peripheral_reset
  create_bd_pin -dir I -type clk slowest_sync_clk
  create_bd_pin -dir I -type clk slowest_sync_clk1
  create_bd_pin -dir I -type clk slowest_sync_clk2
  create_bd_pin -dir I -type clk slowest_sync_clk3
  create_bd_pin -dir I -type clk slowest_sync_clk4

  # Create instance: rst_ddr4_0_333M1, and set properties
  set rst_ddr4_0_333M1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 rst_ddr4_0_333M1 ]

  # Create instance: rst_ps8_0_96M, and set properties
  set rst_ps8_0_96M [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 rst_ps8_0_96M ]

  # Create instance: rst_ps8_0_96M1, and set properties
  set rst_ps8_0_96M1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 rst_ps8_0_96M1 ]

  # Create instance: rst_ps8_0_96M2, and set properties
  set rst_ps8_0_96M2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 rst_ps8_0_96M2 ]

  # Create instance: rst_ps8_0_96M3, and set properties
  set rst_ps8_0_96M3 [ create_bd_cell -type ip -vlnv xilinx.com:ip:proc_sys_reset:5.0 rst_ps8_0_96M3 ]

  # Create port connections
  connect_bd_net -net rst_ddr4_0_333M1_peripheral_aresetn [get_bd_pins peripheral_aresetn4] [get_bd_pins rst_ddr4_0_333M1/peripheral_aresetn]
  connect_bd_net -net rst_ddr4_0_333M1_peripheral_reset [get_bd_pins peripheral_reset] [get_bd_pins rst_ddr4_0_333M1/peripheral_reset]
  connect_bd_net -net rst_ps8_0_96M1_peripheral_aresetn [get_bd_pins peripheral_aresetn1] [get_bd_pins rst_ps8_0_96M1/peripheral_aresetn]
  connect_bd_net -net rst_ps8_0_96M2_peripheral_aresetn [get_bd_pins peripheral_aresetn3] [get_bd_pins rst_ps8_0_96M2/peripheral_aresetn]
  connect_bd_net -net rst_ps8_0_96M3_peripheral_aresetn [get_bd_pins peripheral_aresetn2] [get_bd_pins rst_ps8_0_96M3/peripheral_aresetn]
  connect_bd_net -net rst_ps8_0_96M_peripheral_aresetn [get_bd_pins peripheral_aresetn] [get_bd_pins rst_ps8_0_96M/peripheral_aresetn]
  connect_bd_net -net slowest_sync_clk1_1 [get_bd_pins slowest_sync_clk1] [get_bd_pins rst_ps8_0_96M1/slowest_sync_clk]
  connect_bd_net -net slowest_sync_clk2_1 [get_bd_pins slowest_sync_clk2] [get_bd_pins rst_ps8_0_96M3/slowest_sync_clk]
  connect_bd_net -net slowest_sync_clk3_1 [get_bd_pins slowest_sync_clk3] [get_bd_pins rst_ps8_0_96M2/slowest_sync_clk]
  connect_bd_net -net slowest_sync_clk4_1 [get_bd_pins slowest_sync_clk4] [get_bd_pins rst_ddr4_0_333M1/slowest_sync_clk]
  connect_bd_net -net zynq_ultra_ps_e_0_pl_clk0 [get_bd_pins slowest_sync_clk] [get_bd_pins rst_ps8_0_96M/slowest_sync_clk]
  connect_bd_net -net zynq_ultra_ps_e_0_pl_resetn0 [get_bd_pins ext_reset_in] [get_bd_pins rst_ddr4_0_333M1/ext_reset_in] [get_bd_pins rst_ps8_0_96M/ext_reset_in] [get_bd_pins rst_ps8_0_96M1/ext_reset_in] [get_bd_pins rst_ps8_0_96M2/ext_reset_in] [get_bd_pins rst_ps8_0_96M3/ext_reset_in]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: eth_dma_internal
proc create_hier_cell_eth_dma_internal { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_eth_dma_internal() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:aximm_rtl:1.0 M00_AXI

  create_bd_intf_pin -mode Master -vlnv xilinx.com:interface:axis_rtl:1.0 M_AXIS

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S02_AXI

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:axis_rtl:1.0 S_AXIS_S2MM1

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:aximm_rtl:1.0 S_AXI_LITE


  # Create pins
  create_bd_pin -dir I -type clk aclk
  create_bd_pin -dir I -type rst aresetn
  create_bd_pin -dir I -type rst axi_resetn
  create_bd_pin -dir O -from 1 -to 0 dout
  create_bd_pin -dir I -type clk s_axi_lite_aclk

  # Create instance: axi_eth_dma_internal, and set properties
  set axi_eth_dma_internal [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_dma:7.1 axi_eth_dma_internal ]
  set_property -dict [list \
    CONFIG.c_addr_width {32} \
    CONFIG.c_include_mm2s_dre {0} \
    CONFIG.c_include_s2mm_dre {0} \
    CONFIG.c_include_sg {0} \
    CONFIG.c_m_axi_mm2s_data_width {64} \
    CONFIG.c_m_axi_s2mm_data_width {64} \
    CONFIG.c_m_axis_mm2s_tdata_width {64} \
    CONFIG.c_mm2s_burst_size {16} \
    CONFIG.c_s_axis_s2mm_tdata_width {64} \
    CONFIG.c_sg_length_width {26} \
  ] $axi_eth_dma_internal


  # Create instance: axi_smc, and set properties
  set axi_smc [ create_bd_cell -type ip -vlnv xilinx.com:ip:smartconnect:1.0 axi_smc ]
  set_property -dict [list \
    CONFIG.NUM_CLKS {2} \
    CONFIG.NUM_SI {3} \
  ] $axi_smc


  # Create instance: axis_data_fifo_0, and set properties
  set axis_data_fifo_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_data_fifo:2.0 axis_data_fifo_0 ]
  set_property -dict [list \
    CONFIG.FIFO_DEPTH {4096} \
    CONFIG.HAS_TLAST {1} \
    CONFIG.HAS_WR_DATA_COUNT {1} \
  ] $axis_data_fifo_0


  # Create instance: axis_register_slice_2, and set properties
  set axis_register_slice_2 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_register_slice:1.1 axis_register_slice_2 ]
  set_property CONFIG.TUSER_WIDTH {1} $axis_register_slice_2


  # Create instance: xlconcat_0, and set properties
  set xlconcat_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconcat:2.1 xlconcat_0 ]
  set_property -dict [list \
    CONFIG.IN2_WIDTH {6} \
    CONFIG.NUM_PORTS {2} \
  ] $xlconcat_0


  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]
  set_property CONFIG.CONST_VAL {0} $xlconstant_0


  # Create interface connections
  connect_bd_intf_net -intf_net Conn1 [get_bd_intf_pins S_AXI_LITE] [get_bd_intf_pins axi_eth_dma_internal/S_AXI_LITE]
  connect_bd_intf_net -intf_net Conn2 [get_bd_intf_pins M00_AXI] [get_bd_intf_pins axi_smc/M00_AXI]
  connect_bd_intf_net -intf_net Conn4 [get_bd_intf_pins M_AXIS] [get_bd_intf_pins axis_register_slice_2/M_AXIS]
  connect_bd_intf_net -intf_net S02_AXI_1 [get_bd_intf_pins S02_AXI] [get_bd_intf_pins axi_smc/S02_AXI]
  connect_bd_intf_net -intf_net S_AXIS_S2MM1_1 [get_bd_intf_pins S_AXIS_S2MM1] [get_bd_intf_pins axis_data_fifo_0/S_AXIS]
  connect_bd_intf_net -intf_net axi_eth_dma_internal_M_AXIS_MM2S [get_bd_intf_pins axi_eth_dma_internal/M_AXIS_MM2S] [get_bd_intf_pins axis_register_slice_2/S_AXIS]
  connect_bd_intf_net -intf_net axi_eth_dma_internal_M_AXI_MM2S [get_bd_intf_pins axi_eth_dma_internal/M_AXI_MM2S] [get_bd_intf_pins axi_smc/S00_AXI]
  connect_bd_intf_net -intf_net axi_eth_dma_internal_M_AXI_S2MM [get_bd_intf_pins axi_eth_dma_internal/M_AXI_S2MM] [get_bd_intf_pins axi_smc/S01_AXI]
  connect_bd_intf_net -intf_net axis_data_fifo_0_M_AXIS [get_bd_intf_pins axi_eth_dma_internal/S_AXIS_S2MM] [get_bd_intf_pins axis_data_fifo_0/M_AXIS]

  # Create port connections
  connect_bd_net -net aclk_1 [get_bd_pins aclk] [get_bd_pins axi_eth_dma_internal/m_axi_mm2s_aclk] [get_bd_pins axi_eth_dma_internal/m_axi_s2mm_aclk] [get_bd_pins axi_smc/aclk1] [get_bd_pins axis_data_fifo_0/s_axis_aclk] [get_bd_pins axis_register_slice_2/aclk]
  connect_bd_net -net aresetn_1 [get_bd_pins aresetn] [get_bd_pins axis_data_fifo_0/s_axis_aresetn] [get_bd_pins axis_register_slice_2/aresetn]
  connect_bd_net -net axi_eth_dma_internal_mm2s_introut [get_bd_pins axi_eth_dma_internal/mm2s_introut] [get_bd_pins xlconcat_0/In0]
  connect_bd_net -net axi_eth_dma_internal_s2mm_introut [get_bd_pins axi_eth_dma_internal/s2mm_introut] [get_bd_pins xlconcat_0/In1]
  connect_bd_net -net axi_resetn_1 [get_bd_pins axi_resetn] [get_bd_pins axi_eth_dma_internal/axi_resetn] [get_bd_pins axi_smc/aresetn]
  connect_bd_net -net s_axi_lite_aclk_1 [get_bd_pins s_axi_lite_aclk] [get_bd_pins axi_eth_dma_internal/s_axi_lite_aclk] [get_bd_pins axi_smc/aclk]
  connect_bd_net -net xlconcat_0_dout [get_bd_pins dout] [get_bd_pins xlconcat_0/dout]
  connect_bd_net -net xlconstant_0_dout [get_bd_pins axis_register_slice_2/s_axis_tuser] [get_bd_pins xlconstant_0/dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  
# Hierarchical cell: MTS_Block
proc create_hier_cell_MTS_Block { parentCell nameHier } {

  variable script_folder

  if { $parentCell eq "" || $nameHier eq "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2092 -severity "ERROR" "create_hier_cell_MTS_Block() - Empty argument(s)!"}
     return
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj

  # Create cell and set as current instance
  set hier_obj [create_bd_cell -type hier $nameHier]
  current_bd_instance $hier_obj

  # Create interface pins
  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 CLK_DIFF_PL_CLK

  create_bd_intf_pin -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 CLK_DIFF_SYSREF_CLK


  # Create pins
  create_bd_pin -dir O adc_clk
  create_bd_pin -dir O -type clk clk_out3
  create_bd_pin -dir O dac_clk
  create_bd_pin -dir O user_sysref_adc
  create_bd_pin -dir O user_sysref_dac

  # Create instance: clk_wiz_0, and set properties
  set clk_wiz_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:clk_wiz:6.0 clk_wiz_0 ]
  set_property -dict [list \
    CONFIG.CLKIN1_JITTER_PS {81.38} \
    CONFIG.CLKOUT1_DRIVES {Buffer} \
    CONFIG.CLKOUT1_JITTER {94.365} \
    CONFIG.CLKOUT1_PHASE_ERROR {84.619} \
    CONFIG.CLKOUT1_REQUESTED_OUT_FREQ {245.76} \
    CONFIG.CLKOUT1_REQUESTED_PHASE {22.5} \
    CONFIG.CLKOUT2_DRIVES {Buffer} \
    CONFIG.CLKOUT2_JITTER {94.365} \
    CONFIG.CLKOUT2_PHASE_ERROR {84.619} \
    CONFIG.CLKOUT2_REQUESTED_OUT_FREQ {245.76} \
    CONFIG.CLKOUT2_REQUESTED_PHASE {22.5} \
    CONFIG.CLKOUT2_USED {true} \
    CONFIG.CLKOUT3_DRIVES {Buffer} \
    CONFIG.CLKOUT3_JITTER {79.724} \
    CONFIG.CLKOUT3_PHASE_ERROR {84.619} \
    CONFIG.CLKOUT3_REQUESTED_OUT_FREQ {614.4} \
    CONFIG.CLKOUT3_REQUESTED_PHASE {0} \
    CONFIG.CLKOUT3_USED {true} \
    CONFIG.CLKOUT4_DRIVES {Buffer} \
    CONFIG.CLKOUT4_JITTER {93.367} \
    CONFIG.CLKOUT4_PHASE_ERROR {98.137} \
    CONFIG.CLKOUT4_REQUESTED_OUT_FREQ {491.52} \
    CONFIG.CLKOUT4_USED {false} \
    CONFIG.CLKOUT5_DRIVES {Buffer} \
    CONFIG.CLKOUT6_DRIVES {Buffer} \
    CONFIG.CLKOUT7_DRIVES {Buffer} \
    CONFIG.ENABLE_CLOCK_MONITOR {false} \
    CONFIG.MMCM_CLKFBOUT_MULT_F {10.000} \
    CONFIG.MMCM_CLKIN1_PERIOD {8.138} \
    CONFIG.MMCM_CLKIN2_PERIOD {10.000} \
    CONFIG.MMCM_CLKOUT0_DIVIDE_F {5.000} \
    CONFIG.MMCM_CLKOUT0_PHASE {27.000} \
    CONFIG.MMCM_CLKOUT1_DIVIDE {5} \
    CONFIG.MMCM_CLKOUT1_PHASE {27.000} \
    CONFIG.MMCM_CLKOUT2_DIVIDE {2} \
    CONFIG.MMCM_CLKOUT2_PHASE {0.000} \
    CONFIG.MMCM_CLKOUT3_DIVIDE {1} \
    CONFIG.MMCM_DIVCLK_DIVIDE {1} \
    CONFIG.NUM_OUT_CLKS {3} \
    CONFIG.OPTIMIZE_CLOCKING_STRUCTURE_EN {true} \
    CONFIG.PRIMITIVE {MMCM} \
    CONFIG.PRIM_IN_FREQ {122.88} \
    CONFIG.SECONDARY_SOURCE {Single_ended_clock_capable_pin} \
    CONFIG.USE_LOCKED {false} \
    CONFIG.USE_PHASE_ALIGNMENT {false} \
    CONFIG.USE_RESET {false} \
  ] $clk_wiz_0


  # Create instance: sync_0, and set properties
  set sync_0 [ create_bd_cell -type ip -vlnv xilinx.com:user:sync:1.0 sync_0 ]
  set_property -dict [list \
    CONFIG.DEST_SYNC_FF {2} \
    CONFIG.SRC_INPUT_REG {0} \
  ] $sync_0


  # Create instance: sync_1, and set properties
  set sync_1 [ create_bd_cell -type ip -vlnv xilinx.com:user:sync:1.0 sync_1 ]
  set_property -dict [list \
    CONFIG.DEST_SYNC_FF {2} \
    CONFIG.SRC_INPUT_REG {0} \
  ] $sync_1


  # Create instance: sync_2, and set properties
  set sync_2 [ create_bd_cell -type ip -vlnv xilinx.com:user:sync:1.0 sync_2 ]
  set_property -dict [list \
    CONFIG.DEST_SYNC_FF {2} \
    CONFIG.SRC_INPUT_REG {0} \
  ] $sync_2


  # Create instance: util_ds_buf_0, and set properties
  set util_ds_buf_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_ds_buf:2.2 util_ds_buf_0 ]

  # Create instance: util_ds_buf_1, and set properties
  set util_ds_buf_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_ds_buf:2.2 util_ds_buf_1 ]

  # Create instance: xlconstant_0, and set properties
  set xlconstant_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:xlconstant:1.1 xlconstant_0 ]
  set_property CONFIG.CONST_VAL {0} $xlconstant_0


  # Create interface connections
  connect_bd_intf_net -intf_net CLK_DIFF_PL_CLK_1 [get_bd_intf_pins CLK_DIFF_PL_CLK] [get_bd_intf_pins util_ds_buf_0/CLK_IN_D]
  connect_bd_intf_net -intf_net Conn1 [get_bd_intf_pins CLK_DIFF_SYSREF_CLK] [get_bd_intf_pins util_ds_buf_1/CLK_IN_D]

  # Create port connections
  connect_bd_net -net clk_wiz_0_clk_out1 [get_bd_pins dac_clk] [get_bd_pins clk_wiz_0/clk_out1] [get_bd_pins sync_1/dest_clk]
  connect_bd_net -net clk_wiz_0_clk_out3 [get_bd_pins adc_clk] [get_bd_pins clk_wiz_0/clk_out2] [get_bd_pins sync_2/dest_clk]
  connect_bd_net -net clk_wiz_0_clk_out4 [get_bd_pins clk_out3] [get_bd_pins clk_wiz_0/clk_out3]
  connect_bd_net -net sync_0_dest_out [get_bd_pins sync_0/dest_out] [get_bd_pins sync_1/src_in] [get_bd_pins sync_2/src_in]
  connect_bd_net -net sync_1_dest_out [get_bd_pins user_sysref_dac] [get_bd_pins sync_1/dest_out]
  connect_bd_net -net sync_2_dest_out [get_bd_pins user_sysref_adc] [get_bd_pins sync_2/dest_out]
  connect_bd_net -net util_ds_buf_0_IBUF_OUT [get_bd_pins clk_wiz_0/clk_in1] [get_bd_pins sync_0/dest_clk] [get_bd_pins util_ds_buf_0/IBUF_OUT]
  connect_bd_net -net util_ds_buf_1_IBUF_OUT [get_bd_pins sync_0/src_in] [get_bd_pins util_ds_buf_1/IBUF_OUT]
  connect_bd_net -net xlconstant_0_dout [get_bd_pins sync_0/src_clk] [get_bd_pins sync_1/src_clk] [get_bd_pins sync_2/src_clk] [get_bd_pins xlconstant_0/dout]

  # Restore current instance
  current_bd_instance $oldCurInst
}
  variable script_folder

  if { $parentCell eq "" } {
     set parentCell [get_bd_cells /]
  }

  # Get object for parentCell
  set parentObj [get_bd_cells $parentCell]
  if { $parentObj == "" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2090 -severity "ERROR" "Unable to find parent cell <$parentCell>!"}
     return
  }

  # Make sure parentObj is hier blk
  set parentType [get_property TYPE $parentObj]
  if { $parentType ne "hier" } {
     catch {common::send_gid_msg -ssname BD::TCL -id 2091 -severity "ERROR" "Parent <$parentObj> has TYPE = <$parentType>. Expected to be <hier>."}
     return
  }

  # Save current instance; Restore later
  set oldCurInst [current_bd_instance .]

  # Set parent object as current
  current_bd_instance $parentObj


  # Create interface ports
  set GPIO_0 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:gpio_rtl:1.0 GPIO_0 ]

  set adc2_clk_0 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 adc2_clk_0 ]

  set dac0_clk_0 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 dac0_clk_0 ]

  set pl_clk [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 pl_clk ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {122880000} \
   ] $pl_clk

  set pl_sysref [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 pl_sysref ]
  set_property -dict [ list \
   CONFIG.FREQ_HZ {6875000} \
   ] $pl_sysref

  set sysref_in_0 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:display_usp_rf_data_converter:diff_pins_rtl:1.0 sysref_in_0 ]

  set user_mgt_si570_sysclk [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_clock_rtl:1.0 user_mgt_si570_sysclk ]

  set vin2_01_0 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vin2_01_0 ]

  set vin2_23_0 [ create_bd_intf_port -mode Slave -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vin2_23_0 ]

  set vout00_0 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vout00_0 ]

  set vout02_0 [ create_bd_intf_port -mode Master -vlnv xilinx.com:interface:diff_analog_io_rtl:1.0 vout02_0 ]


  # Create ports
  set xcvr_rxn_0 [ create_bd_port -dir I xcvr_rxn_0 ]
  set xcvr_rxp_0 [ create_bd_port -dir I xcvr_rxp_0 ]
  set xcvr_txn_0 [ create_bd_port -dir O xcvr_txn_0 ]
  set xcvr_txp_0 [ create_bd_port -dir O xcvr_txp_0 ]

  # Create instance: MTS_Block
  create_hier_cell_MTS_Block [current_bd_instance .] MTS_Block

  # Create instance: axi_gpio_spi_mux, and set properties
  set axi_gpio_spi_mux [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_gpio:2.0 axi_gpio_spi_mux ]
  set_property -dict [list \
    CONFIG.C_ALL_OUTPUTS {1} \
    CONFIG.C_ALL_OUTPUTS_2 {0} \
    CONFIG.C_GPIO2_WIDTH {16} \
    CONFIG.C_GPIO_WIDTH {2} \
    CONFIG.C_IS_DUAL {1} \
  ] $axi_gpio_spi_mux


  # Create instance: axi_interconnect_7, and set properties
  set axi_interconnect_7 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axi_interconnect:2.1 axi_interconnect_7 ]
  set_property -dict [list \
    CONFIG.ENABLE_ADVANCED_OPTIONS {1} \
    CONFIG.NUM_MI {25} \
    CONFIG.S00_HAS_DATA_FIFO {0} \
    CONFIG.STRATEGY {0} \
  ] $axi_interconnect_7


  # Create instance: axis_interconnect_0, and set properties
  set axis_interconnect_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_interconnect:2.1 axis_interconnect_0 ]
  set_property -dict [list \
    CONFIG.ARB_ALGORITHM {1} \
    CONFIG.ARB_ON_MAX_XFERS {1} \
    CONFIG.ARB_ON_TLAST {1} \
    CONFIG.ENABLE_ADVANCED_OPTIONS {0} \
    CONFIG.NUM_MI {1} \
    CONFIG.NUM_SI {3} \
    CONFIG.ROUTING_MODE {0} \
  ] $axis_interconnect_0


  # Create instance: axis_register_slice_1, and set properties
  set axis_register_slice_1 [ create_bd_cell -type ip -vlnv xilinx.com:ip:axis_register_slice:1.1 axis_register_slice_1 ]
  set_property CONFIG.TUSER_WIDTH {1} $axis_register_slice_1


  # Create instance: eth_dma_internal
  create_hier_cell_eth_dma_internal [current_bd_instance .] eth_dma_internal

  # Create instance: reset_block
  create_hier_cell_reset_block [current_bd_instance .] reset_block

  # Create instance: rx_blocks
  create_hier_cell_rx_blocks [current_bd_instance .] rx_blocks

  # Create instance: rx_controlled_buffer_0, and set properties
  set rx_controlled_buffer_0 [ create_bd_cell -type ip -vlnv user.org:user:rx_controlled_buffer:1.0 rx_controlled_buffer_0 ]
  set_property CONFIG.FIFO_DEPTH {32768} $rx_controlled_buffer_0


  # Create instance: rx_reset
  create_hier_cell_rx_reset [current_bd_instance .] rx_reset

  # Create instance: stream_manager_0, and set properties
  set stream_manager_0 [ create_bd_cell -type ip -vlnv user.org:user:stream_manager:1.0 stream_manager_0 ]

  # Create instance: tx_blocks
  create_hier_cell_tx_blocks [current_bd_instance .] tx_blocks

  # Create instance: tx_reset
  create_hier_cell_tx_reset [current_bd_instance .] tx_reset

  # Create instance: udp_stack_0, and set properties
  set udp_stack_0 [ create_bd_cell -type ip -vlnv user.org:user:udp_stack:1.0 udp_stack_0 ]

  # Create instance: usp_rf_data_converter_0, and set properties
  set usp_rf_data_converter_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:usp_rf_data_converter:2.6 usp_rf_data_converter_0 ]
  set_property -dict [list \
    CONFIG.ADC2_PLL_Enable {true} \
    CONFIG.ADC2_Refclk_Freq {245.760} \
    CONFIG.ADC2_Sampling_Rate {3.93216} \
    CONFIG.ADC_Data_Type20 {1} \
    CONFIG.ADC_Data_Width20 {2} \
    CONFIG.ADC_Decimation_Mode20 {8} \
    CONFIG.ADC_Mixer_Mode20 {1} \
    CONFIG.ADC_Mixer_Type20 {2} \
    CONFIG.ADC_NCO_Freq20 {-0.4} \
    CONFIG.ADC_Slice00_Enable {false} \
    CONFIG.ADC_Slice02_Enable {false} \
    CONFIG.ADC_Slice20_Enable {true} \
    CONFIG.ADC_Slice22_Enable {true} \
    CONFIG.DAC0_Clock_Dist {0} \
    CONFIG.DAC0_PLL_Enable {true} \
    CONFIG.DAC0_Sampling_Rate {3.93216} \
    CONFIG.DAC_Data_Type00 {1} \
    CONFIG.DAC_Data_Width00 {4} \
    CONFIG.DAC_Interpolation_Mode00 {8} \
    CONFIG.DAC_Mixer_Mode00 {1} \
    CONFIG.DAC_Mixer_Type00 {2} \
    CONFIG.DAC_NCO_Freq00 {0.4} \
    CONFIG.DAC_Slice00_Enable {true} \
    CONFIG.DAC_Slice02_Enable {true} \
  ] $usp_rf_data_converter_0


  # Create instance: util_ds_buf_0, and set properties
  set util_ds_buf_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:util_ds_buf:2.2 util_ds_buf_0 ]
  set_property CONFIG.C_BUF_TYPE {IBUFDSGTE} $util_ds_buf_0


  # Create instance: zynq_ultra_ps_e_0, and set properties
  set zynq_ultra_ps_e_0 [ create_bd_cell -type ip -vlnv xilinx.com:ip:zynq_ultra_ps_e:3.4 zynq_ultra_ps_e_0 ]
  set_property -dict [list \
    CONFIG.CAN0_BOARD_INTERFACE {custom} \
    CONFIG.CAN1_BOARD_INTERFACE {custom} \
    CONFIG.CSU_BOARD_INTERFACE {custom} \
    CONFIG.DP_BOARD_INTERFACE {custom} \
    CONFIG.GEM0_BOARD_INTERFACE {custom} \
    CONFIG.GEM1_BOARD_INTERFACE {custom} \
    CONFIG.GEM2_BOARD_INTERFACE {custom} \
    CONFIG.GEM3_BOARD_INTERFACE {custom} \
    CONFIG.GPIO_BOARD_INTERFACE {custom} \
    CONFIG.IIC0_BOARD_INTERFACE {custom} \
    CONFIG.IIC1_BOARD_INTERFACE {custom} \
    CONFIG.NAND_BOARD_INTERFACE {custom} \
    CONFIG.PCIE_BOARD_INTERFACE {custom} \
    CONFIG.PJTAG_BOARD_INTERFACE {custom} \
    CONFIG.PMU_BOARD_INTERFACE {custom} \
    CONFIG.PSU_BANK_0_IO_STANDARD {LVCMOS18} \
    CONFIG.PSU_BANK_1_IO_STANDARD {LVCMOS18} \
    CONFIG.PSU_BANK_2_IO_STANDARD {LVCMOS18} \
    CONFIG.PSU_BANK_3_IO_STANDARD {LVCMOS33} \
    CONFIG.PSU_DDR_RAM_HIGHADDR {0xFFFFFFFF} \
    CONFIG.PSU_DDR_RAM_HIGHADDR_OFFSET {0x800000000} \
    CONFIG.PSU_DDR_RAM_LOWADDR_OFFSET {0x80000000} \
    CONFIG.PSU_DYNAMIC_DDR_CONFIG_EN {0} \
    CONFIG.PSU_IMPORT_BOARD_PRESET {} \
    CONFIG.PSU_MIO_0_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_0_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_0_SLEW {fast} \
    CONFIG.PSU_MIO_10_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_10_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_10_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_10_SLEW {fast} \
    CONFIG.PSU_MIO_11_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_11_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_11_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_11_SLEW {fast} \
    CONFIG.PSU_MIO_12_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_12_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_12_SLEW {fast} \
    CONFIG.PSU_MIO_13_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_13_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_13_POLARITY {Default} \
    CONFIG.PSU_MIO_13_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_13_SLEW {fast} \
    CONFIG.PSU_MIO_14_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_14_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_14_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_14_SLEW {fast} \
    CONFIG.PSU_MIO_15_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_15_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_15_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_15_SLEW {fast} \
    CONFIG.PSU_MIO_16_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_16_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_16_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_16_SLEW {fast} \
    CONFIG.PSU_MIO_17_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_17_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_17_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_17_SLEW {fast} \
    CONFIG.PSU_MIO_18_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_18_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_19_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_19_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_19_SLEW {fast} \
    CONFIG.PSU_MIO_1_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_1_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_1_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_1_SLEW {fast} \
    CONFIG.PSU_MIO_20_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_20_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_20_POLARITY {Default} \
    CONFIG.PSU_MIO_20_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_20_SLEW {fast} \
    CONFIG.PSU_MIO_21_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_21_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_21_POLARITY {Default} \
    CONFIG.PSU_MIO_21_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_21_SLEW {fast} \
    CONFIG.PSU_MIO_22_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_22_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_22_POLARITY {Default} \
    CONFIG.PSU_MIO_22_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_22_SLEW {fast} \
    CONFIG.PSU_MIO_23_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_23_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_23_POLARITY {Default} \
    CONFIG.PSU_MIO_23_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_23_SLEW {fast} \
    CONFIG.PSU_MIO_24_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_24_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_24_POLARITY {Default} \
    CONFIG.PSU_MIO_24_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_24_SLEW {fast} \
    CONFIG.PSU_MIO_25_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_25_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_25_POLARITY {Default} \
    CONFIG.PSU_MIO_25_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_25_SLEW {fast} \
    CONFIG.PSU_MIO_26_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_26_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_26_POLARITY {Default} \
    CONFIG.PSU_MIO_26_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_26_SLEW {fast} \
    CONFIG.PSU_MIO_27_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_27_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_27_POLARITY {Default} \
    CONFIG.PSU_MIO_27_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_27_SLEW {fast} \
    CONFIG.PSU_MIO_28_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_28_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_28_POLARITY {Default} \
    CONFIG.PSU_MIO_28_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_28_SLEW {fast} \
    CONFIG.PSU_MIO_29_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_29_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_29_POLARITY {Default} \
    CONFIG.PSU_MIO_29_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_29_SLEW {fast} \
    CONFIG.PSU_MIO_2_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_2_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_2_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_2_SLEW {fast} \
    CONFIG.PSU_MIO_30_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_30_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_30_POLARITY {Default} \
    CONFIG.PSU_MIO_30_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_30_SLEW {fast} \
    CONFIG.PSU_MIO_31_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_31_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_31_POLARITY {Default} \
    CONFIG.PSU_MIO_31_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_31_SLEW {fast} \
    CONFIG.PSU_MIO_32_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_32_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_32_POLARITY {Default} \
    CONFIG.PSU_MIO_32_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_32_SLEW {fast} \
    CONFIG.PSU_MIO_33_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_33_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_33_POLARITY {Default} \
    CONFIG.PSU_MIO_33_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_33_SLEW {fast} \
    CONFIG.PSU_MIO_34_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_34_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_34_POLARITY {Default} \
    CONFIG.PSU_MIO_34_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_34_SLEW {fast} \
    CONFIG.PSU_MIO_35_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_35_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_35_POLARITY {Default} \
    CONFIG.PSU_MIO_35_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_35_SLEW {fast} \
    CONFIG.PSU_MIO_36_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_36_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_36_POLARITY {Default} \
    CONFIG.PSU_MIO_36_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_36_SLEW {fast} \
    CONFIG.PSU_MIO_37_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_37_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_37_POLARITY {Default} \
    CONFIG.PSU_MIO_37_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_37_SLEW {fast} \
    CONFIG.PSU_MIO_38_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_38_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_38_POLARITY {Default} \
    CONFIG.PSU_MIO_38_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_38_SLEW {fast} \
    CONFIG.PSU_MIO_39_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_39_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_39_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_39_SLEW {fast} \
    CONFIG.PSU_MIO_3_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_3_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_3_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_3_SLEW {fast} \
    CONFIG.PSU_MIO_40_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_40_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_40_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_40_SLEW {fast} \
    CONFIG.PSU_MIO_41_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_41_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_41_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_41_SLEW {fast} \
    CONFIG.PSU_MIO_42_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_42_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_42_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_42_SLEW {fast} \
    CONFIG.PSU_MIO_43_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_43_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_43_POLARITY {Default} \
    CONFIG.PSU_MIO_43_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_43_SLEW {fast} \
    CONFIG.PSU_MIO_44_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_44_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_44_POLARITY {Default} \
    CONFIG.PSU_MIO_44_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_44_SLEW {fast} \
    CONFIG.PSU_MIO_45_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_45_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_46_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_46_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_46_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_46_SLEW {fast} \
    CONFIG.PSU_MIO_47_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_47_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_47_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_47_SLEW {fast} \
    CONFIG.PSU_MIO_48_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_48_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_48_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_48_SLEW {fast} \
    CONFIG.PSU_MIO_49_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_49_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_49_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_49_SLEW {fast} \
    CONFIG.PSU_MIO_4_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_4_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_4_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_4_SLEW {fast} \
    CONFIG.PSU_MIO_50_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_50_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_50_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_50_SLEW {fast} \
    CONFIG.PSU_MIO_51_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_51_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_51_SLEW {fast} \
    CONFIG.PSU_MIO_52_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_52_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_53_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_53_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_54_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_54_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_54_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_54_SLEW {fast} \
    CONFIG.PSU_MIO_55_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_55_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_56_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_56_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_56_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_56_SLEW {fast} \
    CONFIG.PSU_MIO_57_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_57_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_57_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_57_SLEW {fast} \
    CONFIG.PSU_MIO_58_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_58_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_58_SLEW {fast} \
    CONFIG.PSU_MIO_59_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_59_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_59_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_59_SLEW {fast} \
    CONFIG.PSU_MIO_5_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_5_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_5_SLEW {fast} \
    CONFIG.PSU_MIO_60_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_60_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_60_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_60_SLEW {fast} \
    CONFIG.PSU_MIO_61_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_61_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_61_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_61_SLEW {fast} \
    CONFIG.PSU_MIO_62_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_62_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_62_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_62_SLEW {fast} \
    CONFIG.PSU_MIO_63_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_63_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_63_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_63_SLEW {fast} \
    CONFIG.PSU_MIO_64_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_64_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_64_SLEW {fast} \
    CONFIG.PSU_MIO_65_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_65_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_65_SLEW {fast} \
    CONFIG.PSU_MIO_66_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_66_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_66_SLEW {fast} \
    CONFIG.PSU_MIO_67_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_67_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_67_SLEW {fast} \
    CONFIG.PSU_MIO_68_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_68_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_68_SLEW {fast} \
    CONFIG.PSU_MIO_69_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_69_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_69_SLEW {fast} \
    CONFIG.PSU_MIO_6_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_6_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_6_SLEW {fast} \
    CONFIG.PSU_MIO_70_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_70_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_71_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_71_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_72_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_72_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_73_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_73_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_74_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_74_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_75_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_75_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_76_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_76_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_76_SLEW {fast} \
    CONFIG.PSU_MIO_77_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_77_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_77_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_77_SLEW {fast} \
    CONFIG.PSU_MIO_7_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_7_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_7_SLEW {fast} \
    CONFIG.PSU_MIO_8_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_8_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_8_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_8_SLEW {fast} \
    CONFIG.PSU_MIO_9_DRIVE_STRENGTH {12} \
    CONFIG.PSU_MIO_9_INPUT_TYPE {cmos} \
    CONFIG.PSU_MIO_9_PULLUPDOWN {pullup} \
    CONFIG.PSU_MIO_9_SLEW {fast} \
    CONFIG.PSU_MIO_TREE_PERIPHERALS {Quad SPI Flash#Quad SPI Flash#Quad SPI Flash#Quad SPI Flash#Quad SPI Flash#Quad SPI Flash#Feedback Clk#Quad SPI Flash#Quad SPI Flash#Quad SPI Flash#Quad SPI Flash#Quad\
SPI Flash#Quad SPI Flash#GPIO0 MIO#I2C 0#I2C 0#I2C 1#I2C 1#UART 0#UART 0#GPIO0 MIO#GPIO0 MIO#GPIO0 MIO#GPIO0 MIO#GPIO0 MIO#GPIO0 MIO#GPIO1 MIO#GPIO1 MIO#GPIO1 MIO#GPIO1 MIO#GPIO1 MIO#GPIO1 MIO#GPIO1 MIO#GPIO1\
MIO#GPIO1 MIO#GPIO1 MIO#GPIO1 MIO#GPIO1 MIO#GPIO1 MIO#SD 1#SD 1#SD 1#SD 1#GPIO1 MIO#GPIO1 MIO#SD 1#SD 1#SD 1#SD 1#SD 1#SD 1#SD 1#USB 0#USB 0#USB 0#USB 0#USB 0#USB 0#USB 0#USB 0#USB 0#USB 0#USB 0#USB 0#Gem\
3#Gem 3#Gem 3#Gem 3#Gem 3#Gem 3#Gem 3#Gem 3#Gem 3#Gem 3#Gem 3#Gem 3#MDIO 3#MDIO 3} \
    CONFIG.PSU_MIO_TREE_SIGNALS {sclk_out#miso_mo1#mo2#mo3#mosi_mi0#n_ss_out#clk_for_lpbk#n_ss_out_upper#mo_upper[0]#mo_upper[1]#mo_upper[2]#mo_upper[3]#sclk_out_upper#gpio0[13]#scl_out#sda_out#scl_out#sda_out#rxd#txd#gpio0[20]#gpio0[21]#gpio0[22]#gpio0[23]#gpio0[24]#gpio0[25]#gpio1[26]#gpio1[27]#gpio1[28]#gpio1[29]#gpio1[30]#gpio1[31]#gpio1[32]#gpio1[33]#gpio1[34]#gpio1[35]#gpio1[36]#gpio1[37]#gpio1[38]#sdio1_data_out[4]#sdio1_data_out[5]#sdio1_data_out[6]#sdio1_data_out[7]#gpio1[43]#gpio1[44]#sdio1_cd_n#sdio1_data_out[0]#sdio1_data_out[1]#sdio1_data_out[2]#sdio1_data_out[3]#sdio1_cmd_out#sdio1_clk_out#ulpi_clk_in#ulpi_dir#ulpi_tx_data[2]#ulpi_nxt#ulpi_tx_data[0]#ulpi_tx_data[1]#ulpi_stp#ulpi_tx_data[3]#ulpi_tx_data[4]#ulpi_tx_data[5]#ulpi_tx_data[6]#ulpi_tx_data[7]#rgmii_tx_clk#rgmii_txd[0]#rgmii_txd[1]#rgmii_txd[2]#rgmii_txd[3]#rgmii_tx_ctl#rgmii_rx_clk#rgmii_rxd[0]#rgmii_rxd[1]#rgmii_rxd[2]#rgmii_rxd[3]#rgmii_rx_ctl#gem3_mdc#gem3_mdio_out}\
\
    CONFIG.PSU_PERIPHERAL_BOARD_PRESET {} \
    CONFIG.PSU_SD0_INTERNAL_BUS_WIDTH {8} \
    CONFIG.PSU_SD1_INTERNAL_BUS_WIDTH {8} \
    CONFIG.PSU_SMC_CYCLE_T0 {NA} \
    CONFIG.PSU_SMC_CYCLE_T1 {NA} \
    CONFIG.PSU_SMC_CYCLE_T2 {NA} \
    CONFIG.PSU_SMC_CYCLE_T3 {NA} \
    CONFIG.PSU_SMC_CYCLE_T4 {NA} \
    CONFIG.PSU_SMC_CYCLE_T5 {NA} \
    CONFIG.PSU_SMC_CYCLE_T6 {NA} \
    CONFIG.PSU_USB3__DUAL_CLOCK_ENABLE {1} \
    CONFIG.PSU_VALUE_SILVERSION {3} \
    CONFIG.PSU__ACPU0__POWER__ON {1} \
    CONFIG.PSU__ACPU1__POWER__ON {1} \
    CONFIG.PSU__ACPU2__POWER__ON {1} \
    CONFIG.PSU__ACPU3__POWER__ON {1} \
    CONFIG.PSU__ACTUAL__IP {1} \
    CONFIG.PSU__ACT_DDR_FREQ_MHZ {1066.656006} \
    CONFIG.PSU__AUX_REF_CLK__FREQMHZ {33.333} \
    CONFIG.PSU__CAN0_LOOP_CAN1__ENABLE {0} \
    CONFIG.PSU__CAN0__PERIPHERAL__ENABLE {0} \
    CONFIG.PSU__CAN1__PERIPHERAL__ENABLE {0} \
    CONFIG.PSU__CRF_APB__ACPU_CTRL__ACT_FREQMHZ {1199.988037} \
    CONFIG.PSU__CRF_APB__ACPU_CTRL__FREQMHZ {1200} \
    CONFIG.PSU__CRF_APB__ACPU_CTRL__SRCSEL {APLL} \
    CONFIG.PSU__CRF_APB__ACPU__FRAC_ENABLED {0} \
    CONFIG.PSU__CRF_APB__AFI0_REF_CTRL__ACT_FREQMHZ {667} \
    CONFIG.PSU__CRF_APB__AFI0_REF_CTRL__DIVISOR0 {2} \
    CONFIG.PSU__CRF_APB__AFI0_REF_CTRL__FREQMHZ {667} \
    CONFIG.PSU__CRF_APB__AFI0_REF_CTRL__SRCSEL {DPLL} \
    CONFIG.PSU__CRF_APB__AFI0_REF__ENABLE {0} \
    CONFIG.PSU__CRF_APB__AFI1_REF_CTRL__ACT_FREQMHZ {667} \
    CONFIG.PSU__CRF_APB__AFI1_REF_CTRL__DIVISOR0 {2} \
    CONFIG.PSU__CRF_APB__AFI1_REF_CTRL__FREQMHZ {667} \
    CONFIG.PSU__CRF_APB__AFI1_REF_CTRL__SRCSEL {DPLL} \
    CONFIG.PSU__CRF_APB__AFI1_REF__ENABLE {0} \
    CONFIG.PSU__CRF_APB__AFI2_REF_CTRL__ACT_FREQMHZ {667} \
    CONFIG.PSU__CRF_APB__AFI2_REF_CTRL__DIVISOR0 {2} \
    CONFIG.PSU__CRF_APB__AFI2_REF_CTRL__FREQMHZ {667} \
    CONFIG.PSU__CRF_APB__AFI2_REF_CTRL__SRCSEL {DPLL} \
    CONFIG.PSU__CRF_APB__AFI2_REF__ENABLE {0} \
    CONFIG.PSU__CRF_APB__AFI3_REF_CTRL__ACT_FREQMHZ {667} \
    CONFIG.PSU__CRF_APB__AFI3_REF_CTRL__DIVISOR0 {2} \
    CONFIG.PSU__CRF_APB__AFI3_REF_CTRL__FREQMHZ {667} \
    CONFIG.PSU__CRF_APB__AFI3_REF_CTRL__SRCSEL {DPLL} \
    CONFIG.PSU__CRF_APB__AFI3_REF__ENABLE {0} \
    CONFIG.PSU__CRF_APB__AFI4_REF_CTRL__ACT_FREQMHZ {667} \
    CONFIG.PSU__CRF_APB__AFI4_REF_CTRL__DIVISOR0 {2} \
    CONFIG.PSU__CRF_APB__AFI4_REF_CTRL__FREQMHZ {667} \
    CONFIG.PSU__CRF_APB__AFI4_REF_CTRL__SRCSEL {DPLL} \
    CONFIG.PSU__CRF_APB__AFI4_REF__ENABLE {0} \
    CONFIG.PSU__CRF_APB__AFI5_REF_CTRL__ACT_FREQMHZ {667} \
    CONFIG.PSU__CRF_APB__AFI5_REF_CTRL__DIVISOR0 {2} \
    CONFIG.PSU__CRF_APB__AFI5_REF_CTRL__FREQMHZ {667} \
    CONFIG.PSU__CRF_APB__AFI5_REF_CTRL__SRCSEL {DPLL} \
    CONFIG.PSU__CRF_APB__AFI5_REF__ENABLE {0} \
    CONFIG.PSU__CRF_APB__APLL_CTRL__FRACFREQ {27.138} \
    CONFIG.PSU__CRF_APB__APLL_CTRL__SRCSEL {PSS_REF_CLK} \
    CONFIG.PSU__CRF_APB__APM_CTRL__ACT_FREQMHZ {1} \
    CONFIG.PSU__CRF_APB__APM_CTRL__DIVISOR0 {1} \
    CONFIG.PSU__CRF_APB__APM_CTRL__FREQMHZ {1} \
    CONFIG.PSU__CRF_APB__DBG_FPD_CTRL__ACT_FREQMHZ {249.997498} \
    CONFIG.PSU__CRF_APB__DBG_FPD_CTRL__FREQMHZ {250} \
    CONFIG.PSU__CRF_APB__DBG_FPD_CTRL__SRCSEL {IOPLL} \
    CONFIG.PSU__CRF_APB__DBG_TRACE_CTRL__ACT_FREQMHZ {250} \
    CONFIG.PSU__CRF_APB__DBG_TRACE_CTRL__FREQMHZ {250} \
    CONFIG.PSU__CRF_APB__DBG_TRACE_CTRL__SRCSEL {IOPLL} \
    CONFIG.PSU__CRF_APB__DBG_TSTMP_CTRL__ACT_FREQMHZ {249.997498} \
    CONFIG.PSU__CRF_APB__DBG_TSTMP_CTRL__FREQMHZ {250} \
    CONFIG.PSU__CRF_APB__DBG_TSTMP_CTRL__SRCSEL {IOPLL} \
    CONFIG.PSU__CRF_APB__DDR_CTRL__ACT_FREQMHZ {533.328003} \
    CONFIG.PSU__CRF_APB__DDR_CTRL__FREQMHZ {1067} \
    CONFIG.PSU__CRF_APB__DDR_CTRL__SRCSEL {DPLL} \
    CONFIG.PSU__CRF_APB__DPDMA_REF_CTRL__ACT_FREQMHZ {599.994019} \
    CONFIG.PSU__CRF_APB__DPDMA_REF_CTRL__FREQMHZ {600} \
    CONFIG.PSU__CRF_APB__DPDMA_REF_CTRL__SRCSEL {APLL} \
    CONFIG.PSU__CRF_APB__DPLL_CTRL__FRACFREQ {27.138} \
    CONFIG.PSU__CRF_APB__DPLL_CTRL__SRCSEL {PSS_REF_CLK} \
    CONFIG.PSU__CRF_APB__DP_AUDIO_REF_CTRL__ACT_FREQMHZ {24.999750} \
    CONFIG.PSU__CRF_APB__DP_AUDIO_REF_CTRL__FREQMHZ {25} \
    CONFIG.PSU__CRF_APB__DP_AUDIO_REF_CTRL__SRCSEL {RPLL} \
    CONFIG.PSU__CRF_APB__DP_STC_REF_CTRL__ACT_FREQMHZ {26.785446} \
    CONFIG.PSU__CRF_APB__DP_STC_REF_CTRL__FREQMHZ {27} \
    CONFIG.PSU__CRF_APB__DP_STC_REF_CTRL__SRCSEL {RPLL} \
    CONFIG.PSU__CRF_APB__DP_VIDEO_REF_CTRL__ACT_FREQMHZ {299.997009} \
    CONFIG.PSU__CRF_APB__DP_VIDEO_REF_CTRL__FREQMHZ {300} \
    CONFIG.PSU__CRF_APB__DP_VIDEO_REF_CTRL__SRCSEL {VPLL} \
    CONFIG.PSU__CRF_APB__GDMA_REF_CTRL__ACT_FREQMHZ {599.994019} \
    CONFIG.PSU__CRF_APB__GDMA_REF_CTRL__FREQMHZ {600} \
    CONFIG.PSU__CRF_APB__GDMA_REF_CTRL__SRCSEL {APLL} \
    CONFIG.PSU__CRF_APB__GPU_REF_CTRL__ACT_FREQMHZ {0} \
    CONFIG.PSU__CRF_APB__GPU_REF_CTRL__FREQMHZ {500} \
    CONFIG.PSU__CRF_APB__GPU_REF_CTRL__SRCSEL {IOPLL} \
    CONFIG.PSU__CRF_APB__GTGREF0_REF_CTRL__ACT_FREQMHZ {-1} \
    CONFIG.PSU__CRF_APB__GTGREF0_REF_CTRL__DIVISOR0 {-1} \
    CONFIG.PSU__CRF_APB__GTGREF0_REF_CTRL__FREQMHZ {-1} \
    CONFIG.PSU__CRF_APB__GTGREF0_REF_CTRL__SRCSEL {NA} \
    CONFIG.PSU__CRF_APB__GTGREF0__ENABLE {NA} \
    CONFIG.PSU__CRF_APB__PCIE_REF_CTRL__ACT_FREQMHZ {250} \
    CONFIG.PSU__CRF_APB__SATA_REF_CTRL__ACT_FREQMHZ {249.997498} \
    CONFIG.PSU__CRF_APB__TOPSW_LSBUS_CTRL__ACT_FREQMHZ {99.999001} \
    CONFIG.PSU__CRF_APB__TOPSW_LSBUS_CTRL__FREQMHZ {100} \
    CONFIG.PSU__CRF_APB__TOPSW_LSBUS_CTRL__SRCSEL {IOPLL} \
    CONFIG.PSU__CRF_APB__TOPSW_MAIN_CTRL__ACT_FREQMHZ {533.328003} \
    CONFIG.PSU__CRF_APB__TOPSW_MAIN_CTRL__FREQMHZ {533.33} \
    CONFIG.PSU__CRF_APB__TOPSW_MAIN_CTRL__SRCSEL {DPLL} \
    CONFIG.PSU__CRF_APB__VPLL_CTRL__FRACFREQ {27.138} \
    CONFIG.PSU__CRF_APB__VPLL_CTRL__SRCSEL {PSS_REF_CLK} \
    CONFIG.PSU__CRL_APB__ADMA_REF_CTRL__ACT_FREQMHZ {499.994995} \
    CONFIG.PSU__CRL_APB__ADMA_REF_CTRL__FREQMHZ {500} \
    CONFIG.PSU__CRL_APB__ADMA_REF_CTRL__SRCSEL {IOPLL} \
    CONFIG.PSU__CRL_APB__AFI6_REF_CTRL__ACT_FREQMHZ {500} \
    CONFIG.PSU__CRL_APB__AFI6_REF_CTRL__FREQMHZ {500} \
    CONFIG.PSU__CRL_APB__AFI6_REF_CTRL__SRCSEL {IOPLL} \
    CONFIG.PSU__CRL_APB__AFI6__ENABLE {0} \
    CONFIG.PSU__CRL_APB__AMS_REF_CTRL__ACT_FREQMHZ {49.999500} \
    CONFIG.PSU__CRL_APB__AMS_REF_CTRL__FREQMHZ {50} \
    CONFIG.PSU__CRL_APB__AMS_REF_CTRL__SRCSEL {IOPLL} \
    CONFIG.PSU__CRL_APB__CAN0_REF_CTRL__ACT_FREQMHZ {100} \
    CONFIG.PSU__CRL_APB__CAN0_REF_CTRL__FREQMHZ {100} \
    CONFIG.PSU__CRL_APB__CAN0_REF_CTRL__SRCSEL {IOPLL} \
    CONFIG.PSU__CRL_APB__CAN1_REF_CTRL__ACT_FREQMHZ {100} \
    CONFIG.PSU__CRL_APB__CAN1_REF_CTRL__FREQMHZ {100} \
    CONFIG.PSU__CRL_APB__CAN1_REF_CTRL__SRCSEL {IOPLL} \
    CONFIG.PSU__CRL_APB__CPU_R5_CTRL__ACT_FREQMHZ {499.994995} \
    CONFIG.PSU__CRL_APB__CPU_R5_CTRL__FREQMHZ {500} \
    CONFIG.PSU__CRL_APB__CPU_R5_CTRL__SRCSEL {IOPLL} \
    CONFIG.PSU__CRL_APB__CSU_PLL_CTRL__ACT_FREQMHZ {180} \
    CONFIG.PSU__CRL_APB__CSU_PLL_CTRL__DIVISOR0 {3} \
    CONFIG.PSU__CRL_APB__CSU_PLL_CTRL__SRCSEL {SysOsc} \
    CONFIG.PSU__CRL_APB__DBG_LPD_CTRL__ACT_FREQMHZ {249.997498} \
    CONFIG.PSU__CRL_APB__DBG_LPD_CTRL__FREQMHZ {250} \
    CONFIG.PSU__CRL_APB__DBG_LPD_CTRL__SRCSEL {IOPLL} \
    CONFIG.PSU__CRL_APB__DEBUG_R5_ATCLK_CTRL__ACT_FREQMHZ {1000} \
    CONFIG.PSU__CRL_APB__DEBUG_R5_ATCLK_CTRL__DIVISOR0 {6} \
    CONFIG.PSU__CRL_APB__DEBUG_R5_ATCLK_CTRL__FREQMHZ {1000} \
    CONFIG.PSU__CRL_APB__DEBUG_R5_ATCLK_CTRL__SRCSEL {RPLL} \
    CONFIG.PSU__CRL_APB__DLL_REF_CTRL__ACT_FREQMHZ {1499.984985} \
    CONFIG.PSU__CRL_APB__DLL_REF_CTRL__FREQMHZ {1500} \
    CONFIG.PSU__CRL_APB__DLL_REF_CTRL__SRCSEL {IOPLL} \
    CONFIG.PSU__CRL_APB__GEM0_REF_CTRL__ACT_FREQMHZ {125} \
    CONFIG.PSU__CRL_APB__GEM0_REF_CTRL__FREQMHZ {125} \
    CONFIG.PSU__CRL_APB__GEM0_REF_CTRL__SRCSEL {IOPLL} \
    CONFIG.PSU__CRL_APB__GEM1_REF_CTRL__ACT_FREQMHZ {124.998749} \
    CONFIG.PSU__CRL_APB__GEM1_REF_CTRL__FREQMHZ {125} \
    CONFIG.PSU__CRL_APB__GEM1_REF_CTRL__SRCSEL {IOPLL} \
    CONFIG.PSU__CRL_APB__GEM2_REF_CTRL__ACT_FREQMHZ {125} \
    CONFIG.PSU__CRL_APB__GEM2_REF_CTRL__FREQMHZ {125} \
    CONFIG.PSU__CRL_APB__GEM2_REF_CTRL__SRCSEL {IOPLL} \
    CONFIG.PSU__CRL_APB__GEM3_REF_CTRL__ACT_FREQMHZ {124.998749} \
    CONFIG.PSU__CRL_APB__GEM3_REF_CTRL__FREQMHZ {125} \
    CONFIG.PSU__CRL_APB__GEM3_REF_CTRL__SRCSEL {IOPLL} \
    CONFIG.PSU__CRL_APB__GEM_TSU_REF_CTRL__ACT_FREQMHZ {249.997498} \
    CONFIG.PSU__CRL_APB__GEM_TSU_REF_CTRL__FREQMHZ {250} \
    CONFIG.PSU__CRL_APB__GEM_TSU_REF_CTRL__SRCSEL {IOPLL} \
    CONFIG.PSU__CRL_APB__I2C0_REF_CTRL__ACT_FREQMHZ {99.999001} \
    CONFIG.PSU__CRL_APB__I2C0_REF_CTRL__FREQMHZ {100} \
    CONFIG.PSU__CRL_APB__I2C0_REF_CTRL__SRCSEL {IOPLL} \
    CONFIG.PSU__CRL_APB__I2C1_REF_CTRL__ACT_FREQMHZ {99.999001} \
    CONFIG.PSU__CRL_APB__I2C1_REF_CTRL__FREQMHZ {100} \
    CONFIG.PSU__CRL_APB__I2C1_REF_CTRL__SRCSEL {IOPLL} \
    CONFIG.PSU__CRL_APB__IOPLL_CTRL__FRACFREQ {27.138} \
    CONFIG.PSU__CRL_APB__IOPLL_CTRL__SRCSEL {PSS_REF_CLK} \
    CONFIG.PSU__CRL_APB__IOU_SWITCH_CTRL__ACT_FREQMHZ {249.997498} \
    CONFIG.PSU__CRL_APB__IOU_SWITCH_CTRL__FREQMHZ {250} \
    CONFIG.PSU__CRL_APB__IOU_SWITCH_CTRL__SRCSEL {IOPLL} \
    CONFIG.PSU__CRL_APB__LPD_LSBUS_CTRL__ACT_FREQMHZ {99.999001} \
    CONFIG.PSU__CRL_APB__LPD_LSBUS_CTRL__FREQMHZ {100} \
    CONFIG.PSU__CRL_APB__LPD_LSBUS_CTRL__SRCSEL {IOPLL} \
    CONFIG.PSU__CRL_APB__LPD_SWITCH_CTRL__ACT_FREQMHZ {499.994995} \
    CONFIG.PSU__CRL_APB__LPD_SWITCH_CTRL__FREQMHZ {500} \
    CONFIG.PSU__CRL_APB__LPD_SWITCH_CTRL__SRCSEL {IOPLL} \
    CONFIG.PSU__CRL_APB__NAND_REF_CTRL__ACT_FREQMHZ {100} \
    CONFIG.PSU__CRL_APB__NAND_REF_CTRL__FREQMHZ {100} \
    CONFIG.PSU__CRL_APB__NAND_REF_CTRL__SRCSEL {IOPLL} \
    CONFIG.PSU__CRL_APB__OCM_MAIN_CTRL__ACT_FREQMHZ {500} \
    CONFIG.PSU__CRL_APB__OCM_MAIN_CTRL__DIVISOR0 {3} \
    CONFIG.PSU__CRL_APB__OCM_MAIN_CTRL__FREQMHZ {500} \
    CONFIG.PSU__CRL_APB__OCM_MAIN_CTRL__SRCSEL {IOPLL} \
    CONFIG.PSU__CRL_APB__PCAP_CTRL__ACT_FREQMHZ {187.498123} \
    CONFIG.PSU__CRL_APB__PCAP_CTRL__FREQMHZ {200} \
    CONFIG.PSU__CRL_APB__PCAP_CTRL__SRCSEL {IOPLL} \
    CONFIG.PSU__CRL_APB__PL0_REF_CTRL__ACT_FREQMHZ {99.999001} \
    CONFIG.PSU__CRL_APB__PL0_REF_CTRL__FREQMHZ {100} \
    CONFIG.PSU__CRL_APB__PL0_REF_CTRL__SRCSEL {IOPLL} \
    CONFIG.PSU__CRL_APB__PL1_REF_CTRL__ACT_FREQMHZ {124.998749} \
    CONFIG.PSU__CRL_APB__PL1_REF_CTRL__FREQMHZ {125} \
    CONFIG.PSU__CRL_APB__PL1_REF_CTRL__SRCSEL {IOPLL} \
    CONFIG.PSU__CRL_APB__PL2_REF_CTRL__ACT_FREQMHZ {100} \
    CONFIG.PSU__CRL_APB__PL3_REF_CTRL__ACT_FREQMHZ {100} \
    CONFIG.PSU__CRL_APB__QSPI_REF_CTRL__ACT_FREQMHZ {124.998749} \
    CONFIG.PSU__CRL_APB__QSPI_REF_CTRL__FREQMHZ {125} \
    CONFIG.PSU__CRL_APB__QSPI_REF_CTRL__SRCSEL {IOPLL} \
    CONFIG.PSU__CRL_APB__RPLL_CTRL__FRACFREQ {27.138} \
    CONFIG.PSU__CRL_APB__RPLL_CTRL__SRCSEL {PSS_REF_CLK} \
    CONFIG.PSU__CRL_APB__SDIO0_REF_CTRL__ACT_FREQMHZ {200} \
    CONFIG.PSU__CRL_APB__SDIO0_REF_CTRL__FREQMHZ {200} \
    CONFIG.PSU__CRL_APB__SDIO0_REF_CTRL__SRCSEL {RPLL} \
    CONFIG.PSU__CRL_APB__SDIO1_REF_CTRL__ACT_FREQMHZ {187.498123} \
    CONFIG.PSU__CRL_APB__SDIO1_REF_CTRL__FREQMHZ {200} \
    CONFIG.PSU__CRL_APB__SDIO1_REF_CTRL__SRCSEL {IOPLL} \
    CONFIG.PSU__CRL_APB__SPI0_REF_CTRL__ACT_FREQMHZ {199.998001} \
    CONFIG.PSU__CRL_APB__SPI0_REF_CTRL__FREQMHZ {200} \
    CONFIG.PSU__CRL_APB__SPI0_REF_CTRL__SRCSEL {RPLL} \
    CONFIG.PSU__CRL_APB__SPI1_REF_CTRL__ACT_FREQMHZ {199.998001} \
    CONFIG.PSU__CRL_APB__SPI1_REF_CTRL__FREQMHZ {200} \
    CONFIG.PSU__CRL_APB__SPI1_REF_CTRL__SRCSEL {RPLL} \
    CONFIG.PSU__CRL_APB__TIMESTAMP_REF_CTRL__ACT_FREQMHZ {99.999001} \
    CONFIG.PSU__CRL_APB__TIMESTAMP_REF_CTRL__FREQMHZ {100} \
    CONFIG.PSU__CRL_APB__TIMESTAMP_REF_CTRL__SRCSEL {IOPLL} \
    CONFIG.PSU__CRL_APB__UART0_REF_CTRL__ACT_FREQMHZ {99.999001} \
    CONFIG.PSU__CRL_APB__UART0_REF_CTRL__FREQMHZ {100} \
    CONFIG.PSU__CRL_APB__UART0_REF_CTRL__SRCSEL {IOPLL} \
    CONFIG.PSU__CRL_APB__UART1_REF_CTRL__ACT_FREQMHZ {99.999001} \
    CONFIG.PSU__CRL_APB__UART1_REF_CTRL__FREQMHZ {100} \
    CONFIG.PSU__CRL_APB__UART1_REF_CTRL__SRCSEL {IOPLL} \
    CONFIG.PSU__CRL_APB__USB0_BUS_REF_CTRL__ACT_FREQMHZ {249.997498} \
    CONFIG.PSU__CRL_APB__USB0_BUS_REF_CTRL__FREQMHZ {250} \
    CONFIG.PSU__CRL_APB__USB0_BUS_REF_CTRL__SRCSEL {IOPLL} \
    CONFIG.PSU__CRL_APB__USB1_BUS_REF_CTRL__ACT_FREQMHZ {250} \
    CONFIG.PSU__CRL_APB__USB1_BUS_REF_CTRL__FREQMHZ {250} \
    CONFIG.PSU__CRL_APB__USB1_BUS_REF_CTRL__SRCSEL {IOPLL} \
    CONFIG.PSU__CRL_APB__USB3_DUAL_REF_CTRL__ACT_FREQMHZ {19.999800} \
    CONFIG.PSU__CRL_APB__USB3_DUAL_REF_CTRL__FREQMHZ {20} \
    CONFIG.PSU__CRL_APB__USB3_DUAL_REF_CTRL__SRCSEL {IOPLL} \
    CONFIG.PSU__CRL_APB__USB3__ENABLE {1} \
    CONFIG.PSU__CSUPMU__PERIPHERAL__VALID {1} \
    CONFIG.PSU__CSU__CSU_TAMPER_0__ENABLE {0} \
    CONFIG.PSU__CSU__CSU_TAMPER_10__ENABLE {0} \
    CONFIG.PSU__CSU__CSU_TAMPER_11__ENABLE {0} \
    CONFIG.PSU__CSU__CSU_TAMPER_12__ENABLE {0} \
    CONFIG.PSU__CSU__CSU_TAMPER_1__ENABLE {0} \
    CONFIG.PSU__CSU__CSU_TAMPER_2__ENABLE {0} \
    CONFIG.PSU__CSU__CSU_TAMPER_3__ENABLE {0} \
    CONFIG.PSU__CSU__CSU_TAMPER_4__ENABLE {0} \
    CONFIG.PSU__CSU__CSU_TAMPER_5__ENABLE {0} \
    CONFIG.PSU__CSU__CSU_TAMPER_6__ENABLE {0} \
    CONFIG.PSU__CSU__CSU_TAMPER_7__ENABLE {0} \
    CONFIG.PSU__CSU__CSU_TAMPER_8__ENABLE {0} \
    CONFIG.PSU__CSU__CSU_TAMPER_9__ENABLE {0} \
    CONFIG.PSU__CSU__PERIPHERAL__ENABLE {0} \
    CONFIG.PSU__DDRC__AL {0} \
    CONFIG.PSU__DDRC__BG_ADDR_COUNT {1} \
    CONFIG.PSU__DDRC__BRC_MAPPING {ROW_BANK_COL} \
    CONFIG.PSU__DDRC__BUS_WIDTH {64 Bit} \
    CONFIG.PSU__DDRC__CL {15} \
    CONFIG.PSU__DDRC__CLOCK_STOP_EN {0} \
    CONFIG.PSU__DDRC__COMPONENTS {UDIMM} \
    CONFIG.PSU__DDRC__CWL {14} \
    CONFIG.PSU__DDRC__DDR4_ADDR_MAPPING {0} \
    CONFIG.PSU__DDRC__DDR4_CAL_MODE_ENABLE {0} \
    CONFIG.PSU__DDRC__DDR4_CRC_CONTROL {0} \
    CONFIG.PSU__DDRC__DDR4_MAXPWR_SAVING_EN {0} \
    CONFIG.PSU__DDRC__DDR4_T_REF_MODE {0} \
    CONFIG.PSU__DDRC__DDR4_T_REF_RANGE {Normal (0-85)} \
    CONFIG.PSU__DDRC__DEVICE_CAPACITY {8192 MBits} \
    CONFIG.PSU__DDRC__DM_DBI {DM_NO_DBI} \
    CONFIG.PSU__DDRC__DRAM_WIDTH {16 Bits} \
    CONFIG.PSU__DDRC__ECC {Disabled} \
    CONFIG.PSU__DDRC__ECC_SCRUB {0} \
    CONFIG.PSU__DDRC__ENABLE {1} \
    CONFIG.PSU__DDRC__ENABLE_2T_TIMING {0} \
    CONFIG.PSU__DDRC__ENABLE_DP_SWITCH {0} \
    CONFIG.PSU__DDRC__EN_2ND_CLK {0} \
    CONFIG.PSU__DDRC__FGRM {1X} \
    CONFIG.PSU__DDRC__FREQ_MHZ {1} \
    CONFIG.PSU__DDRC__LPDDR3_DUALRANK_SDP {0} \
    CONFIG.PSU__DDRC__LP_ASR {manual normal} \
    CONFIG.PSU__DDRC__MEMORY_TYPE {DDR 4} \
    CONFIG.PSU__DDRC__PARITY_ENABLE {0} \
    CONFIG.PSU__DDRC__PER_BANK_REFRESH {0} \
    CONFIG.PSU__DDRC__PHY_DBI_MODE {0} \
    CONFIG.PSU__DDRC__PLL_BYPASS {0} \
    CONFIG.PSU__DDRC__PWR_DOWN_EN {0} \
    CONFIG.PSU__DDRC__RANK_ADDR_COUNT {0} \
    CONFIG.PSU__DDRC__RD_DQS_CENTER {0} \
    CONFIG.PSU__DDRC__ROW_ADDR_COUNT {16} \
    CONFIG.PSU__DDRC__SELF_REF_ABORT {0} \
    CONFIG.PSU__DDRC__SPEED_BIN {DDR4_2133P} \
    CONFIG.PSU__DDRC__STATIC_RD_MODE {0} \
    CONFIG.PSU__DDRC__TRAIN_DATA_EYE {1} \
    CONFIG.PSU__DDRC__TRAIN_READ_GATE {1} \
    CONFIG.PSU__DDRC__TRAIN_WRITE_LEVEL {1} \
    CONFIG.PSU__DDRC__T_FAW {30.0} \
    CONFIG.PSU__DDRC__T_RAS_MIN {33} \
    CONFIG.PSU__DDRC__T_RC {47.06} \
    CONFIG.PSU__DDRC__T_RCD {15} \
    CONFIG.PSU__DDRC__T_RP {15} \
    CONFIG.PSU__DDRC__VIDEO_BUFFER_SIZE {0} \
    CONFIG.PSU__DDRC__VREF {1} \
    CONFIG.PSU__DDR_HIGH_ADDRESS_GUI_ENABLE {1} \
    CONFIG.PSU__DDR_QOS_ENABLE {0} \
    CONFIG.PSU__DDR_QOS_HP0_RDQOS {} \
    CONFIG.PSU__DDR_QOS_HP0_WRQOS {} \
    CONFIG.PSU__DDR_QOS_HP1_RDQOS {} \
    CONFIG.PSU__DDR_QOS_HP1_WRQOS {} \
    CONFIG.PSU__DDR_QOS_HP2_RDQOS {} \
    CONFIG.PSU__DDR_QOS_HP2_WRQOS {} \
    CONFIG.PSU__DDR_QOS_HP3_RDQOS {} \
    CONFIG.PSU__DDR_QOS_HP3_WRQOS {} \
    CONFIG.PSU__DDR_SW_REFRESH_ENABLED {1} \
    CONFIG.PSU__DDR__INTERFACE__FREQMHZ {533.500} \
    CONFIG.PSU__DEVICE_TYPE {RFSOC} \
    CONFIG.PSU__DISPLAYPORT__PERIPHERAL__ENABLE {0} \
    CONFIG.PSU__DLL__ISUSED {1} \
    CONFIG.PSU__ENABLE__DDR__REFRESH__SIGNALS {0} \
    CONFIG.PSU__ENET0__PERIPHERAL__ENABLE {0} \
    CONFIG.PSU__ENET1__PERIPHERAL__ENABLE {0} \
    CONFIG.PSU__ENET2__PERIPHERAL__ENABLE {0} \
    CONFIG.PSU__ENET3__FIFO__ENABLE {0} \
    CONFIG.PSU__ENET3__GRP_MDIO__ENABLE {1} \
    CONFIG.PSU__ENET3__GRP_MDIO__IO {MIO 76 .. 77} \
    CONFIG.PSU__ENET3__PERIPHERAL__ENABLE {1} \
    CONFIG.PSU__ENET3__PERIPHERAL__IO {MIO 64 .. 75} \
    CONFIG.PSU__ENET3__PTP__ENABLE {0} \
    CONFIG.PSU__ENET3__TSU__ENABLE {0} \
    CONFIG.PSU__EN_AXI_STATUS_PORTS {0} \
    CONFIG.PSU__EN_EMIO_TRACE {0} \
    CONFIG.PSU__EP__IP {0} \
    CONFIG.PSU__EXPAND__CORESIGHT {0} \
    CONFIG.PSU__EXPAND__FPD_SLAVES {0} \
    CONFIG.PSU__EXPAND__GIC {0} \
    CONFIG.PSU__EXPAND__LOWER_LPS_SLAVES {0} \
    CONFIG.PSU__EXPAND__UPPER_LPS_SLAVES {0} \
    CONFIG.PSU__FPD_SLCR__WDT1__ACT_FREQMHZ {99.999001} \
    CONFIG.PSU__FPGA_PL0_ENABLE {1} \
    CONFIG.PSU__FPGA_PL1_ENABLE {1} \
    CONFIG.PSU__FPGA_PL2_ENABLE {0} \
    CONFIG.PSU__FPGA_PL3_ENABLE {0} \
    CONFIG.PSU__FP__POWER__ON {1} \
    CONFIG.PSU__FTM__CTI_IN_0 {0} \
    CONFIG.PSU__FTM__CTI_IN_1 {0} \
    CONFIG.PSU__FTM__CTI_IN_2 {0} \
    CONFIG.PSU__FTM__CTI_IN_3 {0} \
    CONFIG.PSU__FTM__CTI_OUT_0 {0} \
    CONFIG.PSU__FTM__CTI_OUT_1 {0} \
    CONFIG.PSU__FTM__CTI_OUT_2 {0} \
    CONFIG.PSU__FTM__CTI_OUT_3 {0} \
    CONFIG.PSU__FTM__GPI {0} \
    CONFIG.PSU__FTM__GPO {0} \
    CONFIG.PSU__GEM3_COHERENCY {0} \
    CONFIG.PSU__GEM3_ROUTE_THROUGH_FPD {0} \
    CONFIG.PSU__GEM__TSU__ENABLE {0} \
    CONFIG.PSU__GEN_IPI_0__MASTER {APU} \
    CONFIG.PSU__GEN_IPI_10__MASTER {NONE} \
    CONFIG.PSU__GEN_IPI_1__MASTER {RPU0} \
    CONFIG.PSU__GEN_IPI_2__MASTER {RPU1} \
    CONFIG.PSU__GEN_IPI_3__MASTER {PMU} \
    CONFIG.PSU__GEN_IPI_4__MASTER {PMU} \
    CONFIG.PSU__GEN_IPI_5__MASTER {PMU} \
    CONFIG.PSU__GEN_IPI_6__MASTER {PMU} \
    CONFIG.PSU__GEN_IPI_7__MASTER {NONE} \
    CONFIG.PSU__GEN_IPI_8__MASTER {NONE} \
    CONFIG.PSU__GEN_IPI_9__MASTER {NONE} \
    CONFIG.PSU__GPIO0_MIO__IO {MIO 0 .. 25} \
    CONFIG.PSU__GPIO0_MIO__PERIPHERAL__ENABLE {1} \
    CONFIG.PSU__GPIO1_MIO__IO {MIO 26 .. 51} \
    CONFIG.PSU__GPIO1_MIO__PERIPHERAL__ENABLE {1} \
    CONFIG.PSU__GPIO2_MIO__PERIPHERAL__ENABLE {0} \
    CONFIG.PSU__GPIO_EMIO_WIDTH {95} \
    CONFIG.PSU__GPIO_EMIO__PERIPHERAL__ENABLE {1} \
    CONFIG.PSU__GPIO_EMIO__PERIPHERAL__IO {95} \
    CONFIG.PSU__GPIO_EMIO__WIDTH {[94:0]} \
    CONFIG.PSU__GPU_PP0__POWER__ON {0} \
    CONFIG.PSU__GPU_PP1__POWER__ON {0} \
    CONFIG.PSU__GT_REF_CLK__FREQMHZ {33.333} \
    CONFIG.PSU__HPM0_FPD__NUM_READ_THREADS {4} \
    CONFIG.PSU__HPM0_FPD__NUM_WRITE_THREADS {4} \
    CONFIG.PSU__HPM0_LPD__NUM_READ_THREADS {4} \
    CONFIG.PSU__HPM0_LPD__NUM_WRITE_THREADS {4} \
    CONFIG.PSU__HPM1_FPD__NUM_READ_THREADS {4} \
    CONFIG.PSU__HPM1_FPD__NUM_WRITE_THREADS {4} \
    CONFIG.PSU__I2C0_LOOP_I2C1__ENABLE {0} \
    CONFIG.PSU__I2C0__GRP_INT__ENABLE {0} \
    CONFIG.PSU__I2C0__PERIPHERAL__ENABLE {1} \
    CONFIG.PSU__I2C0__PERIPHERAL__IO {MIO 14 .. 15} \
    CONFIG.PSU__I2C1__GRP_INT__ENABLE {0} \
    CONFIG.PSU__I2C1__PERIPHERAL__ENABLE {1} \
    CONFIG.PSU__I2C1__PERIPHERAL__IO {MIO 16 .. 17} \
    CONFIG.PSU__IOU_SLCR__IOU_TTC_APB_CLK__TTC0_SEL {APB} \
    CONFIG.PSU__IOU_SLCR__IOU_TTC_APB_CLK__TTC1_SEL {APB} \
    CONFIG.PSU__IOU_SLCR__IOU_TTC_APB_CLK__TTC2_SEL {APB} \
    CONFIG.PSU__IOU_SLCR__IOU_TTC_APB_CLK__TTC3_SEL {APB} \
    CONFIG.PSU__IOU_SLCR__TTC0__ACT_FREQMHZ {100.000000} \
    CONFIG.PSU__IOU_SLCR__TTC1__ACT_FREQMHZ {100.000000} \
    CONFIG.PSU__IOU_SLCR__TTC2__ACT_FREQMHZ {100.000000} \
    CONFIG.PSU__IOU_SLCR__TTC3__ACT_FREQMHZ {100.000000} \
    CONFIG.PSU__IOU_SLCR__WDT0__ACT_FREQMHZ {99.999001} \
    CONFIG.PSU__IRQ_P2F_ADMA_CHAN__INT {0} \
    CONFIG.PSU__IRQ_P2F_AIB_AXI__INT {0} \
    CONFIG.PSU__IRQ_P2F_AMS__INT {0} \
    CONFIG.PSU__IRQ_P2F_APM_FPD__INT {0} \
    CONFIG.PSU__IRQ_P2F_APU_COMM__INT {0} \
    CONFIG.PSU__IRQ_P2F_APU_CPUMNT__INT {0} \
    CONFIG.PSU__IRQ_P2F_APU_CTI__INT {0} \
    CONFIG.PSU__IRQ_P2F_APU_EXTERR__INT {0} \
    CONFIG.PSU__IRQ_P2F_APU_IPI__INT {0} \
    CONFIG.PSU__IRQ_P2F_APU_L2ERR__INT {0} \
    CONFIG.PSU__IRQ_P2F_APU_PMU__INT {0} \
    CONFIG.PSU__IRQ_P2F_APU_REGS__INT {0} \
    CONFIG.PSU__IRQ_P2F_ATB_LPD__INT {0} \
    CONFIG.PSU__IRQ_P2F_CLKMON__INT {0} \
    CONFIG.PSU__IRQ_P2F_CSUPMU_WDT__INT {0} \
    CONFIG.PSU__IRQ_P2F_DDR_SS__INT {0} \
    CONFIG.PSU__IRQ_P2F_DPDMA__INT {0} \
    CONFIG.PSU__IRQ_P2F_EFUSE__INT {0} \
    CONFIG.PSU__IRQ_P2F_ENT3_WAKEUP__INT {0} \
    CONFIG.PSU__IRQ_P2F_ENT3__INT {0} \
    CONFIG.PSU__IRQ_P2F_FPD_APB__INT {0} \
    CONFIG.PSU__IRQ_P2F_FPD_ATB_ERR__INT {0} \
    CONFIG.PSU__IRQ_P2F_FP_WDT__INT {0} \
    CONFIG.PSU__IRQ_P2F_GDMA_CHAN__INT {0} \
    CONFIG.PSU__IRQ_P2F_GPIO__INT {0} \
    CONFIG.PSU__IRQ_P2F_GPU__INT {0} \
    CONFIG.PSU__IRQ_P2F_I2C0__INT {0} \
    CONFIG.PSU__IRQ_P2F_I2C1__INT {0} \
    CONFIG.PSU__IRQ_P2F_LPD_APB__INT {0} \
    CONFIG.PSU__IRQ_P2F_LPD_APM__INT {0} \
    CONFIG.PSU__IRQ_P2F_LP_WDT__INT {0} \
    CONFIG.PSU__IRQ_P2F_OCM_ERR__INT {0} \
    CONFIG.PSU__IRQ_P2F_PCIE_DMA__INT {0} \
    CONFIG.PSU__IRQ_P2F_PCIE_LEGACY__INT {0} \
    CONFIG.PSU__IRQ_P2F_PCIE_MSC__INT {0} \
    CONFIG.PSU__IRQ_P2F_PCIE_MSI__INT {0} \
    CONFIG.PSU__IRQ_P2F_PL_IPI__INT {0} \
    CONFIG.PSU__IRQ_P2F_QSPI__INT {0} \
    CONFIG.PSU__IRQ_P2F_R5_CORE0_ECC_ERR__INT {0} \
    CONFIG.PSU__IRQ_P2F_R5_CORE1_ECC_ERR__INT {0} \
    CONFIG.PSU__IRQ_P2F_RPU_IPI__INT {0} \
    CONFIG.PSU__IRQ_P2F_RPU_PERMON__INT {0} \
    CONFIG.PSU__IRQ_P2F_RTC_ALARM__INT {0} \
    CONFIG.PSU__IRQ_P2F_RTC_SECONDS__INT {0} \
    CONFIG.PSU__IRQ_P2F_SATA__INT {0} \
    CONFIG.PSU__IRQ_P2F_SDIO1_WAKE__INT {0} \
    CONFIG.PSU__IRQ_P2F_SDIO1__INT {0} \
    CONFIG.PSU__IRQ_P2F_SPI0__INT {0} \
    CONFIG.PSU__IRQ_P2F_SPI1__INT {0} \
    CONFIG.PSU__IRQ_P2F_TTC0__INT0 {0} \
    CONFIG.PSU__IRQ_P2F_TTC0__INT1 {0} \
    CONFIG.PSU__IRQ_P2F_TTC0__INT2 {0} \
    CONFIG.PSU__IRQ_P2F_TTC1__INT0 {0} \
    CONFIG.PSU__IRQ_P2F_TTC1__INT1 {0} \
    CONFIG.PSU__IRQ_P2F_TTC1__INT2 {0} \
    CONFIG.PSU__IRQ_P2F_TTC2__INT0 {0} \
    CONFIG.PSU__IRQ_P2F_TTC2__INT1 {0} \
    CONFIG.PSU__IRQ_P2F_TTC2__INT2 {0} \
    CONFIG.PSU__IRQ_P2F_TTC3__INT0 {0} \
    CONFIG.PSU__IRQ_P2F_TTC3__INT1 {0} \
    CONFIG.PSU__IRQ_P2F_TTC3__INT2 {0} \
    CONFIG.PSU__IRQ_P2F_UART0__INT {0} \
    CONFIG.PSU__IRQ_P2F_USB3_ENDPOINT__INT0 {0} \
    CONFIG.PSU__IRQ_P2F_USB3_ENDPOINT__INT1 {0} \
    CONFIG.PSU__IRQ_P2F_USB3_OTG__INT0 {0} \
    CONFIG.PSU__IRQ_P2F_USB3_OTG__INT1 {0} \
    CONFIG.PSU__IRQ_P2F_USB3_PMU_WAKEUP__INT {0} \
    CONFIG.PSU__IRQ_P2F_XMPU_FPD__INT {0} \
    CONFIG.PSU__IRQ_P2F_XMPU_LPD__INT {0} \
    CONFIG.PSU__IRQ_P2F__INTF_FPD_SMMU__INT {0} \
    CONFIG.PSU__IRQ_P2F__INTF_PPD_CCI__INT {0} \
    CONFIG.PSU__L2_BANK0__POWER__ON {1} \
    CONFIG.PSU__LPDMA0_COHERENCY {0} \
    CONFIG.PSU__LPDMA1_COHERENCY {0} \
    CONFIG.PSU__LPDMA2_COHERENCY {0} \
    CONFIG.PSU__LPDMA3_COHERENCY {0} \
    CONFIG.PSU__LPDMA4_COHERENCY {0} \
    CONFIG.PSU__LPDMA5_COHERENCY {0} \
    CONFIG.PSU__LPDMA6_COHERENCY {0} \
    CONFIG.PSU__LPDMA7_COHERENCY {0} \
    CONFIG.PSU__LPD_SLCR__CSUPMU_WDT_CLK_SEL__SELECT {APB} \
    CONFIG.PSU__LPD_SLCR__CSUPMU__ACT_FREQMHZ {100.000000} \
    CONFIG.PSU__MAXIGP1__DATA_WIDTH {128} \
    CONFIG.PSU__M_AXI_GP0_SUPPORTS_NARROW_BURST {1} \
    CONFIG.PSU__M_AXI_GP1_SUPPORTS_NARROW_BURST {1} \
    CONFIG.PSU__M_AXI_GP2_SUPPORTS_NARROW_BURST {1} \
    CONFIG.PSU__NAND__PERIPHERAL__ENABLE {0} \
    CONFIG.PSU__NAND__READY_BUSY__ENABLE {0} \
    CONFIG.PSU__NUM_FABRIC_RESETS {1} \
    CONFIG.PSU__OCM_BANK0__POWER__ON {1} \
    CONFIG.PSU__OCM_BANK1__POWER__ON {1} \
    CONFIG.PSU__OCM_BANK2__POWER__ON {1} \
    CONFIG.PSU__OCM_BANK3__POWER__ON {1} \
    CONFIG.PSU__OVERRIDE_HPX_QOS {0} \
    CONFIG.PSU__OVERRIDE__BASIC_CLOCK {0} \
    CONFIG.PSU__PCIE__ACS_VIOLAION {0} \
    CONFIG.PSU__PCIE__AER_CAPABILITY {0} \
    CONFIG.PSU__PCIE__CLASS_CODE_BASE {} \
    CONFIG.PSU__PCIE__CLASS_CODE_INTERFACE {} \
    CONFIG.PSU__PCIE__CLASS_CODE_SUB {} \
    CONFIG.PSU__PCIE__DEVICE_ID {} \
    CONFIG.PSU__PCIE__INTX_GENERATION {0} \
    CONFIG.PSU__PCIE__MSIX_CAPABILITY {0} \
    CONFIG.PSU__PCIE__MSI_CAPABILITY {0} \
    CONFIG.PSU__PCIE__PERIPHERAL__ENABLE {0} \
    CONFIG.PSU__PCIE__PERIPHERAL__ENDPOINT_ENABLE {1} \
    CONFIG.PSU__PCIE__PERIPHERAL__ROOTPORT_ENABLE {0} \
    CONFIG.PSU__PCIE__RESET__POLARITY {Active Low} \
    CONFIG.PSU__PCIE__REVISION_ID {} \
    CONFIG.PSU__PCIE__SUBSYSTEM_ID {} \
    CONFIG.PSU__PCIE__SUBSYSTEM_VENDOR_ID {} \
    CONFIG.PSU__PCIE__VENDOR_ID {} \
    CONFIG.PSU__PJTAG__PERIPHERAL__ENABLE {0} \
    CONFIG.PSU__PL_CLK0_BUF {TRUE} \
    CONFIG.PSU__PL_CLK1_BUF {TRUE} \
    CONFIG.PSU__PL__POWER__ON {1} \
    CONFIG.PSU__PMU_COHERENCY {0} \
    CONFIG.PSU__PMU__AIBACK__ENABLE {0} \
    CONFIG.PSU__PMU__EMIO_GPI__ENABLE {0} \
    CONFIG.PSU__PMU__EMIO_GPO__ENABLE {0} \
    CONFIG.PSU__PMU__GPI0__ENABLE {0} \
    CONFIG.PSU__PMU__GPI1__ENABLE {0} \
    CONFIG.PSU__PMU__GPI2__ENABLE {0} \
    CONFIG.PSU__PMU__GPI3__ENABLE {0} \
    CONFIG.PSU__PMU__GPI4__ENABLE {0} \
    CONFIG.PSU__PMU__GPI5__ENABLE {0} \
    CONFIG.PSU__PMU__GPO0__ENABLE {0} \
    CONFIG.PSU__PMU__GPO1__ENABLE {0} \
    CONFIG.PSU__PMU__GPO2__ENABLE {0} \
    CONFIG.PSU__PMU__GPO3__ENABLE {0} \
    CONFIG.PSU__PMU__GPO4__ENABLE {0} \
    CONFIG.PSU__PMU__GPO5__ENABLE {0} \
    CONFIG.PSU__PMU__PERIPHERAL__ENABLE {1} \
    CONFIG.PSU__PMU__PLERROR__ENABLE {0} \
    CONFIG.PSU__PRESET_APPLIED {1} \
    CONFIG.PSU__PROTECTION__DDR_SEGMENTS {NONE} \
    CONFIG.PSU__PROTECTION__ENABLE {0} \
    CONFIG.PSU__PROTECTION__FPD_SEGMENTS {SA:0xFD1A0000; SIZE:1280; UNIT:KB; RegionTZ:Secure; WrAllowed:Read/Write; subsystemId:PMU Firmware   |    SA:0xFD000000; SIZE:64; UNIT:KB; RegionTZ:Secure; WrAllowed:Read/Write;\
subsystemId:PMU Firmware   |    SA:0xFD010000; SIZE:64; UNIT:KB; RegionTZ:Secure; WrAllowed:Read/Write; subsystemId:PMU Firmware   |    SA:0xFD020000; SIZE:64; UNIT:KB; RegionTZ:Secure; WrAllowed:Read/Write;\
subsystemId:PMU Firmware   |    SA:0xFD030000; SIZE:64; UNIT:KB; RegionTZ:Secure; WrAllowed:Read/Write; subsystemId:PMU Firmware   |    SA:0xFD040000; SIZE:64; UNIT:KB; RegionTZ:Secure; WrAllowed:Read/Write;\
subsystemId:PMU Firmware   |    SA:0xFD050000; SIZE:64; UNIT:KB; RegionTZ:Secure; WrAllowed:Read/Write; subsystemId:PMU Firmware   |    SA:0xFD610000; SIZE:512; UNIT:KB; RegionTZ:Secure; WrAllowed:Read/Write;\
subsystemId:PMU Firmware   |    SA:0xFD5D0000; SIZE:64; UNIT:KB; RegionTZ:Secure; WrAllowed:Read/Write; subsystemId:PMU Firmware   |   SA:0xFD1A0000 ; SIZE:1280; UNIT:KB; RegionTZ:Secure ; WrAllowed:Read/Write;\
subsystemId:Secure Subsystem} \
    CONFIG.PSU__PROTECTION__LPD_SEGMENTS {SA:0xFF980000; SIZE:64; UNIT:KB; RegionTZ:Secure; WrAllowed:Read/Write; subsystemId:PMU Firmware| SA:0xFF5E0000; SIZE:2560; UNIT:KB; RegionTZ:Secure; WrAllowed:Read/Write;\
subsystemId:PMU Firmware| SA:0xFFCC0000; SIZE:64; UNIT:KB; RegionTZ:Secure; WrAllowed:Read/Write; subsystemId:PMU Firmware| SA:0xFF180000; SIZE:768; UNIT:KB; RegionTZ:Secure; WrAllowed:Read/Write; subsystemId:PMU\
Firmware| SA:0xFF410000; SIZE:640; UNIT:KB; RegionTZ:Secure; WrAllowed:Read/Write; subsystemId:PMU Firmware| SA:0xFFA70000; SIZE:64; UNIT:KB; RegionTZ:Secure; WrAllowed:Read/Write; subsystemId:PMU Firmware|\
SA:0xFF9A0000; SIZE:64; UNIT:KB; RegionTZ:Secure; WrAllowed:Read/Write; subsystemId:PMU Firmware|SA:0xFF5E0000 ; SIZE:2560; UNIT:KB; RegionTZ:Secure ; WrAllowed:Read/Write; subsystemId:Secure Subsystem|SA:0xFFCC0000\
; SIZE:64; UNIT:KB; RegionTZ:Secure ; WrAllowed:Read/Write; subsystemId:Secure Subsystem|SA:0xFF180000 ; SIZE:768; UNIT:KB; RegionTZ:Secure ; WrAllowed:Read/Write; subsystemId:Secure Subsystem|SA:0xFF9A0000\
; SIZE:64; UNIT:KB; RegionTZ:Secure ; WrAllowed:Read/Write; subsystemId:Secure Subsystem} \
    CONFIG.PSU__PROTECTION__MASTERS {USB1:NonSecure;0|USB0:NonSecure;1|S_AXI_LPD:NA;0|S_AXI_HPC1_FPD:NA;0|S_AXI_HPC0_FPD:NA;0|S_AXI_HP3_FPD:NA;0|S_AXI_HP2_FPD:NA;0|S_AXI_HP1_FPD:NA;0|S_AXI_HP0_FPD:NA;1|S_AXI_ACP:NA;0|S_AXI_ACE:NA;0|SD1:NonSecure;1|SD0:NonSecure;0|SATA1:NonSecure;0|SATA0:NonSecure;0|RPU1:Secure;1|RPU0:Secure;1|QSPI:NonSecure;1|PMU:NA;1|PCIe:NonSecure;0|NAND:NonSecure;0|LDMA:NonSecure;1|GPU:NonSecure;1|GEM3:NonSecure;1|GEM2:NonSecure;0|GEM1:NonSecure;0|GEM0:NonSecure;0|FDMA:NonSecure;1|DP:NonSecure;0|DAP:NA;1|Coresight:NA;1|CSU:NA;1|APU:NA;1}\
\
    CONFIG.PSU__PROTECTION__MASTERS_TZ {GEM0:NonSecure|SD1:NonSecure|GEM2:NonSecure|GEM1:NonSecure|GEM3:NonSecure|PCIe:NonSecure|DP:NonSecure|NAND:NonSecure|GPU:NonSecure|USB1:NonSecure|USB0:NonSecure|LDMA:NonSecure|FDMA:NonSecure|QSPI:NonSecure|SD0:NonSecure}\
\
    CONFIG.PSU__PROTECTION__OCM_SEGMENTS {NONE} \
    CONFIG.PSU__PROTECTION__PRESUBSYSTEMS {NONE} \
    CONFIG.PSU__PROTECTION__SLAVES {LPD;USB3_1_XHCI;FE300000;FE3FFFFF;0|LPD;USB3_1;FF9E0000;FF9EFFFF;0|LPD;USB3_0_XHCI;FE200000;FE2FFFFF;1|LPD;USB3_0;FF9D0000;FF9DFFFF;1|LPD;UART1;FF010000;FF01FFFF;0|LPD;UART0;FF000000;FF00FFFF;1|LPD;TTC3;FF140000;FF14FFFF;1|LPD;TTC2;FF130000;FF13FFFF;1|LPD;TTC1;FF120000;FF12FFFF;1|LPD;TTC0;FF110000;FF11FFFF;1|FPD;SWDT1;FD4D0000;FD4DFFFF;1|LPD;SWDT0;FF150000;FF15FFFF;1|LPD;SPI1;FF050000;FF05FFFF;1|LPD;SPI0;FF040000;FF04FFFF;1|FPD;SMMU_REG;FD5F0000;FD5FFFFF;1|FPD;SMMU;FD800000;FDFFFFFF;1|FPD;SIOU;FD3D0000;FD3DFFFF;1|FPD;SERDES;FD400000;FD47FFFF;1|LPD;SD1;FF170000;FF17FFFF;1|LPD;SD0;FF160000;FF16FFFF;0|FPD;SATA;FD0C0000;FD0CFFFF;0|LPD;RTC;FFA60000;FFA6FFFF;1|LPD;RSA_CORE;FFCE0000;FFCEFFFF;1|LPD;RPU;FF9A0000;FF9AFFFF;1|LPD;R5_TCM_RAM_GLOBAL;FFE00000;FFE3FFFF;1|LPD;R5_1_Instruction_Cache;FFEC0000;FFECFFFF;1|LPD;R5_1_Data_Cache;FFED0000;FFEDFFFF;1|LPD;R5_1_BTCM_GLOBAL;FFEB0000;FFEBFFFF;1|LPD;R5_1_ATCM_GLOBAL;FFE90000;FFE9FFFF;1|LPD;R5_0_Instruction_Cache;FFE40000;FFE4FFFF;1|LPD;R5_0_Data_Cache;FFE50000;FFE5FFFF;1|LPD;R5_0_BTCM_GLOBAL;FFE20000;FFE2FFFF;1|LPD;R5_0_ATCM_GLOBAL;FFE00000;FFE0FFFF;1|LPD;QSPI_Linear_Address;C0000000;DFFFFFFF;1|LPD;QSPI;FF0F0000;FF0FFFFF;1|LPD;PMU_RAM;FFDC0000;FFDDFFFF;1|LPD;PMU_GLOBAL;FFD80000;FFDBFFFF;1|FPD;PCIE_MAIN;FD0E0000;FD0EFFFF;0|FPD;PCIE_LOW;E0000000;EFFFFFFF;0|FPD;PCIE_HIGH2;8000000000;BFFFFFFFFF;0|FPD;PCIE_HIGH1;600000000;7FFFFFFFF;0|FPD;PCIE_DMA;FD0F0000;FD0FFFFF;0|FPD;PCIE_ATTRIB;FD480000;FD48FFFF;0|LPD;OCM_XMPU_CFG;FFA70000;FFA7FFFF;1|LPD;OCM_SLCR;FF960000;FF96FFFF;1|OCM;OCM;FFFC0000;FFFFFFFF;1|LPD;NAND;FF100000;FF10FFFF;0|LPD;MBISTJTAG;FFCF0000;FFCFFFFF;1|LPD;LPD_XPPU_SINK;FF9C0000;FF9CFFFF;1|LPD;LPD_XPPU;FF980000;FF98FFFF;1|LPD;LPD_SLCR_SECURE;FF4B0000;FF4DFFFF;1|LPD;LPD_SLCR;FF410000;FF4AFFFF;1|LPD;LPD_GPV;FE100000;FE1FFFFF;1|LPD;LPD_DMA_7;FFAF0000;FFAFFFFF;1|LPD;LPD_DMA_6;FFAE0000;FFAEFFFF;1|LPD;LPD_DMA_5;FFAD0000;FFADFFFF;1|LPD;LPD_DMA_4;FFAC0000;FFACFFFF;1|LPD;LPD_DMA_3;FFAB0000;FFABFFFF;1|LPD;LPD_DMA_2;FFAA0000;FFAAFFFF;1|LPD;LPD_DMA_1;FFA90000;FFA9FFFF;1|LPD;LPD_DMA_0;FFA80000;FFA8FFFF;1|LPD;IPI_CTRL;FF380000;FF3FFFFF;1|LPD;IOU_SLCR;FF180000;FF23FFFF;1|LPD;IOU_SECURE_SLCR;FF240000;FF24FFFF;1|LPD;IOU_SCNTRS;FF260000;FF26FFFF;1|LPD;IOU_SCNTR;FF250000;FF25FFFF;1|LPD;IOU_GPV;FE000000;FE0FFFFF;1|LPD;I2C1;FF030000;FF03FFFF;1|LPD;I2C0;FF020000;FF02FFFF;1|FPD;GPU;FD4B0000;FD4BFFFF;0|LPD;GPIO;FF0A0000;FF0AFFFF;1|LPD;GEM3;FF0E0000;FF0EFFFF;1|LPD;GEM2;FF0D0000;FF0DFFFF;0|LPD;GEM1;FF0C0000;FF0CFFFF;0|LPD;GEM0;FF0B0000;FF0BFFFF;0|FPD;FPD_XMPU_SINK;FD4F0000;FD4FFFFF;1|FPD;FPD_XMPU_CFG;FD5D0000;FD5DFFFF;1|FPD;FPD_SLCR_SECURE;FD690000;FD6CFFFF;1|FPD;FPD_SLCR;FD610000;FD68FFFF;1|FPD;FPD_DMA_CH7;FD570000;FD57FFFF;1|FPD;FPD_DMA_CH6;FD560000;FD56FFFF;1|FPD;FPD_DMA_CH5;FD550000;FD55FFFF;1|FPD;FPD_DMA_CH4;FD540000;FD54FFFF;1|FPD;FPD_DMA_CH3;FD530000;FD53FFFF;1|FPD;FPD_DMA_CH2;FD520000;FD52FFFF;1|FPD;FPD_DMA_CH1;FD510000;FD51FFFF;1|FPD;FPD_DMA_CH0;FD500000;FD50FFFF;1|LPD;EFUSE;FFCC0000;FFCCFFFF;1|FPD;Display\
Port;FD4A0000;FD4AFFFF;0|FPD;DPDMA;FD4C0000;FD4CFFFF;0|FPD;DDR_XMPU5_CFG;FD050000;FD05FFFF;1|FPD;DDR_XMPU4_CFG;FD040000;FD04FFFF;1|FPD;DDR_XMPU3_CFG;FD030000;FD03FFFF;1|FPD;DDR_XMPU2_CFG;FD020000;FD02FFFF;1|FPD;DDR_XMPU1_CFG;FD010000;FD01FFFF;1|FPD;DDR_XMPU0_CFG;FD000000;FD00FFFF;1|FPD;DDR_QOS_CTRL;FD090000;FD09FFFF;1|FPD;DDR_PHY;FD080000;FD08FFFF;1|DDR;DDR_LOW;0;7FFFFFFF;1|DDR;DDR_HIGH;800000000;87FFFFFFF;1|FPD;DDDR_CTRL;FD070000;FD070FFF;1|LPD;Coresight;FE800000;FEFFFFFF;1|LPD;CSU_DMA;FFC80000;FFC9FFFF;1|LPD;CSU;FFCA0000;FFCAFFFF;1|LPD;CRL_APB;FF5E0000;FF85FFFF;1|FPD;CRF_APB;FD1A0000;FD2DFFFF;1|FPD;CCI_REG;FD5E0000;FD5EFFFF;1|LPD;CAN1;FF070000;FF07FFFF;0|LPD;CAN0;FF060000;FF06FFFF;0|FPD;APU;FD5C0000;FD5CFFFF;1|LPD;APM_INTC_IOU;FFA20000;FFA2FFFF;1|LPD;APM_FPD_LPD;FFA30000;FFA3FFFF;1|FPD;APM_5;FD490000;FD49FFFF;1|FPD;APM_0;FD0B0000;FD0BFFFF;1|LPD;APM2;FFA10000;FFA1FFFF;1|LPD;APM1;FFA00000;FFA0FFFF;1|LPD;AMS;FFA50000;FFA5FFFF;1|FPD;AFI_5;FD3B0000;FD3BFFFF;1|FPD;AFI_4;FD3A0000;FD3AFFFF;1|FPD;AFI_3;FD390000;FD39FFFF;1|FPD;AFI_2;FD380000;FD38FFFF;1|FPD;AFI_1;FD370000;FD37FFFF;1|FPD;AFI_0;FD360000;FD36FFFF;1|LPD;AFIFM6;FF9B0000;FF9BFFFF;1|FPD;ACPU_GIC;F9010000;F907FFFF;1}\
\
    CONFIG.PSU__PROTECTION__SUBSYSTEMS {PMU Firmware:PMU|Secure Subsystem:} \
    CONFIG.PSU__PSS_ALT_REF_CLK__ENABLE {0} \
    CONFIG.PSU__PSS_ALT_REF_CLK__FREQMHZ {33.333} \
    CONFIG.PSU__PSS_REF_CLK__FREQMHZ {33.333} \
    CONFIG.PSU__QSPI_COHERENCY {0} \
    CONFIG.PSU__QSPI_ROUTE_THROUGH_FPD {0} \
    CONFIG.PSU__QSPI__GRP_FBCLK__ENABLE {1} \
    CONFIG.PSU__QSPI__GRP_FBCLK__IO {MIO 6} \
    CONFIG.PSU__QSPI__PERIPHERAL__DATA_MODE {x4} \
    CONFIG.PSU__QSPI__PERIPHERAL__ENABLE {1} \
    CONFIG.PSU__QSPI__PERIPHERAL__IO {MIO 0 .. 12} \
    CONFIG.PSU__QSPI__PERIPHERAL__MODE {Dual Parallel} \
    CONFIG.PSU__REPORT__DBGLOG {0} \
    CONFIG.PSU__RPU_COHERENCY {0} \
    CONFIG.PSU__RPU__POWER__ON {1} \
    CONFIG.PSU__SATA__PERIPHERAL__ENABLE {0} \
    CONFIG.PSU__SAXIGP2__DATA_WIDTH {64} \
    CONFIG.PSU__SD0__CLK_100_SDR_OTAP_DLY {0x3} \
    CONFIG.PSU__SD0__CLK_200_SDR_OTAP_DLY {0x3} \
    CONFIG.PSU__SD0__CLK_50_DDR_ITAP_DLY {0x3D} \
    CONFIG.PSU__SD0__CLK_50_DDR_OTAP_DLY {0x4} \
    CONFIG.PSU__SD0__CLK_50_SDR_ITAP_DLY {0x15} \
    CONFIG.PSU__SD0__CLK_50_SDR_OTAP_DLY {0x5} \
    CONFIG.PSU__SD0__PERIPHERAL__ENABLE {0} \
    CONFIG.PSU__SD0__RESET__ENABLE {0} \
    CONFIG.PSU__SD1_COHERENCY {0} \
    CONFIG.PSU__SD1_ROUTE_THROUGH_FPD {0} \
    CONFIG.PSU__SD1__CLK_100_SDR_OTAP_DLY {0x3} \
    CONFIG.PSU__SD1__CLK_200_SDR_OTAP_DLY {0x3} \
    CONFIG.PSU__SD1__CLK_50_DDR_ITAP_DLY {0x3D} \
    CONFIG.PSU__SD1__CLK_50_DDR_OTAP_DLY {0x4} \
    CONFIG.PSU__SD1__CLK_50_SDR_ITAP_DLY {0x15} \
    CONFIG.PSU__SD1__CLK_50_SDR_OTAP_DLY {0x5} \
    CONFIG.PSU__SD1__DATA_TRANSFER_MODE {8Bit} \
    CONFIG.PSU__SD1__GRP_CD__ENABLE {1} \
    CONFIG.PSU__SD1__GRP_CD__IO {MIO 45} \
    CONFIG.PSU__SD1__GRP_POW__ENABLE {0} \
    CONFIG.PSU__SD1__GRP_WP__ENABLE {0} \
    CONFIG.PSU__SD1__PERIPHERAL__ENABLE {1} \
    CONFIG.PSU__SD1__PERIPHERAL__IO {MIO 39 .. 51} \
    CONFIG.PSU__SD1__SLOT_TYPE {SD 3.0} \
    CONFIG.PSU__SPI0_LOOP_SPI1__ENABLE {0} \
    CONFIG.PSU__SPI0__GRP_SS0__IO {EMIO} \
    CONFIG.PSU__SPI0__GRP_SS1__ENABLE {1} \
    CONFIG.PSU__SPI0__GRP_SS1__IO {EMIO} \
    CONFIG.PSU__SPI0__GRP_SS2__ENABLE {0} \
    CONFIG.PSU__SPI0__PERIPHERAL__ENABLE {1} \
    CONFIG.PSU__SPI0__PERIPHERAL__IO {EMIO} \
    CONFIG.PSU__SPI1__GRP_SS0__IO {EMIO} \
    CONFIG.PSU__SPI1__GRP_SS1__ENABLE {1} \
    CONFIG.PSU__SPI1__GRP_SS1__IO {EMIO} \
    CONFIG.PSU__SPI1__GRP_SS2__ENABLE {0} \
    CONFIG.PSU__SPI1__PERIPHERAL__ENABLE {1} \
    CONFIG.PSU__SPI1__PERIPHERAL__IO {EMIO} \
    CONFIG.PSU__SWDT0__CLOCK__ENABLE {0} \
    CONFIG.PSU__SWDT0__PERIPHERAL__ENABLE {1} \
    CONFIG.PSU__SWDT0__PERIPHERAL__IO {NA} \
    CONFIG.PSU__SWDT0__RESET__ENABLE {0} \
    CONFIG.PSU__SWDT1__CLOCK__ENABLE {0} \
    CONFIG.PSU__SWDT1__PERIPHERAL__ENABLE {1} \
    CONFIG.PSU__SWDT1__PERIPHERAL__IO {NA} \
    CONFIG.PSU__SWDT1__RESET__ENABLE {0} \
    CONFIG.PSU__TCM0A__POWER__ON {1} \
    CONFIG.PSU__TCM0B__POWER__ON {1} \
    CONFIG.PSU__TCM1A__POWER__ON {1} \
    CONFIG.PSU__TCM1B__POWER__ON {1} \
    CONFIG.PSU__TESTSCAN__PERIPHERAL__ENABLE {0} \
    CONFIG.PSU__TRACE__INTERNAL_WIDTH {32} \
    CONFIG.PSU__TRACE__PERIPHERAL__ENABLE {0} \
    CONFIG.PSU__TRISTATE__INVERTED {1} \
    CONFIG.PSU__TSU__BUFG_PORT_PAIR {0} \
    CONFIG.PSU__TTC0__CLOCK__ENABLE {0} \
    CONFIG.PSU__TTC0__PERIPHERAL__ENABLE {1} \
    CONFIG.PSU__TTC0__PERIPHERAL__IO {NA} \
    CONFIG.PSU__TTC0__WAVEOUT__ENABLE {0} \
    CONFIG.PSU__TTC1__CLOCK__ENABLE {0} \
    CONFIG.PSU__TTC1__PERIPHERAL__ENABLE {1} \
    CONFIG.PSU__TTC1__PERIPHERAL__IO {NA} \
    CONFIG.PSU__TTC1__WAVEOUT__ENABLE {0} \
    CONFIG.PSU__TTC2__CLOCK__ENABLE {0} \
    CONFIG.PSU__TTC2__PERIPHERAL__ENABLE {1} \
    CONFIG.PSU__TTC2__PERIPHERAL__IO {NA} \
    CONFIG.PSU__TTC2__WAVEOUT__ENABLE {0} \
    CONFIG.PSU__TTC3__CLOCK__ENABLE {0} \
    CONFIG.PSU__TTC3__PERIPHERAL__ENABLE {1} \
    CONFIG.PSU__TTC3__PERIPHERAL__IO {NA} \
    CONFIG.PSU__TTC3__WAVEOUT__ENABLE {0} \
    CONFIG.PSU__UART0_LOOP_UART1__ENABLE {0} \
    CONFIG.PSU__UART0__BAUD_RATE {115200} \
    CONFIG.PSU__UART0__MODEM__ENABLE {0} \
    CONFIG.PSU__UART0__PERIPHERAL__ENABLE {1} \
    CONFIG.PSU__UART0__PERIPHERAL__IO {MIO 18 .. 19} \
    CONFIG.PSU__UART1__PERIPHERAL__ENABLE {0} \
    CONFIG.PSU__USB0_COHERENCY {0} \
    CONFIG.PSU__USB0__PERIPHERAL__ENABLE {1} \
    CONFIG.PSU__USB0__PERIPHERAL__IO {MIO 52 .. 63} \
    CONFIG.PSU__USB0__REF_CLK_FREQ {26} \
    CONFIG.PSU__USB0__REF_CLK_SEL {Ref Clk2} \
    CONFIG.PSU__USB1__PERIPHERAL__ENABLE {0} \
    CONFIG.PSU__USB2_0__EMIO__ENABLE {0} \
    CONFIG.PSU__USB3_0__EMIO__ENABLE {0} \
    CONFIG.PSU__USB3_0__PERIPHERAL__ENABLE {1} \
    CONFIG.PSU__USB3_0__PERIPHERAL__IO {GT Lane2} \
    CONFIG.PSU__USB__RESET__MODE {Boot Pin} \
    CONFIG.PSU__USB__RESET__POLARITY {Active Low} \
    CONFIG.PSU__USE_DIFF_RW_CLK_GP2 {0} \
    CONFIG.PSU__USE__ADMA {0} \
    CONFIG.PSU__USE__APU_LEGACY_INTERRUPT {0} \
    CONFIG.PSU__USE__AUDIO {0} \
    CONFIG.PSU__USE__CLK {0} \
    CONFIG.PSU__USE__CLK0 {0} \
    CONFIG.PSU__USE__CLK1 {0} \
    CONFIG.PSU__USE__CLK2 {0} \
    CONFIG.PSU__USE__CLK3 {0} \
    CONFIG.PSU__USE__CROSS_TRIGGER {0} \
    CONFIG.PSU__USE__DDR_INTF_REQUESTED {0} \
    CONFIG.PSU__USE__DEBUG__TEST {0} \
    CONFIG.PSU__USE__EVENT_RPU {0} \
    CONFIG.PSU__USE__FABRIC__RST {1} \
    CONFIG.PSU__USE__FTM {0} \
    CONFIG.PSU__USE__GDMA {0} \
    CONFIG.PSU__USE__IRQ {0} \
    CONFIG.PSU__USE__IRQ0 {1} \
    CONFIG.PSU__USE__IRQ1 {0} \
    CONFIG.PSU__USE__M_AXI_GP0 {0} \
    CONFIG.PSU__USE__M_AXI_GP1 {1} \
    CONFIG.PSU__USE__M_AXI_GP2 {0} \
    CONFIG.PSU__USE__PROC_EVENT_BUS {0} \
    CONFIG.PSU__USE__RPU_LEGACY_INTERRUPT {0} \
    CONFIG.PSU__USE__RST0 {0} \
    CONFIG.PSU__USE__RST1 {0} \
    CONFIG.PSU__USE__RST2 {0} \
    CONFIG.PSU__USE__RST3 {0} \
    CONFIG.PSU__USE__RTC {0} \
    CONFIG.PSU__USE__STM {0} \
    CONFIG.PSU__USE__S_AXI_ACE {0} \
    CONFIG.PSU__USE__S_AXI_ACP {0} \
    CONFIG.PSU__USE__S_AXI_GP0 {0} \
    CONFIG.PSU__USE__S_AXI_GP1 {0} \
    CONFIG.PSU__USE__S_AXI_GP2 {1} \
    CONFIG.PSU__USE__S_AXI_GP3 {0} \
    CONFIG.PSU__USE__S_AXI_GP4 {0} \
    CONFIG.PSU__USE__S_AXI_GP5 {0} \
    CONFIG.PSU__USE__S_AXI_GP6 {0} \
    CONFIG.PSU__USE__USB3_0_HUB {0} \
    CONFIG.PSU__USE__USB3_1_HUB {0} \
    CONFIG.PSU__USE__VIDEO {0} \
    CONFIG.PSU__VIDEO_REF_CLK__ENABLE {0} \
    CONFIG.PSU__VIDEO_REF_CLK__FREQMHZ {33.333} \
    CONFIG.QSPI_BOARD_INTERFACE {custom} \
    CONFIG.SATA_BOARD_INTERFACE {custom} \
    CONFIG.SD0_BOARD_INTERFACE {custom} \
    CONFIG.SD1_BOARD_INTERFACE {custom} \
    CONFIG.SPI0_BOARD_INTERFACE {custom} \
    CONFIG.SPI1_BOARD_INTERFACE {custom} \
    CONFIG.SUBPRESET1 {Custom} \
    CONFIG.SUBPRESET2 {Custom} \
    CONFIG.SWDT0_BOARD_INTERFACE {custom} \
    CONFIG.SWDT1_BOARD_INTERFACE {custom} \
    CONFIG.TRACE_BOARD_INTERFACE {custom} \
    CONFIG.TTC0_BOARD_INTERFACE {custom} \
    CONFIG.TTC1_BOARD_INTERFACE {custom} \
    CONFIG.TTC2_BOARD_INTERFACE {custom} \
    CONFIG.TTC3_BOARD_INTERFACE {custom} \
    CONFIG.UART0_BOARD_INTERFACE {custom} \
    CONFIG.UART1_BOARD_INTERFACE {custom} \
    CONFIG.USB0_BOARD_INTERFACE {custom} \
    CONFIG.USB1_BOARD_INTERFACE {custom} \
  ] $zynq_ultra_ps_e_0


  # Create interface connections
  connect_bd_intf_net -intf_net CLK_DIFF_SYSREF_CLK_1 [get_bd_intf_ports pl_sysref] [get_bd_intf_pins MTS_Block/CLK_DIFF_SYSREF_CLK]
  connect_bd_intf_net -intf_net CLK_IN_D_0_1 [get_bd_intf_ports pl_clk] [get_bd_intf_pins MTS_Block/CLK_DIFF_PL_CLK]
  connect_bd_intf_net -intf_net S01_AXIS_1 [get_bd_intf_pins axis_interconnect_0/S01_AXIS] [get_bd_intf_pins eth_dma_internal/M_AXIS]
  connect_bd_intf_net -intf_net S02_AXIS_1 [get_bd_intf_pins axis_interconnect_0/S02_AXIS] [get_bd_intf_pins rx_blocks/m00_axis]
  connect_bd_intf_net -intf_net adc2_clk_0_1 [get_bd_intf_ports adc2_clk_0] [get_bd_intf_pins usp_rf_data_converter_0/adc2_clk]
  connect_bd_intf_net -intf_net axi_gpio_0_GPIO [get_bd_intf_ports GPIO_0] [get_bd_intf_pins axi_gpio_spi_mux/GPIO]
  connect_bd_intf_net -intf_net axi_interconnect_7_M00_AXI [get_bd_intf_pins axi_gpio_spi_mux/S_AXI] [get_bd_intf_pins axi_interconnect_7/M00_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_7_M01_AXI [get_bd_intf_pins axi_interconnect_7/M01_AXI] [get_bd_intf_pins udp_stack_0/S00_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_7_M02_AXI [get_bd_intf_pins axi_interconnect_7/M02_AXI] [get_bd_intf_pins eth_dma_internal/S_AXI_LITE]
  connect_bd_intf_net -intf_net axi_interconnect_7_M03_AXI [get_bd_intf_pins axi_interconnect_7/M03_AXI] [get_bd_intf_pins stream_manager_0/S00_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_7_M04_AXI [get_bd_intf_pins axi_interconnect_7/M04_AXI] [get_bd_intf_pins tx_blocks/s00_axi]
  connect_bd_intf_net -intf_net axi_interconnect_7_M05_AXI [get_bd_intf_pins axi_interconnect_7/M05_AXI] [get_bd_intf_pins tx_blocks/s00_axi1]
  connect_bd_intf_net -intf_net axi_interconnect_7_M06_AXI [get_bd_intf_pins axi_interconnect_7/M06_AXI] [get_bd_intf_pins usp_rf_data_converter_0/s_axi]
  connect_bd_intf_net -intf_net axi_interconnect_7_M07_AXI [get_bd_intf_pins axi_interconnect_7/M07_AXI] [get_bd_intf_pins rx_blocks/s00_axi]
  connect_bd_intf_net -intf_net axi_interconnect_7_M08_AXI [get_bd_intf_pins axi_interconnect_7/M08_AXI] [get_bd_intf_pins rx_blocks/s00_axi1]
  connect_bd_intf_net -intf_net axi_interconnect_7_M09_AXI [get_bd_intf_pins axi_interconnect_7/M09_AXI] [get_bd_intf_pins rx_blocks/s00_axi2]
  connect_bd_intf_net -intf_net axi_interconnect_7_M10_AXI [get_bd_intf_pins axi_interconnect_7/M10_AXI] [get_bd_intf_pins rx_blocks/S00_AXI3]
  connect_bd_intf_net -intf_net axi_interconnect_7_M11_AXI [get_bd_intf_pins axi_interconnect_7/M11_AXI] [get_bd_intf_pins rx_blocks/s00_axi4]
  connect_bd_intf_net -intf_net axi_interconnect_7_M12_AXI [get_bd_intf_pins axi_interconnect_7/M12_AXI] [get_bd_intf_pins rx_blocks/s00_axi5]
  connect_bd_intf_net -intf_net axi_interconnect_7_M13_AXI [get_bd_intf_pins axi_interconnect_7/M13_AXI] [get_bd_intf_pins rx_blocks/s00_axi6]
  connect_bd_intf_net -intf_net axi_interconnect_7_M14_AXI [get_bd_intf_pins axi_interconnect_7/M14_AXI] [get_bd_intf_pins rx_blocks/s00_axi7]
  connect_bd_intf_net -intf_net axi_interconnect_7_M15_AXI [get_bd_intf_pins axi_interconnect_7/M15_AXI] [get_bd_intf_pins rx_blocks/s00_axi8]
  connect_bd_intf_net -intf_net axi_interconnect_7_M16_AXI [get_bd_intf_pins axi_interconnect_7/M16_AXI] [get_bd_intf_pins tx_blocks/S_AXI_LITE]
  connect_bd_intf_net -intf_net axi_interconnect_7_M17_AXI [get_bd_intf_pins axi_interconnect_7/M17_AXI] [get_bd_intf_pins tx_blocks/s_axi_BUS_A]
  connect_bd_intf_net -intf_net axi_interconnect_7_M18_AXI [get_bd_intf_pins axi_interconnect_7/M18_AXI] [get_bd_intf_pins tx_blocks/s00_axi2]
  connect_bd_intf_net -intf_net axi_interconnect_7_M19_AXI [get_bd_intf_pins axi_interconnect_7/M19_AXI] [get_bd_intf_pins tx_blocks/s_axi_BUS_A1]
  connect_bd_intf_net -intf_net axi_interconnect_7_M20_AXI [get_bd_intf_pins axi_interconnect_7/M20_AXI] [get_bd_intf_pins tx_blocks/S_AXI_CTRL]
  connect_bd_intf_net -intf_net axi_interconnect_7_M21_AXI [get_bd_intf_pins axi_interconnect_7/M21_AXI] [get_bd_intf_pins rx_blocks/S_AXI_CTRL]
  connect_bd_intf_net -intf_net axi_interconnect_7_M22_AXI [get_bd_intf_pins axi_interconnect_7/M22_AXI] [get_bd_intf_pins rx_blocks/s00_axi9]
  connect_bd_intf_net -intf_net axi_interconnect_7_M23_AXI [get_bd_intf_pins axi_interconnect_7/M23_AXI] [get_bd_intf_pins rx_controlled_buffer_0/S00_AXI]
  connect_bd_intf_net -intf_net axi_interconnect_7_M24_AXI [get_bd_intf_pins axi_interconnect_7/M24_AXI] [get_bd_intf_pins rx_blocks/s00_axi10]
  connect_bd_intf_net -intf_net axis_interconnect_0_M00_AXIS [get_bd_intf_pins axis_interconnect_0/M00_AXIS] [get_bd_intf_pins udp_stack_0/S00_AXIS]
  connect_bd_intf_net -intf_net axis_register_slice_1_M_AXIS [get_bd_intf_pins axis_interconnect_0/S00_AXIS] [get_bd_intf_pins axis_register_slice_1/M_AXIS]
  connect_bd_intf_net -intf_net dac0_clk_0_1 [get_bd_intf_ports dac0_clk_0] [get_bd_intf_pins usp_rf_data_converter_0/dac0_clk]
  connect_bd_intf_net -intf_net eth_dma_internal_M00_AXI [get_bd_intf_pins eth_dma_internal/M00_AXI] [get_bd_intf_pins zynq_ultra_ps_e_0/S_AXI_HP0_FPD]
  connect_bd_intf_net -intf_net rx_blocks_M_AXIS [get_bd_intf_pins rx_blocks/M_AXIS] [get_bd_intf_pins rx_controlled_buffer_0/S00_AXIS]
  connect_bd_intf_net -intf_net rx_controlled_buffer_0_M00_AXIS [get_bd_intf_pins rx_controlled_buffer_0/M00_AXIS] [get_bd_intf_pins stream_manager_0/S01_RF_AXIS]
  connect_bd_intf_net -intf_net s00_axis_1 [get_bd_intf_pins rx_blocks/s00_axis] [get_bd_intf_pins usp_rf_data_converter_0/m20_axis]
  connect_bd_intf_net -intf_net s01_axis_2 [get_bd_intf_pins rx_blocks/s01_axis] [get_bd_intf_pins usp_rf_data_converter_0/m21_axis]
  connect_bd_intf_net -intf_net stream_manager_0_M00_UDP_AXIS [get_bd_intf_pins axis_register_slice_1/S_AXIS] [get_bd_intf_pins stream_manager_0/M00_UDP_AXIS]
  connect_bd_intf_net -intf_net stream_manager_0_M01_RF_AXIS [get_bd_intf_pins stream_manager_0/M01_RF_AXIS] [get_bd_intf_pins tx_blocks/s00_axis]
  connect_bd_intf_net -intf_net sysref_in_0_1 [get_bd_intf_ports sysref_in_0] [get_bd_intf_pins usp_rf_data_converter_0/sysref_in]
  connect_bd_intf_net -intf_net tx_blocks_M05_AXIS [get_bd_intf_pins rx_blocks/S10_AXIS] [get_bd_intf_pins tx_blocks/M05_AXIS]
  connect_bd_intf_net -intf_net tx_blocks_M_AXI_MM2S [get_bd_intf_pins eth_dma_internal/S02_AXI] [get_bd_intf_pins tx_blocks/M_AXI_MM2S]
  connect_bd_intf_net -intf_net tx_blocks_m00_axis [get_bd_intf_pins tx_blocks/m00_axis] [get_bd_intf_pins usp_rf_data_converter_0/s00_axis]
  connect_bd_intf_net -intf_net udp_stack_0_M00_AXIS [get_bd_intf_pins stream_manager_0/S00_UDP_AXIS] [get_bd_intf_pins udp_stack_0/M00_AXIS]
  connect_bd_intf_net -intf_net udp_stack_0_M01_AXIS [get_bd_intf_pins eth_dma_internal/S_AXIS_S2MM1] [get_bd_intf_pins udp_stack_0/M01_AXIS]
  connect_bd_intf_net -intf_net user_mgt_si570_sysclk_1 [get_bd_intf_ports user_mgt_si570_sysclk] [get_bd_intf_pins util_ds_buf_0/CLK_IN_D]
  connect_bd_intf_net -intf_net usp_rf_data_converter_0_vout00 [get_bd_intf_ports vout00_0] [get_bd_intf_pins usp_rf_data_converter_0/vout00]
  connect_bd_intf_net -intf_net usp_rf_data_converter_0_vout02 [get_bd_intf_ports vout02_0] [get_bd_intf_pins usp_rf_data_converter_0/vout02]
  connect_bd_intf_net -intf_net vin2_01_0_1 [get_bd_intf_ports vin2_01_0] [get_bd_intf_pins usp_rf_data_converter_0/vin2_01]
  connect_bd_intf_net -intf_net vin2_23_0_1 [get_bd_intf_ports vin2_23_0] [get_bd_intf_pins usp_rf_data_converter_0/vin2_23]
  connect_bd_intf_net -intf_net zynq_ultra_ps_e_0_M_AXI_HPM1_FPD [get_bd_intf_pins axi_interconnect_7/S00_AXI] [get_bd_intf_pins zynq_ultra_ps_e_0/M_AXI_HPM1_FPD]

  # Create port connections
  connect_bd_net -net ARESETN_1 [get_bd_pins axi_interconnect_7/M03_ARESETN] [get_bd_pins axi_interconnect_7/M17_ARESETN] [get_bd_pins axi_interconnect_7/M19_ARESETN] [get_bd_pins axi_interconnect_7/M24_ARESETN] [get_bd_pins axis_interconnect_0/ARESETN] [get_bd_pins axis_interconnect_0/M00_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/S00_AXIS_ARESETN] [get_bd_pins axis_interconnect_0/S01_AXIS_ARESETN] [get_bd_pins axis_register_slice_1/aresetn] [get_bd_pins eth_dma_internal/aresetn] [get_bd_pins reset_block/peripheral_aresetn3] [get_bd_pins rx_blocks/axi_resetn] [get_bd_pins rx_reset/Op1] [get_bd_pins stream_manager_0/udp_aresetn] [get_bd_pins tx_reset/Op1]
  connect_bd_net -net MTS_Block_adc_clk [get_bd_pins MTS_Block/adc_clk] [get_bd_pins axi_interconnect_7/M24_ACLK] [get_bd_pins axis_interconnect_0/S02_AXIS_ACLK] [get_bd_pins reset_block/slowest_sync_clk2] [get_bd_pins rx_blocks/s01_axis_aclk] [get_bd_pins tx_blocks/M05_AXIS_ACLK] [get_bd_pins usp_rf_data_converter_0/m2_axis_aclk]
  connect_bd_net -net MTS_Block_clk_out3 [get_bd_pins MTS_Block/clk_out3] [get_bd_pins rx_blocks/coreClk]
  connect_bd_net -net S02_AXIS_ARESETN_1 [get_bd_pins axis_interconnect_0/S02_AXIS_ARESETN] [get_bd_pins rx_blocks/Res] [get_bd_pins rx_controlled_buffer_0/arst] [get_bd_pins tx_blocks/M05_AXIS_ARESETN]
  connect_bd_net -net eth_dma_internal_dout [get_bd_pins eth_dma_internal/dout] [get_bd_pins zynq_ultra_ps_e_0/pl_ps_irq0]
  connect_bd_net -net reset_block_peripheral_aresetn1 [get_bd_pins reset_block/peripheral_aresetn1] [get_bd_pins stream_manager_0/rf_aresetn] [get_bd_pins tx_blocks/aresetn] [get_bd_pins usp_rf_data_converter_0/s0_axis_aresetn]
  connect_bd_net -net reset_block_peripheral_aresetn2 [get_bd_pins reset_block/peripheral_aresetn2] [get_bd_pins rx_blocks/Op1] [get_bd_pins usp_rf_data_converter_0/m2_axis_aresetn]
  connect_bd_net -net reset_block_peripheral_aresetn4 [get_bd_pins axi_interconnect_7/M22_ARESETN] [get_bd_pins reset_block/peripheral_aresetn4] [get_bd_pins rx_blocks/s00_axi_aresetn1]
  connect_bd_net -net reset_block_peripheral_reset [get_bd_pins reset_block/peripheral_reset] [get_bd_pins udp_stack_0/rst_125MHz]
  connect_bd_net -net rst_ps8_0_96M_peripheral_aresetn [get_bd_pins axi_gpio_spi_mux/s_axi_aresetn] [get_bd_pins axi_interconnect_7/ARESETN] [get_bd_pins axi_interconnect_7/M00_ARESETN] [get_bd_pins axi_interconnect_7/M01_ARESETN] [get_bd_pins axi_interconnect_7/M02_ARESETN] [get_bd_pins axi_interconnect_7/M04_ARESETN] [get_bd_pins axi_interconnect_7/M05_ARESETN] [get_bd_pins axi_interconnect_7/M06_ARESETN] [get_bd_pins axi_interconnect_7/M07_ARESETN] [get_bd_pins axi_interconnect_7/M08_ARESETN] [get_bd_pins axi_interconnect_7/M09_ARESETN] [get_bd_pins axi_interconnect_7/M10_ARESETN] [get_bd_pins axi_interconnect_7/M11_ARESETN] [get_bd_pins axi_interconnect_7/M12_ARESETN] [get_bd_pins axi_interconnect_7/M13_ARESETN] [get_bd_pins axi_interconnect_7/M14_ARESETN] [get_bd_pins axi_interconnect_7/M15_ARESETN] [get_bd_pins axi_interconnect_7/M16_ARESETN] [get_bd_pins axi_interconnect_7/M18_ARESETN] [get_bd_pins axi_interconnect_7/M20_ARESETN] [get_bd_pins axi_interconnect_7/M21_ARESETN] [get_bd_pins axi_interconnect_7/M23_ARESETN] [get_bd_pins axi_interconnect_7/S00_ARESETN] [get_bd_pins eth_dma_internal/axi_resetn] [get_bd_pins reset_block/peripheral_aresetn] [get_bd_pins rx_blocks/s00_axi_aresetn] [get_bd_pins rx_controlled_buffer_0/axi_lite_arst] [get_bd_pins tx_blocks/s00_axi_aresetn] [get_bd_pins udp_stack_0/s00_axi_aresetn] [get_bd_pins usp_rf_data_converter_0/s_axi_aresetn]
  connect_bd_net -net rx_blocks_m00_axis_tlast1 [get_bd_pins axis_interconnect_0/S02_AXIS_tlast] [get_bd_pins rx_blocks/m00_axis_tlast1] [get_bd_pins stream_manager_0/side_info_completed]
  connect_bd_net -net rx_reset_Res [get_bd_pins rx_reset/Res] [get_bd_pins stream_manager_0/rx_arst_in]
  connect_bd_net -net s_axis_aclk1_1 [get_bd_pins MTS_Block/dac_clk] [get_bd_pins axi_interconnect_7/M17_ACLK] [get_bd_pins axi_interconnect_7/M19_ACLK] [get_bd_pins reset_block/slowest_sync_clk3] [get_bd_pins rx_controlled_buffer_0/aclk] [get_bd_pins stream_manager_0/rf_aclk] [get_bd_pins tx_blocks/aclk] [get_bd_pins usp_rf_data_converter_0/s0_axis_aclk]
  connect_bd_net -net stream_manager_0_rx_init [get_bd_pins rx_blocks/triggerin_TEMP] [get_bd_pins stream_manager_0/rx_init]
  connect_bd_net -net stream_manager_0_rx_reset [get_bd_pins rx_blocks/Op2] [get_bd_pins stream_manager_0/rx_rst_out]
  connect_bd_net -net stream_manager_0_slot_recv [get_bd_pins rx_blocks/triggerIn] [get_bd_pins stream_manager_0/slot_recv]
  connect_bd_net -net stream_manager_0_tx_reset [get_bd_pins stream_manager_0/tx_rst_out] [get_bd_pins tx_blocks/Op2]
  connect_bd_net -net tx_blocks_prog_empty [get_bd_pins tx_blocks/prog_empty] [get_bd_pins zynq_ultra_ps_e_0/emio_gpio_i]
  connect_bd_net -net tx_reset_Res [get_bd_pins stream_manager_0/tx_arst_in] [get_bd_pins tx_reset/Res]
  connect_bd_net -net udp_stack_0_phy_tx_clk [get_bd_pins axi_interconnect_7/M03_ACLK] [get_bd_pins axis_interconnect_0/ACLK] [get_bd_pins axis_interconnect_0/M00_AXIS_ACLK] [get_bd_pins axis_interconnect_0/S00_AXIS_ACLK] [get_bd_pins axis_interconnect_0/S01_AXIS_ACLK] [get_bd_pins axis_register_slice_1/aclk] [get_bd_pins eth_dma_internal/aclk] [get_bd_pins reset_block/slowest_sync_clk1] [get_bd_pins rx_reset/s01_axis_aclk] [get_bd_pins stream_manager_0/udp_aclk] [get_bd_pins tx_reset/s01_axis_aclk] [get_bd_pins udp_stack_0/phy_tx_clk]
  connect_bd_net -net udp_stack_0_xcvr_txn [get_bd_ports xcvr_txn_0] [get_bd_pins udp_stack_0/xcvr_txn]
  connect_bd_net -net udp_stack_0_xcvr_txp [get_bd_ports xcvr_txp_0] [get_bd_pins udp_stack_0/xcvr_txp]
  connect_bd_net -net util_ds_buf_0_IBUF_OUT [get_bd_pins udp_stack_0/gt_ref_clk] [get_bd_pins util_ds_buf_0/IBUF_OUT]
  connect_bd_net -net xcvr_rxn_0_1 [get_bd_ports xcvr_rxn_0] [get_bd_pins udp_stack_0/xcvr_rxn]
  connect_bd_net -net xcvr_rxp_0_1 [get_bd_ports xcvr_rxp_0] [get_bd_pins udp_stack_0/xcvr_rxp]
  connect_bd_net -net zynq_ultra_ps_e_0_emio_gpio_o [get_bd_pins rx_blocks/Din] [get_bd_pins rx_reset/Din] [get_bd_pins tx_blocks/Din] [get_bd_pins tx_reset/Din] [get_bd_pins zynq_ultra_ps_e_0/emio_gpio_o]
  connect_bd_net -net zynq_ultra_ps_e_0_pl_clk0 [get_bd_pins axi_gpio_spi_mux/s_axi_aclk] [get_bd_pins axi_interconnect_7/ACLK] [get_bd_pins axi_interconnect_7/M00_ACLK] [get_bd_pins axi_interconnect_7/M01_ACLK] [get_bd_pins axi_interconnect_7/M02_ACLK] [get_bd_pins axi_interconnect_7/M04_ACLK] [get_bd_pins axi_interconnect_7/M05_ACLK] [get_bd_pins axi_interconnect_7/M06_ACLK] [get_bd_pins axi_interconnect_7/M07_ACLK] [get_bd_pins axi_interconnect_7/M08_ACLK] [get_bd_pins axi_interconnect_7/M09_ACLK] [get_bd_pins axi_interconnect_7/M10_ACLK] [get_bd_pins axi_interconnect_7/M11_ACLK] [get_bd_pins axi_interconnect_7/M12_ACLK] [get_bd_pins axi_interconnect_7/M13_ACLK] [get_bd_pins axi_interconnect_7/M14_ACLK] [get_bd_pins axi_interconnect_7/M15_ACLK] [get_bd_pins axi_interconnect_7/M16_ACLK] [get_bd_pins axi_interconnect_7/M18_ACLK] [get_bd_pins axi_interconnect_7/M20_ACLK] [get_bd_pins axi_interconnect_7/M21_ACLK] [get_bd_pins axi_interconnect_7/M23_ACLK] [get_bd_pins axi_interconnect_7/S00_ACLK] [get_bd_pins eth_dma_internal/s_axi_lite_aclk] [get_bd_pins reset_block/slowest_sync_clk] [get_bd_pins rx_blocks/s00_axi_aclk] [get_bd_pins rx_controlled_buffer_0/axi_lite_clk] [get_bd_pins tx_blocks/s00_axi_aclk] [get_bd_pins udp_stack_0/s00_axi_aclk] [get_bd_pins usp_rf_data_converter_0/s_axi_aclk] [get_bd_pins zynq_ultra_ps_e_0/maxihpm1_fpd_aclk] [get_bd_pins zynq_ultra_ps_e_0/pl_clk0] [get_bd_pins zynq_ultra_ps_e_0/saxihp0_fpd_aclk]
  connect_bd_net -net zynq_ultra_ps_e_0_pl_clk1 [get_bd_pins axi_interconnect_7/M22_ACLK] [get_bd_pins reset_block/slowest_sync_clk4] [get_bd_pins rx_blocks/s00_axi_aclk1] [get_bd_pins udp_stack_0/clk_125MHz] [get_bd_pins zynq_ultra_ps_e_0/pl_clk1]
  connect_bd_net -net zynq_ultra_ps_e_0_pl_resetn0 [get_bd_pins reset_block/ext_reset_in] [get_bd_pins zynq_ultra_ps_e_0/pl_resetn0]

  # Create address segments
  assign_bd_address -offset 0xB0002000 -range 0x00001000 -target_address_space [get_bd_addr_spaces zynq_ultra_ps_e_0/Data] [get_bd_addr_segs rx_blocks/CE_5G_NR_v2_0/s00_axi/reg0] -force
  assign_bd_address -offset 0xB0003000 -range 0x00001000 -target_address_space [get_bd_addr_spaces zynq_ultra_ps_e_0/Data] [get_bd_addr_segs rx_blocks/CFO_correction_TOP_0/s00_axi/reg0] -force
  assign_bd_address -offset 0xB0005000 -range 0x00001000 -target_address_space [get_bd_addr_spaces zynq_ultra_ps_e_0/Data] [get_bd_addr_segs rx_blocks/FILTER_DS_x8_v3_0/S00_AXI/S00_AXI_reg] -force
  assign_bd_address -offset 0xB000D000 -range 0x00001000 -target_address_space [get_bd_addr_spaces zynq_ultra_ps_e_0/Data] [get_bd_addr_segs rx_blocks/LDPCdecoder_v2_0/s00_axi/reg0] -force
  assign_bd_address -offset 0xB0006000 -range 0x00001000 -target_address_space [get_bd_addr_spaces zynq_ultra_ps_e_0/Data] [get_bd_addr_segs rx_blocks/MMSE_EQ_V2_0/s00_axi/reg0] -force
  assign_bd_address -offset 0xB000B000 -range 0x00001000 -target_address_space [get_bd_addr_spaces zynq_ultra_ps_e_0/Data] [get_bd_addr_segs tx_blocks/OFDM_MOD_0/s00_axi/reg0] -force
  assign_bd_address -offset 0xB0007000 -range 0x00001000 -target_address_space [get_bd_addr_spaces zynq_ultra_ps_e_0/Data] [get_bd_addr_segs rx_blocks/OFDM_demod_TOP_v3_wr_0/s00_axi/reg0] -force
  assign_bd_address -offset 0xB0008000 -range 0x00001000 -target_address_space [get_bd_addr_spaces zynq_ultra_ps_e_0/Data] [get_bd_addr_segs rx_blocks/PTRS_5G_IP_0/s00_axi/reg0] -force
  assign_bd_address -offset 0xB0012000 -range 0x00001000 -target_address_space [get_bd_addr_spaces zynq_ultra_ps_e_0/Data] [get_bd_addr_segs tx_blocks/SSB_LBM_0/s00_axi/reg0] -force
  assign_bd_address -offset 0xB0009000 -range 0x00001000 -target_address_space [get_bd_addr_spaces zynq_ultra_ps_e_0/Data] [get_bd_addr_segs rx_blocks/SSB_TOP_v3_0/s00_axi/reg0] -force
  assign_bd_address -offset 0xB000C000 -range 0x00001000 -target_address_space [get_bd_addr_spaces zynq_ultra_ps_e_0/Data] [get_bd_addr_segs tx_blocks/TxUpsampleIFS_5G_IP_0/s00_axi/reg0] -force
  assign_bd_address -offset 0xB0016000 -range 0x00001000 -target_address_space [get_bd_addr_spaces zynq_ultra_ps_e_0/Data] [get_bd_addr_segs rx_blocks/automatic_gain_contr_0/s00_axi/reg0] -force
  assign_bd_address -offset 0xB0010000 -range 0x00001000 -target_address_space [get_bd_addr_spaces zynq_ultra_ps_e_0/Data] [get_bd_addr_segs tx_blocks/axi_dma_0/S_AXI_LITE/Reg] -force
  assign_bd_address -offset 0xB0001000 -range 0x00001000 -target_address_space [get_bd_addr_spaces zynq_ultra_ps_e_0/Data] [get_bd_addr_segs eth_dma_internal/axi_eth_dma_internal/S_AXI_LITE/Reg] -force
  assign_bd_address -offset 0xB0080000 -range 0x00001000 -target_address_space [get_bd_addr_spaces zynq_ultra_ps_e_0/Data] [get_bd_addr_segs axi_gpio_spi_mux/S_AXI/Reg] -force
  assign_bd_address -offset 0xB0004000 -range 0x00001000 -target_address_space [get_bd_addr_spaces zynq_ultra_ps_e_0/Data] [get_bd_addr_segs rx_blocks/demapper_top_0/s00_axi/reg0] -force
  assign_bd_address -offset 0xB000E000 -range 0x00001000 -target_address_space [get_bd_addr_spaces zynq_ultra_ps_e_0/Data] [get_bd_addr_segs tx_blocks/nrPDSCH_top_0/s_axi_BUS_A/reg0] -force
  assign_bd_address -offset 0xB0015000 -range 0x00001000 -target_address_space [get_bd_addr_spaces zynq_ultra_ps_e_0/Data] [get_bd_addr_segs rx_blocks/packetizer_RT_0/s00_axi/reg0] -force
  assign_bd_address -offset 0xB0014000 -range 0x00001000 -target_address_space [get_bd_addr_spaces zynq_ultra_ps_e_0/Data] [get_bd_addr_segs rx_controlled_buffer_0/S00_AXI/S00_AXI_reg] -force
  assign_bd_address -offset 0xB000A000 -range 0x00001000 -target_address_space [get_bd_addr_spaces zynq_ultra_ps_e_0/Data] [get_bd_addr_segs stream_manager_0/S00_AXI/S00_AXI_reg] -force
  assign_bd_address -offset 0xB000F000 -range 0x00001000 -target_address_space [get_bd_addr_spaces zynq_ultra_ps_e_0/Data] [get_bd_addr_segs tx_blocks/txBuildGrid_wrp_v2_5_0/s_axi_BUS_A/reg0] -force
  assign_bd_address -offset 0xB0000000 -range 0x00001000 -target_address_space [get_bd_addr_spaces zynq_ultra_ps_e_0/Data] [get_bd_addr_segs udp_stack_0/S00_AXI/S00_AXI_reg] -force
  assign_bd_address -offset 0xB00C0000 -range 0x00040000 -target_address_space [get_bd_addr_spaces zynq_ultra_ps_e_0/Data] [get_bd_addr_segs usp_rf_data_converter_0/s_axi/Reg] -force
  assign_bd_address -offset 0xB0011000 -range 0x00001000 -target_address_space [get_bd_addr_spaces zynq_ultra_ps_e_0/Data] [get_bd_addr_segs tx_blocks/axis_interconnect_0/xbar/S_AXI_CTRL/Reg] -force
  assign_bd_address -offset 0xB0013000 -range 0x00001000 -target_address_space [get_bd_addr_spaces zynq_ultra_ps_e_0/Data] [get_bd_addr_segs rx_blocks/axis_interconnect_0/xbar/S_AXI_CTRL/Reg] -force
  assign_bd_address -offset 0x00000000 -range 0x80000000 -target_address_space [get_bd_addr_spaces eth_dma_internal/axi_eth_dma_internal/Data_MM2S] [get_bd_addr_segs zynq_ultra_ps_e_0/SAXIGP2/HP0_DDR_LOW] -force
  assign_bd_address -offset 0xC0000000 -range 0x20000000 -target_address_space [get_bd_addr_spaces eth_dma_internal/axi_eth_dma_internal/Data_MM2S] [get_bd_addr_segs zynq_ultra_ps_e_0/SAXIGP2/HP0_QSPI] -force
  assign_bd_address -offset 0x00000000 -range 0x80000000 -target_address_space [get_bd_addr_spaces eth_dma_internal/axi_eth_dma_internal/Data_S2MM] [get_bd_addr_segs zynq_ultra_ps_e_0/SAXIGP2/HP0_DDR_LOW] -force
  assign_bd_address -offset 0xC0000000 -range 0x20000000 -target_address_space [get_bd_addr_spaces eth_dma_internal/axi_eth_dma_internal/Data_S2MM] [get_bd_addr_segs zynq_ultra_ps_e_0/SAXIGP2/HP0_QSPI] -force
  assign_bd_address -offset 0x00000000 -range 0x80000000 -target_address_space [get_bd_addr_spaces tx_blocks/axi_dma_0/Data_MM2S] [get_bd_addr_segs zynq_ultra_ps_e_0/SAXIGP2/HP0_DDR_LOW] -force
  assign_bd_address -offset 0xC0000000 -range 0x20000000 -target_address_space [get_bd_addr_spaces tx_blocks/axi_dma_0/Data_MM2S] [get_bd_addr_segs zynq_ultra_ps_e_0/SAXIGP2/HP0_QSPI] -force

  # Exclude Address Segments
  exclude_bd_addr_seg -target_address_space [get_bd_addr_spaces eth_dma_internal/axi_eth_dma_internal/Data_MM2S] [get_bd_addr_segs zynq_ultra_ps_e_0/SAXIGP2/HP0_DDR_HIGH]
  exclude_bd_addr_seg -offset 0xFF000000 -range 0x01000000 -target_address_space [get_bd_addr_spaces eth_dma_internal/axi_eth_dma_internal/Data_MM2S] [get_bd_addr_segs zynq_ultra_ps_e_0/SAXIGP2/HP0_LPS_OCM]
  exclude_bd_addr_seg -target_address_space [get_bd_addr_spaces eth_dma_internal/axi_eth_dma_internal/Data_S2MM] [get_bd_addr_segs zynq_ultra_ps_e_0/SAXIGP2/HP0_DDR_HIGH]
  exclude_bd_addr_seg -offset 0xFF000000 -range 0x01000000 -target_address_space [get_bd_addr_spaces eth_dma_internal/axi_eth_dma_internal/Data_S2MM] [get_bd_addr_segs zynq_ultra_ps_e_0/SAXIGP2/HP0_LPS_OCM]
  exclude_bd_addr_seg -target_address_space [get_bd_addr_spaces tx_blocks/axi_dma_0/Data_MM2S] [get_bd_addr_segs zynq_ultra_ps_e_0/SAXIGP2/HP0_DDR_HIGH]
  exclude_bd_addr_seg -offset 0xFF000000 -range 0x01000000 -target_address_space [get_bd_addr_spaces tx_blocks/axi_dma_0/Data_MM2S] [get_bd_addr_segs zynq_ultra_ps_e_0/SAXIGP2/HP0_LPS_OCM]

  # Perform GUI Layout
  regenerate_bd_layout -layout_string {
   "ActiveEmotionalView":"Default View",
   "Default View_ScaleFactor":"1.0",
   "Default View_TopLeft":"3230,3819",
   "ExpandedHierarchyInLayout":"/rx_blocks|/rx_blocks/soft_reset",
   "commentid":"",
   "guistr":"# # String gsaved with Nlview 7.0r4  2019-12-20 bk=1.5203 VDI=41 GEI=36 GUI=JA:10.0 TLS
#  -string -flagsOSRD
preplace port pl_clk -pg 1 -lvl 0 -x 0 -y 2070 -defaultsOSRD
preplace port pl_sysref -pg 1 -lvl 0 -x 0 -y 2090 -defaultsOSRD
preplace port user_mgt_si570_sysclk -pg 1 -lvl 0 -x 0 -y 2330 -defaultsOSRD
preplace port GPIO_0 -pg 1 -lvl 14 -x 9320 -y 390 -defaultsOSRD
preplace port dac0_clk_0 -pg 1 -lvl 0 -x 0 -y 2620 -defaultsOSRD
preplace port vout00_0 -pg 1 -lvl 14 -x 9320 -y 2660 -defaultsOSRD
preplace port sysref_in_0 -pg 1 -lvl 0 -x 0 -y 2680 -defaultsOSRD
preplace port vout02_0 -pg 1 -lvl 14 -x 9320 -y 2680 -defaultsOSRD
preplace port vin2_01_0 -pg 1 -lvl 0 -x 0 -y 2640 -defaultsOSRD
preplace port vin2_23_0 -pg 1 -lvl 0 -x 0 -y 2660 -defaultsOSRD
preplace port adc2_clk_0 -pg 1 -lvl 0 -x 0 -y 2600 -defaultsOSRD
preplace port port-id_xcvr_rxn_0 -pg 1 -lvl 0 -x 0 -y 2550 -defaultsOSRD
preplace port port-id_xcvr_rxp_0 -pg 1 -lvl 0 -x 0 -y 2570 -defaultsOSRD
preplace port port-id_xcvr_txn_0 -pg 1 -lvl 14 -x 9320 -y 2400 -defaultsOSRD
preplace port port-id_xcvr_txp_0 -pg 1 -lvl 14 -x 9320 -y 2380 -defaultsOSRD
preplace inst MTS_Block -pg 1 -lvl 1 -x 190 -y 2080 -defaultsOSRD
preplace inst reset_block -pg 1 -lvl 2 -x 590 -y 2450 -defaultsOSRD
preplace inst axi_interconnect_7 -pg 1 -lvl 12 -x 8630 -y 620 -defaultsOSRD
preplace inst zynq_ultra_ps_e_0 -pg 1 -lvl 11 -x 8100 -y 1600 -defaultsOSRD -resize 478 426
preplace inst axi_gpio_spi_mux -pg 1 -lvl 13 -x 9150 -y 400 -defaultsOSRD
preplace inst util_ds_buf_0 -pg 1 -lvl 8 -x 6880 -y 2380 -defaultsOSRD
preplace inst eth_dma_internal -pg 1 -lvl 10 -x 7620 -y 1970 -defaultsOSRD
preplace inst axis_interconnect_0 -pg 1 -lvl 8 -x 6880 -y 1580 -defaultsOSRD
preplace inst axis_register_slice_1 -pg 1 -lvl 7 -x 6510 -y 1850 -defaultsOSRD
preplace inst tx_blocks -pg 1 -lvl 3 -x 1020 -y 1560 -defaultsOSRD
preplace inst usp_rf_data_converter_0 -pg 1 -lvl 13 -x 9150 -y 2680 -defaultsOSRD
preplace inst rx_blocks -pg 1 -lvl 4 -x 1820 -y 1752 -defaultsOSRD
preplace inst rx_reset -pg 1 -lvl 5 -x 5800 -y 2030 -defaultsOSRD
preplace inst tx_reset -pg 1 -lvl 5 -x 5800 -y 1590 -defaultsOSRD
preplace inst rx_controlled_buffer_0 -pg 1 -lvl 5 -x 5800 -y 2230 -defaultsOSRD
preplace inst stream_manager_0 -pg 1 -lvl 6 -x 6180 -y 1930 -defaultsOSRD
preplace inst udp_stack_0 -pg 1 -lvl 9 -x 7260 -y 2330 -defaultsOSRD
preplace inst rx_blocks|OFDM_demod_TOP_v3_wr_0 -pg 1 -lvl 4 -x 3280 -y 2022 -defaultsOSRD
preplace inst rx_blocks|FILTER_DS_x8_v3_0 -pg 1 -lvl 3 -x 2790 -y 3502 -defaultsOSRD
preplace inst rx_blocks|CE_5G_NR_v2_0 -pg 1 -lvl 2 -x 2340 -y 1892 -defaultsOSRD
preplace inst rx_blocks|MMSE_EQ_V2_0 -pg 1 -lvl 3 -x 2790 -y 2062 -defaultsOSRD
preplace inst rx_blocks|PTRS_5G_IP_0 -pg 1 -lvl 4 -x 3280 -y 1642 -defaultsOSRD
preplace inst rx_blocks|soft_reset -pg 1 -lvl 5 -x 3940 -y 4012 -defaultsOSRD
preplace inst rx_blocks|xlconstant_0 -pg 1 -lvl 1 -x 1960 -y 3192 -defaultsOSRD
preplace inst rx_blocks|axis_combiner_0 -pg 1 -lvl 6 -x 5040 -y 3172 -defaultsOSRD
preplace inst rx_blocks|LDPCdecoder_v2_0 -pg 1 -lvl 4 -x 3280 -y 3032 -defaultsOSRD
preplace inst rx_blocks|axis_interconnect_0 -pg 1 -lvl 5 -x 3940 -y 3072 -defaultsOSRD
preplace inst rx_blocks|CFO_correction_TOP_0 -pg 1 -lvl 2 -x 2340 -y 3082 -defaultsOSRD
preplace inst rx_blocks|axis_register_slice_0 -pg 1 -lvl 3 -x 2790 -y 2522 -defaultsOSRD
preplace inst rx_blocks|axis_register_slice_1 -pg 1 -lvl 3 -x 2790 -y 2662 -defaultsOSRD
preplace inst rx_blocks|enable_recv -pg 1 -lvl 4 -x 3280 -y 4032 -defaultsOSRD
preplace inst rx_blocks|axis_broadcaster_0 -pg 1 -lvl 4 -x 3280 -y 2302 -defaultsOSRD
preplace inst rx_blocks|SSB_TOP_v3_0 -pg 1 -lvl 4 -x 3280 -y 3522 -defaultsOSRD
preplace inst rx_blocks|automatic_gain_contr_0 -pg 1 -lvl 1 -x 1960 -y 3002 -defaultsOSRD
preplace inst rx_blocks|packetizer_RT_0 -pg 1 -lvl 6 -x 5040 -y 3912 -defaultsOSRD
preplace inst rx_blocks|demapper_top_0 -pg 1 -lvl 4 -x 3280 -y 2642 -defaultsOSRD
preplace inst rx_blocks|soft_reset|util_vector_logic_0 -pg 1 -lvl 3 -x 4530 -y 4032 -defaultsOSRD
preplace inst rx_blocks|soft_reset|util_vector_logic_1 -pg 1 -lvl 1 -x 4030 -y 4082 -defaultsOSRD
preplace inst rx_blocks|soft_reset|sync_0 -pg 1 -lvl 2 -x 4280 -y 4182 -defaultsOSRD
preplace inst rx_blocks|soft_reset|xlconstant_0 -pg 1 -lvl 1 -x 4030 -y 4182 -defaultsOSRD
preplace netloc ARESETN_1 1 2 10 NJ 2420 1330 4324 5400 1790 5990 1770 6390 1770 6700 1870 NJ 1870 7470 1250 NJ 1250 8370
preplace netloc MTS_Block_adc_clk 1 1 12 370 1930 810 1930 1360 4604 5520J 2370 6000J 2150 NJ 2150 6690 2310 7050J 2470 NJ 2470 NJ 2470 8480 2760 NJ
preplace netloc MTS_Block_clk_out3 1 1 3 NJ 2120 NJ 2120 1380
preplace netloc S02_AXIS_ARESETN_1 1 2 6 860 1780 1210J 1430 5370 1470 6010J 1490 NJ 1490 6710J
preplace netloc eth_dma_internal_dout 1 10 1 7820 1720n
preplace netloc reset_block_peripheral_aresetn1 1 2 11 790 2440 1290J 4674 5560J 2440 5990 2780 NJ 2780 NJ 2780 NJ 2780 NJ 2780 NJ 2780 NJ 2780 NJ
preplace netloc reset_block_peripheral_aresetn2 1 2 11 NJ 2480 1230 4974 5680J 2740 NJ 2740 NJ 2740 NJ 2740 NJ 2740 NJ 2740 NJ 2740 NJ 2740 NJ
preplace netloc reset_block_peripheral_aresetn4 1 2 10 810 1960 1420 1300 NJ 1300 NJ 1300 NJ 1300 NJ 1300 NJ 1300 NJ 1300 NJ 1300 8420
preplace netloc reset_block_peripheral_reset 1 2 7 770J 2430 1300J 4664 5550J 2430 NJ 2430 NJ 2430 6700J 2450 7060
preplace netloc rst_ps8_0_96M_peripheral_aresetn 1 2 11 780 1950 1350 4364 5480 2400 NJ 2400 NJ 2400 6660J 2300 7080 2180 7460 2100 NJ 2100 8450 2130 9010
preplace netloc rx_blocks_m00_axis_tlast1 1 4 4 5410 1800 5980 1480 NJ 1480 NJ
preplace netloc rx_reset_Res 1 5 1 5950 2000n
preplace netloc s_axis_aclk1_1 1 1 12 360 2060 800 2110 1340J 4344 5460 2360 5960 2100 NJ 2100 NJ 2100 NJ 2100 7410J 2130 NJ 2130 8390 2800 NJ
preplace netloc stream_manager_0_rx_init 1 3 4 1550 4304 5430J 1780 NJ 1780 6350
preplace netloc stream_manager_0_rx_reset 1 3 4 1530 4574 5500J 2340 5970J 2130 6350
preplace netloc stream_manager_0_slot_recv 1 3 4 1540 4584 5510J 2350 5980J 2140 6360
preplace netloc stream_manager_0_tx_reset 1 2 5 850 1760 1190J 1390 5670J 1490 5990J 1510 6370
preplace netloc tx_blocks_prog_empty 1 3 9 1180J 1380 5680J 1480 5950J 1500 NJ 1500 6620J 1800 NJ 1800 NJ 1800 7840J 1850 8380
preplace netloc tx_reset_Res 1 5 1 5950 1590n
preplace netloc udp_stack_0_phy_tx_clk 1 1 11 410 2590 NJ 2590 1240J 4714 5490 2110 5920 2090 6400 1930 6640 1860 NJ 1860 7420 2110 NJ 2110 8400
preplace netloc udp_stack_0_xcvr_txn 1 9 5 NJ 2400 NJ 2400 NJ 2400 NJ 2400 NJ
preplace netloc udp_stack_0_xcvr_txp 1 9 5 NJ 2380 NJ 2380 NJ 2380 NJ 2380 NJ
preplace netloc util_ds_buf_0_IBUF_OUT 1 8 1 7070J 2330n
preplace netloc xcvr_rxn_0_1 1 0 9 NJ 2550 NJ 2550 NJ 2550 1270J 4684 5570J 2450 NJ 2450 NJ 2450 6660J 2460 7110J
preplace netloc xcvr_rxp_0_1 1 0 9 NJ 2570 370J 2560 NJ 2560 1260J 4694 5580J 2460 NJ 2460 NJ 2460 6620J 2470 7040J
preplace netloc zynq_ultra_ps_e_0_emio_gpio_o 1 2 10 840 1970 1390 4294 5390 1750 NJ 1750 NJ 1750 6660J 1830 NJ 1830 NJ 1830 7790J 1880 8370
preplace netloc zynq_ultra_ps_e_0_pl_clk0 1 1 12 380 2340 770 1940 1370 4354 5470 2390 NJ 2390 NJ 2390 6640J 2290 7090 2190 7450 2090 7810 1840 8440 2120 9000
preplace netloc zynq_ultra_ps_e_0_pl_clk1 1 1 11 400 2580 NJ 2580 1280 4614 5530J 2380 6010J 2280 NJ 2280 NJ 2280 7110 2170 NJ 2170 NJ 2170 8460
preplace netloc zynq_ultra_ps_e_0_pl_resetn0 1 1 11 390 2570 NJ 2570 1250J 4704 5590J 2480 NJ 2480 NJ 2480 NJ 2480 NJ 2480 NJ 2480 NJ 2480 8360
preplace netloc CLK_DIFF_SYSREF_CLK_1 1 0 1 NJ 2090
preplace netloc CLK_IN_D_0_1 1 0 1 NJ 2070
preplace netloc S01_AXIS_1 1 7 4 6720 2080 NJ 2080 NJ 2080 7770
preplace netloc S02_AXIS_1 1 4 4 5380 1460 NJ 1460 NJ 1460 NJ
preplace netloc adc2_clk_0_1 1 0 13 NJ 2600 NJ 2600 NJ 2600 1220J 4834 5630J 2600 NJ 2600 NJ 2600 NJ 2600 NJ 2600 NJ 2600 NJ 2600 NJ 2600 NJ
preplace netloc axi_gpio_0_GPIO 1 13 1 NJ 390
preplace netloc axi_interconnect_7_M00_AXI 1 12 1 N 380
preplace netloc axi_interconnect_7_M01_AXI 1 8 5 7120 2150 NJ 2150 NJ 2150 NJ 2150 8980
preplace netloc axi_interconnect_7_M02_AXI 1 9 4 7480 1840 7770J 1890 NJ 1890 8970
preplace netloc axi_interconnect_7_M03_AXI 1 5 8 6010 1760 NJ 1760 6650J 1840 7090J 1850 NJ 1850 7760J 1900 NJ 1900 8960
preplace netloc axi_interconnect_7_M04_AXI 1 2 11 780 10 NJ 10 NJ 10 NJ 10 NJ 10 NJ 10 NJ 10 NJ 10 NJ 10 NJ 10 8790
preplace netloc axi_interconnect_7_M05_AXI 1 2 11 820 20 NJ 20 NJ 20 NJ 20 NJ 20 NJ 20 NJ 20 NJ 20 NJ 20 NJ 20 8780
preplace netloc axi_interconnect_7_M06_AXI 1 12 1 8990 500n
preplace netloc axi_interconnect_7_M07_AXI 1 3 10 1470 1210 NJ 1210 NJ 1210 NJ 1210 NJ 1210 NJ 1210 NJ 1210 NJ 1210 8470J 1220 8910
preplace netloc axi_interconnect_7_M08_AXI 1 3 10 1480 1220 NJ 1220 NJ 1220 NJ 1220 NJ 1220 NJ 1220 NJ 1220 NJ 1220 8430J 1230 8900
preplace netloc axi_interconnect_7_M09_AXI 1 3 10 1490 1230 NJ 1230 NJ 1230 NJ 1230 NJ 1230 NJ 1230 NJ 1230 NJ 1230 8410J 1240 8890
preplace netloc axi_interconnect_7_M10_AXI 1 3 10 1500 1240 NJ 1240 NJ 1240 NJ 1240 NJ 1240 NJ 1240 NJ 1240 NJ 1240 8380J 1250 8880
preplace netloc axi_interconnect_7_M11_AXI 1 3 10 1550 1410 5650J 1510 5920J 1530 NJ 1530 6670J 1820 NJ 1820 NJ 1820 7800J 1870 NJ 1870 8950
preplace netloc axi_interconnect_7_M12_AXI 1 3 10 1510 1270 NJ 1270 NJ 1270 NJ 1270 NJ 1270 NJ 1270 NJ 1270 NJ 1270 NJ 1270 8870
preplace netloc axi_interconnect_7_M13_AXI 1 3 10 1520 1280 NJ 1280 NJ 1280 NJ 1280 NJ 1280 NJ 1280 NJ 1280 NJ 1280 NJ 1280 8860
preplace netloc axi_interconnect_7_M14_AXI 1 3 10 1530 1290 NJ 1290 NJ 1290 NJ 1290 NJ 1290 NJ 1290 NJ 1290 NJ 1290 NJ 1290 8850
preplace netloc axi_interconnect_7_M15_AXI 1 3 10 1540 1330 NJ 1330 NJ 1330 NJ 1330 NJ 1330 NJ 1330 NJ 1330 NJ 1330 NJ 1330 8930
preplace netloc axi_interconnect_7_M16_AXI 1 2 11 860 1310 NJ 1310 NJ 1310 NJ 1310 NJ 1310 NJ 1310 NJ 1310 NJ 1310 NJ 1310 NJ 1310 8840
preplace netloc axi_interconnect_7_M17_AXI 1 2 11 770 1260 NJ 1260 NJ 1260 NJ 1260 NJ 1260 NJ 1260 NJ 1260 NJ 1260 NJ 1260 NJ 1260 8780
preplace netloc axi_interconnect_7_M18_AXI 1 2 11 830 1320 NJ 1320 NJ 1320 NJ 1320 NJ 1320 NJ 1320 NJ 1320 NJ 1320 NJ 1320 NJ 1320 8790
preplace netloc axi_interconnect_7_M19_AXI 1 2 11 840 1340 NJ 1340 NJ 1340 NJ 1340 NJ 1340 NJ 1340 NJ 1340 NJ 1340 NJ 1340 NJ 1340 8830
preplace netloc axi_interconnect_7_M20_AXI 1 2 11 850 1350 NJ 1350 NJ 1350 NJ 1350 NJ 1350 NJ 1350 NJ 1350 NJ 1350 NJ 1350 NJ 1350 8820
preplace netloc axi_interconnect_7_M21_AXI 1 3 10 1450 1360 NJ 1360 NJ 1360 NJ 1360 NJ 1360 NJ 1360 NJ 1360 NJ 1360 NJ 1360 8810
preplace netloc axi_interconnect_7_M22_AXI 1 3 10 1460 1400 5660J 1500 5940J 1520 NJ 1520 6680J 1810 NJ 1810 NJ 1810 7830J 1860 NJ 1860 8800
preplace netloc axi_interconnect_7_M23_AXI 1 4 9 5660 2120 NJ 2120 NJ 2120 NJ 2120 NJ 2120 7400J 2140 NJ 2140 NJ 2140 8940
preplace netloc axi_interconnect_7_M24_AXI 1 3 10 1520 4314 5440J 1950 5930J 2080 NJ 2080 6640J 2090 NJ 2090 7440J 2120 NJ 2120 8420J 2110 8920
preplace netloc axis_interconnect_0_M00_AXIS 1 8 1 7100 1580n
preplace netloc axis_register_slice_1_M_AXIS 1 7 1 6630 1420n
preplace netloc dac0_clk_0_1 1 0 13 NJ 2620 NJ 2620 NJ 2620 1210J 4854 5640J 2620 NJ 2620 NJ 2620 NJ 2620 NJ 2620 NJ 2620 NJ 2620 NJ 2620 NJ
preplace netloc eth_dma_internal_M00_AXI 1 10 1 7780 1480n
preplace netloc rx_blocks_M_AXIS 1 4 1 5420 2200n
preplace netloc rx_controlled_buffer_0_M00_AXIS 1 5 1 5940 1880n
preplace netloc s00_axis_1 1 3 11 1430 4724 5600J 2490 NJ 2490 NJ 2490 NJ 2490 NJ 2490 NJ 2490 NJ 2490 NJ 2490 NJ 2490 9300
preplace netloc s01_axis_2 1 3 11 1440 4734 5610J 2500 NJ 2500 NJ 2500 NJ 2500 NJ 2500 NJ 2500 NJ 2500 NJ 2500 NJ 2500 9290
preplace netloc stream_manager_0_M00_UDP_AXIS 1 6 1 6380 1830n
preplace netloc stream_manager_0_M01_RF_AXIS 1 2 5 820 1770 1200J 1420 5640J 1660 NJ 1660 6360
preplace netloc sysref_in_0_1 1 0 13 NJ 2680 NJ 2680 NJ 2680 1180J 4914 5670J 2680 NJ 2680 NJ 2680 NJ 2680 NJ 2680 NJ 2680 NJ 2680 NJ 2680 NJ
preplace netloc tx_blocks_M05_AXIS 1 3 1 1410 1570n
preplace netloc tx_blocks_M_AXI_MM2S 1 3 7 1400 4334 5450J 2100 5930J 2110 NJ 2110 NJ 2110 NJ 2110 7400J
preplace netloc tx_blocks_m00_axis 1 3 10 1320 4814 5620J 2580 NJ 2580 NJ 2580 NJ 2580 NJ 2580 NJ 2580 NJ 2580 NJ 2580 NJ
preplace netloc udp_stack_0_M00_AXIS 1 5 5 6010 2160 NJ 2160 NJ 2160 NJ 2160 7400
preplace netloc udp_stack_0_M01_AXIS 1 9 1 7430 1930n
preplace netloc user_mgt_si570_sysclk_1 1 0 8 NJ 2330 NJ 2330 NJ 2330 1310J 4644 5540J 2410 NJ 2410 NJ 2410 6710J
preplace netloc usp_rf_data_converter_0_vout00 1 13 1 NJ 2660
preplace netloc usp_rf_data_converter_0_vout02 1 13 1 NJ 2680
preplace netloc vin2_01_0_1 1 0 13 NJ 2640 NJ 2640 NJ 2640 1200J 4874 5650J 2640 NJ 2640 NJ 2640 NJ 2640 NJ 2640 NJ 2640 NJ 2640 NJ 2640 NJ
preplace netloc vin2_23_0_1 1 0 13 NJ 2660 NJ 2660 NJ 2660 1190J 4894 5660J 2660 NJ 2660 NJ 2660 NJ 2660 NJ 2660 NJ 2660 NJ 2660 NJ 2660 NJ
preplace netloc zynq_ultra_ps_e_0_M_AXI_HPM1_FPD 1 11 1 8360 80n
preplace netloc rx_blocks|CE_5G_NR_v2_0_CE_triggerOut 1 2 1 2530 1922n
preplace netloc rx_blocks|CE_5G_NR_v2_0_nVarOut 1 2 4 2580 3272 2950J 3772 3550J 3802 4850J
preplace netloc rx_blocks|CE_5G_NR_v2_0_nVarValidOut 1 2 4 2590 3282 2940J 3782 3530J 3812 4870J
preplace netloc rx_blocks|CE_5G_NR_v2_0_triggerOut 1 2 1 2510 1902n
preplace netloc rx_blocks|Din_1 1 0 4 NJ 3942 NJ 3942 NJ 3942 2950
preplace netloc rx_blocks|OFDM_demod_TOP_v3_wr_0_countOFDMOut 1 1 4 2110 1632 NJ 1632 3110J 1832 3680
preplace netloc rx_blocks|OFDM_demod_TOP_v3_wr_0_countSCOut 1 1 4 2100 1622 NJ 1622 2990J 1822 3690
preplace netloc rx_blocks|OFDM_demod_TOP_v3_wr_0_triggerOut 1 1 4 2150 1642 NJ 1642 3080J 2212 3680
preplace netloc rx_blocks|Op1_1 1 0 5 NJ 3842 NJ 3842 NJ 3842 NJ 3842 3490
preplace netloc rx_blocks|Op2_1 1 0 5 NJ 3862 NJ 3862 NJ 3862 NJ 3862 3470
preplace netloc rx_blocks|SSB_TOP_v3_0_cfoOut 1 1 5 2160 3802 NJ 3802 NJ 3802 3520 3882 NJ
preplace netloc rx_blocks|SSB_TOP_v3_0_cfoValidOut 1 1 5 2170 3812 NJ 3812 NJ 3812 3500 3892 4880J
preplace netloc rx_blocks|SSB_TOP_v3_0_m00_axis_tlast 1 0 5 1820 3292 NJ 3292 2650J 3262 NJ 3262 3610
preplace netloc rx_blocks|SSB_TOP_v3_0_m00_axis_tvalid 1 3 2 3110 3952 3460
preplace netloc rx_blocks|SSB_TOP_v3_0_pssenergyOut 1 4 2 3570 3842 NJ
preplace netloc rx_blocks|SSB_TOP_v3_0_pssenergyValidOut 1 4 2 3540 3862 NJ
preplace netloc rx_blocks|SSB_TOP_v3_0_triggerOut 1 0 5 1830 3372 2120J 3822 NJ 3822 NJ 3822 3450
preplace netloc rx_blocks|axi_resetn_1 1 0 1 1800 3032n
preplace netloc rx_blocks|coreClk_1 1 0 4 1780J 2872 NJ 2872 NJ 2872 2990
preplace netloc rx_blocks|packetizer_RT_0_m00_axis_tlast 1 6 1 5200 3922n
preplace netloc rx_blocks|s00_axi_aclk1_1 1 0 6 NJ 3902 NJ 3902 NJ 3902 NJ 3902 3480J 3912 4820
preplace netloc rx_blocks|s00_axi_aclk_1 1 0 5 NJ 3402 2100 2882 2600 2742 3070 3232 3640
preplace netloc rx_blocks|s00_axi_aresetn1_1 1 0 6 NJ 3922 NJ 3922 NJ 3922 NJ 3922 NJ 3922 4800
preplace netloc rx_blocks|s00_axi_aresetn_1 1 0 5 NJ 3422 2150 2892 2610 2752 2980 3242 3600
preplace netloc rx_blocks|s01_axis_aclk_1 1 0 6 1790 3382 2140 2402 2620 2762 3050 3942 3690 3902 4830
preplace netloc rx_blocks|s01_axis_aresetn_1 1 0 7 1810 3252 2110 2412 2630 2772 3090 3272 3720 3792 4840 3722 5210J
preplace netloc rx_blocks|triggerIn_1 1 0 6 NJ 3962 NJ 3962 NJ 3962 3100J 3932 NJ 3932 4810
preplace netloc rx_blocks|util_vector_logic_0_Res 1 4 1 3630 2462n
preplace netloc rx_blocks|xlconstant_0_dout 1 1 3 2130 3262 2560J 3232 3010
preplace netloc rx_blocks|demapper_top_0_triggerOut 1 3 2 3110 2832 3460
preplace netloc rx_blocks|CE_5G_NR_v2_0_m00_axis 1 2 1 N 1802
preplace netloc rx_blocks|CE_5G_NR_v2_0_m01_axis 1 2 1 N 1822
preplace netloc rx_blocks|CE_5G_NR_v2_0_m02_axis 1 2 1 N 1842
preplace netloc rx_blocks|CE_5G_NR_v2_0_m03_axis 1 2 1 N 1862
preplace netloc rx_blocks|CFO_correction_TOP_0_m00_axis 1 2 1 2540 3072n
preplace netloc rx_blocks|CFO_correction_TOP_0_m01_axis 1 2 1 2520 3092n
preplace netloc rx_blocks|Conn1 1 0 2 NJ 1742 N
preplace netloc rx_blocks|Conn2 1 0 2 1770J 3132 2090
preplace netloc rx_blocks|Conn3 1 0 1 1760 2972n
preplace netloc rx_blocks|Conn4 1 0 3 1740J 3262 2120J 3252 2530
preplace netloc rx_blocks|Conn5 1 0 4 1720J 2842 NJ 2842 NJ 2842 3030
preplace netloc rx_blocks|Conn6 1 0 3 NJ 2822 NJ 2822 2520
preplace netloc rx_blocks|Conn7 1 0 4 1710J 2832 NJ 2832 NJ 2832 2990
preplace netloc rx_blocks|Conn8 1 0 4 1730J 2852 NJ 2852 NJ 2852 2950
preplace netloc rx_blocks|Conn9 1 0 4 1730J 3272 NJ 3272 2570J 3242 2970
preplace netloc rx_blocks|Conn12 1 6 1 N 3172
preplace netloc rx_blocks|Conn13 1 0 5 NJ 3282 NJ 3282 2550J 3252 NJ 3252 3660
preplace netloc rx_blocks|Conn14 1 0 6 NJ 3302 NJ 3302 2510J 3722 2930J 3792 3510J 3822 N
preplace netloc rx_blocks|Conn15 1 6 1 N 3902
preplace netloc rx_blocks|FILTER_DS_x8_v3_0_M00_AXIS 1 3 1 2930 3332n
preplace netloc rx_blocks|FILTER_DS_x8_v3_0_M01_AXIS 1 3 1 2990 3352n
preplace netloc rx_blocks|FILTER_DS_x8_v3_0_M02_AXIS 1 3 1 3060 3372n
preplace netloc rx_blocks|FILTER_DS_x8_v3_0_M03_AXIS 1 3 1 3000 3392n
preplace netloc rx_blocks|LDPCdecoder_v2_0_m00_axis 1 4 1 3580 2662n
preplace netloc rx_blocks|LDPCdecoder_v2_0_m01_axis 1 4 1 3620 2682n
preplace netloc rx_blocks|MMSE_EQ_V2_0_m00_axis 1 3 1 2930 1522n
preplace netloc rx_blocks|MMSE_EQ_V2_0_m01_axis 1 3 1 2940 1542n
preplace netloc rx_blocks|MMSE_EQ_V2_0_m02_axis 1 3 3 3060J 2222 NJ 2222 4850
preplace netloc rx_blocks|MMSE_EQ_V2_0_m03_axis 1 3 3 2960 3832 NJ 3832 4860J
preplace netloc rx_blocks|OFDM_demod_TOP_v3_wr_0_m00_axis 1 4 1 3720 1972n
preplace netloc rx_blocks|OFDM_demod_TOP_v3_wr_0_m01_axis 1 4 1 3700 1992n
preplace netloc rx_blocks|PTRS_5G_IP_0_m00_axis 1 4 1 3730 1622n
preplace netloc rx_blocks|PTRS_5G_IP_0_m01_axis 1 4 1 3710 1642n
preplace netloc rx_blocks|S10_AXIS_1 1 4 1 3690 2292n
preplace netloc rx_blocks|S10_AXIS_2 1 0 4 1750J 2862 NJ 2862 NJ 2862 3020
preplace netloc rx_blocks|SSB_TOP_v3_0_m00_axis 1 4 1 3570 2442n
preplace netloc rx_blocks|SSB_TOP_v3_0_m01_axis 1 4 1 3650 2502n
preplace netloc rx_blocks|automatic_gain_contr_0_m00_axis 1 1 1 2090 2972n
preplace netloc rx_blocks|automatic_gain_contr_0_m01_axis 1 1 1 N 3012
preplace netloc rx_blocks|axis_broadcaster_0_M01_AXIS 1 4 1 3680 2312n
preplace netloc rx_blocks|axis_interconnect_0_M00_AXIS 1 3 3 3100 2402 3630J 2362 4810
preplace netloc rx_blocks|axis_interconnect_0_M01_AXIS 1 3 3 3110 2412 3650J 2372 4800
preplace netloc rx_blocks|axis_interconnect_0_M02_AXIS 1 1 5 2160 2382 NJ 2382 NJ 2382 3460J 2342 4840
preplace netloc rx_blocks|axis_interconnect_0_M03_AXIS 1 1 5 2170 2392 NJ 2392 NJ 2392 3560J 2352 4830
preplace netloc rx_blocks|axis_interconnect_0_M06_AXIS 1 2 4 2640 2432 NJ 2432 3670J 3762 4810
preplace netloc rx_blocks|axis_interconnect_0_M07_AXIS 1 2 4 2650 2442 NJ 2442 3560J 3772 4800
preplace netloc rx_blocks|axis_interconnect_0_M08_AXIS 1 5 1 N 3142
preplace netloc rx_blocks|axis_interconnect_0_M09_AXIS 1 5 1 N 3162
preplace netloc rx_blocks|axis_register_slice_0_M_AXIS 1 3 1 3060 2522n
preplace netloc rx_blocks|axis_register_slice_1_M_AXIS 1 3 1 3040 2662n
preplace netloc rx_blocks|s00_axis_1 1 0 1 N 2932
preplace netloc rx_blocks|s01_axis_1 1 0 1 N 2952
preplace netloc rx_blocks|demapper_top_0_m00_axis 1 4 1 N 2622
preplace netloc rx_blocks|demapper_top_0_m01_axis 1 4 1 N 2642
preplace netloc rx_blocks|axis_interconnect_0_M04_AXIS 1 3 3 3100 2422 3670J 2382 4820
preplace netloc rx_blocks|axis_interconnect_0_M05_AXIS 1 3 3 3110 2452 3590J 3782 4820
preplace netloc rx_blocks|s00_axi2_1 1 0 4 NJ 2782 NJ 2782 NJ 2782 3000
preplace netloc rx_blocks|soft_reset|Op1_1 1 0 3 NJ 4022 NJ 4022 N
preplace netloc rx_blocks|soft_reset|Op2_1 1 0 1 NJ 4082
preplace netloc rx_blocks|soft_reset|s01_axis_aclk_1 1 0 2 NJ 4242 4180
preplace netloc rx_blocks|soft_reset|sync_0_dest_out 1 2 1 4380 4042n
preplace netloc rx_blocks|soft_reset|util_vector_logic_0_Res 1 3 1 N 4032
preplace netloc rx_blocks|soft_reset|util_vector_logic_1_Res 1 1 1 4180 4082n
preplace netloc rx_blocks|soft_reset|xlconstant_0_dout 1 1 1 NJ 4182
levelinfo -pg 1 0 190 590 1020 1820 5800 6180 6510 6880 7260 7620 8100 8630 9150 9320
levelinfo -hier rx_blocks * 1960 2340 2790 3280 3940 5040 *
levelinfo -hier rx_blocks|soft_reset * 4030 4280 4530 *
pagesize -pg 1 -db -bbox -sgen -220 0 9450 4990
pagesize -hier rx_blocks -db -bbox -sgen 1680 1462 5240 4272
pagesize -hier rx_blocks|soft_reset -db -bbox -sgen 3850 3962 4710 4252
"
}

  # Restore current instance
  current_bd_instance $oldCurInst

  validate_bd_design
  save_bd_design
  close_bd_design $design_name 
}
# End of cr_bd_design_1()
cr_bd_design_1 ""
set_property REGISTERED_WITH_MANAGER "1" [get_files design_1.bd ] 
set_property SYNTH_CHECKPOINT_MODE "Hierarchical" [get_files design_1.bd ] 

set idrFlowPropertiesConstraints ""
catch {
 set idrFlowPropertiesConstraints [get_param runs.disableIDRFlowPropertyConstraints]
 set_param runs.disableIDRFlowPropertyConstraints 1
}

# Create 'synth_1' run (if not found)
if {[string equal [get_runs -quiet synth_1] ""]} {
    create_run -name synth_1 -part xczu48dr-fsvg1517-2-e -flow {Vivado Synthesis 2022} -strategy "Flow_AreaOptimized_high" -report_strategy {No Reports} -constrset constrs_1
} else {
  set_property strategy "Flow_AreaOptimized_high" [get_runs synth_1]
  set_property flow "Vivado Synthesis 2022" [get_runs synth_1]
}
set obj [get_runs synth_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Synthesis Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'synth_1_synth_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0] "" ] } {
  create_report_config -report_name synth_1_synth_report_utilization_0 -report_type report_utilization:1.0 -steps synth_design -runs synth_1
}
set obj [get_report_configs -of_objects [get_runs synth_1] synth_1_synth_report_utilization_0]
if { $obj != "" } {

}
set obj [get_runs synth_1]
set_property -name "write_incremental_synth_checkpoint" -value "1" -objects $obj
set_property -name "auto_incremental_checkpoint.directory" -value "$proj_dir/STABLE/TWC_TB_PADOVA_w_10GbE.srcs/utils_1/imports/synth_1" -objects $obj
set_property -name "strategy" -value "Flow_AreaOptimized_high" -objects $obj
set_property -name "steps.synth_design.args.flatten_hierarchy" -value "full" -objects $obj
set_property -name "steps.synth_design.args.directive" -value "AreaOptimized_high" -objects $obj
set_property -name "steps.synth_design.args.control_set_opt_threshold" -value "1" -objects $obj

# set the current synth run
current_run -synthesis [get_runs synth_1]

# Create 'impl_1' run (if not found)
if {[string equal [get_runs -quiet impl_1] ""]} {
    create_run -name impl_1 -part xczu48dr-fsvg1517-2-e -flow {Vivado Implementation 2022} -strategy "Performance_ExtraTimingOpt" -report_strategy {No Reports} -constrset constrs_1 -parent_run synth_1
} else {
  set_property strategy "Performance_ExtraTimingOpt" [get_runs impl_1]
  set_property flow "Vivado Implementation 2022" [get_runs impl_1]
}
set obj [get_runs impl_1]
set_property set_report_strategy_name 1 $obj
set_property report_strategy {Vivado Implementation Default Reports} $obj
set_property set_report_strategy_name 0 $obj
# Create 'impl_1_init_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_init_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps init_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_init_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_opt_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_drc_0 -report_type report_drc:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_place_report_io_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0] "" ] } {
  create_report_config -report_name impl_1_place_report_io_0 -report_type report_io:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_io_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0] "" ] } {
  create_report_config -report_name impl_1_place_report_utilization_0 -report_type report_utilization:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_place_report_control_sets_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0] "" ] } {
  create_report_config -report_name impl_1_place_report_control_sets_0 -report_type report_control_sets:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_control_sets_0]
if { $obj != "" } {
set_property -name "options.verbose" -value "1" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_incremental_reuse_1' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1] "" ] } {
  create_report_config -report_name impl_1_place_report_incremental_reuse_1 -report_type report_incremental_reuse:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_incremental_reuse_1]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj

}
# Create 'impl_1_place_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_place_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps place_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_place_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_post_place_power_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_place_power_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_place_power_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_place_power_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "is_enabled" -value "0" -objects $obj
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_route_report_drc_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0] "" ] } {
  create_report_config -report_name impl_1_route_report_drc_0 -report_type report_drc:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_drc_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_methodology_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0] "" ] } {
  create_report_config -report_name impl_1_route_report_methodology_0 -report_type report_methodology:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_methodology_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_power_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0] "" ] } {
  create_report_config -report_name impl_1_route_report_power_0 -report_type report_power:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_power_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_route_status_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0] "" ] } {
  create_report_config -report_name impl_1_route_report_route_status_0 -report_type report_route_status:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_route_status_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_route_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj

}
# Create 'impl_1_route_report_incremental_reuse_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0] "" ] } {
  create_report_config -report_name impl_1_route_report_incremental_reuse_0 -report_type report_incremental_reuse:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_incremental_reuse_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_clock_utilization_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0] "" ] } {
  create_report_config -report_name impl_1_route_report_clock_utilization_0 -report_type report_clock_utilization:1.0 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_clock_utilization_0]
if { $obj != "" } {

}
# Create 'impl_1_route_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_route_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps route_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_route_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_timing_summary_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_timing_summary_0 -report_type report_timing_summary:1.0 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_timing_summary_0]
if { $obj != "" } {
set_property -name "options.max_paths" -value "10" -objects $obj
set_property -name "options.report_unconstrained" -value "1" -objects $obj
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
# Create 'impl_1_post_route_phys_opt_report_bus_skew_0' report (if not found)
if { [ string equal [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0] "" ] } {
  create_report_config -report_name impl_1_post_route_phys_opt_report_bus_skew_0 -report_type report_bus_skew:1.1 -steps post_route_phys_opt_design -runs impl_1
}
set obj [get_report_configs -of_objects [get_runs impl_1] impl_1_post_route_phys_opt_report_bus_skew_0]
if { $obj != "" } {
set_property -name "options.warn_on_violation" -value "1" -objects $obj

}
set obj [get_runs impl_1]
set_property -name "auto_rqs.directory" -value "$proj_dir/STABLE/TWC_TB_PADOVA_w_10GbE.srcs/utils_1/imports/impl_1" -objects $obj
set_property -name "auto_incremental_checkpoint.directory" -value "$proj_dir/STABLE/TWC_TB_PADOVA_w_10GbE.srcs/utils_1/imports/impl_1" -objects $obj
set_property -name "strategy" -value "Performance_ExtraTimingOpt" -objects $obj
set_property -name "steps.place_design.args.directive" -value "ExtraTimingOpt" -objects $obj
set_property -name "steps.phys_opt_design.is_enabled" -value "0" -objects $obj
set_property -name "steps.phys_opt_design.args.directive" -value "Explore" -objects $obj
set_property -name "steps.route_design.args.directive" -value "NoTimingRelaxation" -objects $obj
set_property -name "steps.write_bitstream.args.readback_file" -value "0" -objects $obj
set_property -name "steps.write_bitstream.args.verbose" -value "0" -objects $obj

# set the current impl run
current_run -implementation [get_runs impl_1]
catch {
 if { $idrFlowPropertiesConstraints != {} } {
   set_param runs.disableIDRFlowPropertyConstraints $idrFlowPropertiesConstraints
 }
}

puts "INFO: Project created:${_xil_proj_name_}"
# Create 'drc_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "drc_1" ] ] ""]} {
create_dashboard_gadget -name {drc_1} -type drc
}
set obj [get_dashboard_gadgets [ list "drc_1" ] ]

# Create 'methodology_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "methodology_1" ] ] ""]} {
create_dashboard_gadget -name {methodology_1} -type methodology
}
set obj [get_dashboard_gadgets [ list "methodology_1" ] ]

# Create 'power_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "power_1" ] ] ""]} {
create_dashboard_gadget -name {power_1} -type power
}
set obj [get_dashboard_gadgets [ list "power_1" ] ]

# Create 'timing_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "timing_1" ] ] ""]} {
create_dashboard_gadget -name {timing_1} -type timing
}
set obj [get_dashboard_gadgets [ list "timing_1" ] ]

# Create 'utilization_1' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_1" ] ] ""]} {
create_dashboard_gadget -name {utilization_1} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_1" ] ]
set_property -name "reports" -value "synth_1#synth_1_synth_report_utilization_0" -objects $obj
set_property -name "run.step" -value "synth_design" -objects $obj
set_property -name "run.type" -value "synthesis" -objects $obj

# Create 'utilization_2' gadget (if not found)
if {[string equal [get_dashboard_gadgets  [ list "utilization_2" ] ] ""]} {
create_dashboard_gadget -name {utilization_2} -type utilization
}
set obj [get_dashboard_gadgets [ list "utilization_2" ] ]

move_dashboard_gadget -name {utilization_1} -row 0 -col 0
move_dashboard_gadget -name {power_1} -row 1 -col 0
move_dashboard_gadget -name {drc_1} -row 2 -col 0
move_dashboard_gadget -name {timing_1} -row 0 -col 1
move_dashboard_gadget -name {utilization_2} -row 1 -col 1
move_dashboard_gadget -name {methodology_1} -row 2 -col 1

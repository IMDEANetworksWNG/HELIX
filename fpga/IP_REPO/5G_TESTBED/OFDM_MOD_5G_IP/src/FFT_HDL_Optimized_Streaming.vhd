-- -------------------------------------------------------------
-- 
-- File Name: hdlsrc\FFTHDLOptimizedExample_Streaming\FFT_HDL_Optimized_Streaming.vhd
-- Created: 2022-05-04 13:42:43
-- 
-- Generated by MATLAB 9.11 and HDL Coder 3.19
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 1
-- Target subsystem base rate: 1
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: FFT_HDL_Optimized_Streaming
-- Source Path: FFTHDLOptimizedExample_Streaming/FFT HDL Optimized Streaming
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.FFT_HDL_Optimized_Streaming_pkg.ALL;

ENTITY FFT_HDL_Optimized_Streaming IS
PORT(   clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        DataIn_re                         :   IN    std_logic_vector(2*16-1 downto 0);  -- sfix16_En13 [2]
        DataIn_im                         :   IN    std_logic_vector(2*16-1 downto 0);  -- sfix16_En13 [2]
        ValidIn                           :   IN    std_logic;
        DataOut_re                        :   OUT   std_logic_vector(2*27-1 downto 0);  -- sfix27_En13 [2]
        DataOut_im                        :   OUT   std_logic_vector(2*27-1 downto 0);  -- sfix27_En13 [2]
        ValidOut                          :   OUT   std_logic;
        startOut                          :   OUT   std_logic;
        endOut                            :   OUT   std_logic
);
END FFT_HDL_Optimized_Streaming;


ARCHITECTURE rtl OF FFT_HDL_Optimized_Streaming IS

-- Component Declarations
COMPONENT FFT_HDL_Optimized
PORT(   clk                             :   IN    std_logic;
        reset                           :   IN    std_logic;
        dataIn_re                       :   IN    vector_of_std_logic_vector16(0 TO 1);  -- sfix16_En13 [2]
        dataIn_im                       :   IN    vector_of_std_logic_vector16(0 TO 1);  -- sfix16_En13 [2]
        validIn                         :   IN    std_logic;
        dataOut_re                      :   OUT   vector_of_std_logic_vector27(0 TO 1);  -- sfix27_En13 [2]
        dataOut_im                      :   OUT   vector_of_std_logic_vector27(0 TO 1);  -- sfix27_En13 [2]
        startOut                        :   OUT   std_logic;
        endOut                          :   OUT   std_logic;
        validOut                        :   OUT   std_logic
);
END COMPONENT;

-- Component Configuration Statements
FOR ALL : FFT_HDL_Optimized
    USE ENTITY work.FFT_HDL_Optimized(rtl);

-- Signals
SIGNAL FFT_HDL_Optimized_out1_re        : vector_of_std_logic_vector27(0 TO 1);  -- ufix27 [2]
SIGNAL FFT_HDL_Optimized_out1_im        : vector_of_std_logic_vector27(0 TO 1);  -- ufix27 [2]
SIGNAL FFT_HDL_Optimized_out2           : std_logic;
SIGNAL FFT_HDL_Optimized_out3           : std_logic;
SIGNAL FFT_HDL_Optimized_out4           : std_logic;

signal b0_DataIn_re, b0_DataIn_im : vector_of_std_logic_vector16(0 TO 1);
signal b0_DataOut_re, b0_DataOut_im : vector_of_std_logic_vector27(0 TO 1);

BEGIN

b0_DataIn_re(0) <= DataIn_re(16-1 downto 0);
b0_DataIn_re(1) <= DataIn_re(32-1 downto 16);
b0_DataIn_im(0) <= DataIn_im(16-1 downto 0);
b0_DataIn_im(1) <= DataIn_im(32-1 downto 16);

  u_FFT_HDL_Optimized : FFT_HDL_Optimized
    PORT MAP( clk => clk,
              reset => reset,
              dataIn_re => b0_DataIn_re,  -- sfix16_En13 [2]
              dataIn_im => b0_DataIn_im,  -- sfix16_En13 [2]
              validIn => ValidIn,
              dataOut_re => FFT_HDL_Optimized_out1_re,  -- sfix27_En13 [2]
              dataOut_im => FFT_HDL_Optimized_out1_im,  -- sfix27_En13 [2]
              startOut => FFT_HDL_Optimized_out2,
              endOut => FFT_HDL_Optimized_out3,
              validOut => FFT_HDL_Optimized_out4
              );

    DataOut_re(27-1 downto 0) <= FFT_HDL_Optimized_out1_re(0);
    DataOut_re(2*27-1 downto 27) <= FFT_HDL_Optimized_out1_re(1);
    DataOut_im(27-1 downto 0) <= FFT_HDL_Optimized_out1_im(0);
    DataOut_im(2*27-1 downto 27) <= FFT_HDL_Optimized_out1_im(1);

    ValidOut <= FFT_HDL_Optimized_out4;
    startOut <= FFT_HDL_Optimized_out2;
    endOut <= FFT_HDL_Optimized_out3;

END rtl;


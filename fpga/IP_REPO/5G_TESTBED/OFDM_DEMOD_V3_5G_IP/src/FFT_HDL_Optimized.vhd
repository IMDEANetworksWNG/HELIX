-- -------------------------------------------------------------
-- 
-- File Name: hdlsrc\FFTHDLOptimizedExample_Streaming\FFT_HDL_Optimized.vhd
-- Created: 2022-05-04 13:42:43
-- 
-- Generated by MATLAB 9.11 and HDL Coder 3.19
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: FFT_HDL_Optimized
-- Source Path: FFTHDLOptimizedExample_Streaming/FFT HDL Optimized Streaming/FFT HDL Optimized
-- Hierarchy Level: 1
-- 
-- FFT HDL Optimized
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.FFT_HDL_Optimized_Streaming_pkg.ALL;

ENTITY FFT_HDL_Optimized IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        dataIn_re                         :   IN    vector_of_std_logic_vector16(0 TO 1);  -- sfix16_En13 [2]
        dataIn_im                         :   IN    vector_of_std_logic_vector16(0 TO 1);  -- sfix16_En13 [2]
        validIn                           :   IN    std_logic;
        dataOut_re                        :   OUT   vector_of_std_logic_vector27(0 TO 1);  -- sfix27_En13 [2]
        dataOut_im                        :   OUT   vector_of_std_logic_vector27(0 TO 1);  -- sfix27_En13 [2]
        startOut                          :   OUT   std_logic;
        endOut                            :   OUT   std_logic;
        validOut                          :   OUT   std_logic
        );
END FFT_HDL_Optimized;


ARCHITECTURE rtl OF FFT_HDL_Optimized IS

  -- Component Declarations
  COMPONENT RADIX22FFT_CTRL1_1
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          dinXTwdl_1_1_vld                :   IN    std_logic;
          dinXTwdl_1_1_vld_1              :   IN    std_logic;
          rd_1_Addr                       :   OUT   std_logic_vector(8 DOWNTO 0);  -- ufix9
          rd_1_Enb                        :   OUT   std_logic;
          proc_1_enb                      :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT RADIX22FFT_SDF1_1
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          din_1_1_re_dly                  :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En13
          din_1_1_im_dly                  :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En13
          din_1_vld_dly                   :   IN    std_logic;
          rd_1_Addr                       :   IN    std_logic_vector(8 DOWNTO 0);  -- ufix9
          rd_1_Enb                        :   IN    std_logic;
          proc_1_enb                      :   IN    std_logic;
          dout_1_1_re                     :   OUT   std_logic_vector(16 DOWNTO 0);  -- sfix17_En13
          dout_1_1_im                     :   OUT   std_logic_vector(16 DOWNTO 0);  -- sfix17_En13
          dout_1_1_vld                    :   OUT   std_logic;
          dinXTwdl_1_1_vld                :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT RADIX22FFT_CTRL1_2
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          dout_1_1_vld                    :   IN    std_logic;
          dinXTwdl_2_1_vld                :   IN    std_logic;
          rd_2_Addr                       :   OUT   std_logic_vector(7 DOWNTO 0);  -- ufix8
          rd_2_Enb                        :   OUT   std_logic;
          proc_2_enb                      :   OUT   std_logic;
          multiply_2_J                    :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT RADIX22FFT_SDF2_2
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          dout_1_1_re                     :   IN    std_logic_vector(16 DOWNTO 0);  -- sfix17_En13
          dout_1_1_im                     :   IN    std_logic_vector(16 DOWNTO 0);  -- sfix17_En13
          dout_1_1_vld                    :   IN    std_logic;
          rd_2_Addr                       :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix8
          rd_2_Enb                        :   IN    std_logic;
          proc_2_enb                      :   IN    std_logic;
          multiply_2_J                    :   IN    std_logic;
          dout_2_1_re                     :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En13
          dout_2_1_im                     :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En13
          dout_2_1_vld                    :   OUT   std_logic;
          dinXTwdl_2_1_vld                :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT TWDLROM_3_1
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          dout_2_1_vld                    :   IN    std_logic;
          twdl_3_1_re                     :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          twdl_3_1_im                     :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En14
          );
  END COMPONENT;

  COMPONENT RADIX22FFT_CTRL1_3
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          dinXTwdl_3_1_vld                :   IN    std_logic;
          dinXTwdl_3_1_vld_1              :   IN    std_logic;
          rd_3_Addr                       :   OUT   std_logic_vector(6 DOWNTO 0);  -- ufix7
          rd_3_Enb                        :   OUT   std_logic;
          proc_3_enb                      :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT RADIX22FFT_SDF1_3
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          din_3_1_re_dly                  :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En13
          din_3_1_im_dly                  :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En13
          din_3_vld_dly                   :   IN    std_logic;
          rd_3_Addr                       :   IN    std_logic_vector(6 DOWNTO 0);  -- ufix7
          rd_3_Enb                        :   IN    std_logic;
          twdl_3_1_re                     :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          twdl_3_1_im                     :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          proc_3_enb                      :   IN    std_logic;
          dout_3_1_re                     :   OUT   std_logic_vector(18 DOWNTO 0);  -- sfix19_En13
          dout_3_1_im                     :   OUT   std_logic_vector(18 DOWNTO 0);  -- sfix19_En13
          dout_3_1_vld                    :   OUT   std_logic;
          dinXTwdl_3_1_vld                :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT RADIX22FFT_CTRL1_4
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          dout_3_1_vld                    :   IN    std_logic;
          dinXTwdl_4_1_vld                :   IN    std_logic;
          rd_4_Addr                       :   OUT   std_logic_vector(5 DOWNTO 0);  -- ufix6
          rd_4_Enb                        :   OUT   std_logic;
          proc_4_enb                      :   OUT   std_logic;
          multiply_4_J                    :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT RADIX22FFT_SDF2_4
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          dout_3_1_re                     :   IN    std_logic_vector(18 DOWNTO 0);  -- sfix19_En13
          dout_3_1_im                     :   IN    std_logic_vector(18 DOWNTO 0);  -- sfix19_En13
          dout_3_1_vld                    :   IN    std_logic;
          rd_4_Addr                       :   IN    std_logic_vector(5 DOWNTO 0);  -- ufix6
          rd_4_Enb                        :   IN    std_logic;
          proc_4_enb                      :   IN    std_logic;
          multiply_4_J                    :   IN    std_logic;
          dout_4_1_re                     :   OUT   std_logic_vector(19 DOWNTO 0);  -- sfix20_En13
          dout_4_1_im                     :   OUT   std_logic_vector(19 DOWNTO 0);  -- sfix20_En13
          dout_4_1_vld                    :   OUT   std_logic;
          dinXTwdl_4_1_vld                :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT TWDLROM_5_1
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          dout_4_1_vld                    :   IN    std_logic;
          twdl_5_1_re                     :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          twdl_5_1_im                     :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En14
          );
  END COMPONENT;

  COMPONENT RADIX22FFT_CTRL1_5
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          dinXTwdl_5_1_vld                :   IN    std_logic;
          dinXTwdl_5_1_vld_1              :   IN    std_logic;
          rd_5_Addr                       :   OUT   std_logic_vector(4 DOWNTO 0);  -- ufix5
          rd_5_Enb                        :   OUT   std_logic;
          proc_5_enb                      :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT RADIX22FFT_SDF1_5
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          din_5_1_re_dly                  :   IN    std_logic_vector(19 DOWNTO 0);  -- sfix20_En13
          din_5_1_im_dly                  :   IN    std_logic_vector(19 DOWNTO 0);  -- sfix20_En13
          din_5_vld_dly                   :   IN    std_logic;
          rd_5_Addr                       :   IN    std_logic_vector(4 DOWNTO 0);  -- ufix5
          rd_5_Enb                        :   IN    std_logic;
          twdl_5_1_re                     :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          twdl_5_1_im                     :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          proc_5_enb                      :   IN    std_logic;
          dout_5_1_re                     :   OUT   std_logic_vector(20 DOWNTO 0);  -- sfix21_En13
          dout_5_1_im                     :   OUT   std_logic_vector(20 DOWNTO 0);  -- sfix21_En13
          dout_5_1_vld                    :   OUT   std_logic;
          dinXTwdl_5_1_vld                :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT RADIX22FFT_CTRL1_6
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          dout_5_1_vld                    :   IN    std_logic;
          dinXTwdl_6_1_vld                :   IN    std_logic;
          rd_6_Addr                       :   OUT   std_logic_vector(3 DOWNTO 0);  -- ufix4
          rd_6_Enb                        :   OUT   std_logic;
          proc_6_enb                      :   OUT   std_logic;
          multiply_6_J                    :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT RADIX22FFT_SDF2_6
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          dout_5_1_re                     :   IN    std_logic_vector(20 DOWNTO 0);  -- sfix21_En13
          dout_5_1_im                     :   IN    std_logic_vector(20 DOWNTO 0);  -- sfix21_En13
          dout_5_1_vld                    :   IN    std_logic;
          rd_6_Addr                       :   IN    std_logic_vector(3 DOWNTO 0);  -- ufix4
          rd_6_Enb                        :   IN    std_logic;
          proc_6_enb                      :   IN    std_logic;
          multiply_6_J                    :   IN    std_logic;
          dout_6_1_re                     :   OUT   std_logic_vector(21 DOWNTO 0);  -- sfix22_En13
          dout_6_1_im                     :   OUT   std_logic_vector(21 DOWNTO 0);  -- sfix22_En13
          dout_6_1_vld                    :   OUT   std_logic;
          dinXTwdl_6_1_vld                :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT TWDLROM_7_1
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          dout_6_1_vld                    :   IN    std_logic;
          twdl_7_1_re                     :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          twdl_7_1_im                     :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En14
          );
  END COMPONENT;

  COMPONENT RADIX22FFT_CTRL1_7
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          dinXTwdl_7_1_vld                :   IN    std_logic;
          dinXTwdl_7_1_vld_1              :   IN    std_logic;
          rd_7_Addr                       :   OUT   std_logic_vector(2 DOWNTO 0);  -- ufix3
          rd_7_Enb                        :   OUT   std_logic;
          proc_7_enb                      :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT RADIX22FFT_SDF1_7
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          din_7_1_re_dly                  :   IN    std_logic_vector(21 DOWNTO 0);  -- sfix22_En13
          din_7_1_im_dly                  :   IN    std_logic_vector(21 DOWNTO 0);  -- sfix22_En13
          din_7_vld_dly                   :   IN    std_logic;
          rd_7_Addr                       :   IN    std_logic_vector(2 DOWNTO 0);  -- ufix3
          rd_7_Enb                        :   IN    std_logic;
          twdl_7_1_re                     :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          twdl_7_1_im                     :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          proc_7_enb                      :   IN    std_logic;
          dout_7_1_re                     :   OUT   std_logic_vector(22 DOWNTO 0);  -- sfix23_En13
          dout_7_1_im                     :   OUT   std_logic_vector(22 DOWNTO 0);  -- sfix23_En13
          dout_7_1_vld                    :   OUT   std_logic;
          dinXTwdl_7_1_vld                :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT RADIX22FFT_CTRL1_8
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          dout_7_1_vld                    :   IN    std_logic;
          dinXTwdl_8_1_vld                :   IN    std_logic;
          rd_8_Addr                       :   OUT   std_logic_vector(1 DOWNTO 0);  -- ufix2
          rd_8_Enb                        :   OUT   std_logic;
          proc_8_enb                      :   OUT   std_logic;
          multiply_8_J                    :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT RADIX22FFT_SDF2_8
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          dout_7_1_re                     :   IN    std_logic_vector(22 DOWNTO 0);  -- sfix23_En13
          dout_7_1_im                     :   IN    std_logic_vector(22 DOWNTO 0);  -- sfix23_En13
          dout_7_1_vld                    :   IN    std_logic;
          rd_8_Addr                       :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          rd_8_Enb                        :   IN    std_logic;
          proc_8_enb                      :   IN    std_logic;
          multiply_8_J                    :   IN    std_logic;
          dout_8_1_re                     :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En13
          dout_8_1_im                     :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En13
          dout_8_1_vld                    :   OUT   std_logic;
          dinXTwdl_8_1_vld                :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT TWDLROM_9_1
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          dout_8_1_vld                    :   IN    std_logic;
          twdl_9_1_re                     :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          twdl_9_1_im                     :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En14
          );
  END COMPONENT;

  COMPONENT RADIX22FFT_CTRL1_9
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          dinXTwdl_9_1_vld                :   IN    std_logic;
          dinXTwdl_9_1_vld_1              :   IN    std_logic;
          rd_9_Addr                       :   OUT   std_logic;  -- ufix1
          rd_9_Enb                        :   OUT   std_logic;
          proc_9_enb                      :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT RADIX22FFT_SDF1_9
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          din_9_1_re_dly                  :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En13
          din_9_1_im_dly                  :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En13
          din_9_vld_dly                   :   IN    std_logic;
          rd_9_Addr                       :   IN    std_logic;  -- ufix1
          rd_9_Enb                        :   IN    std_logic;
          twdl_9_1_re                     :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          twdl_9_1_im                     :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          proc_9_enb                      :   IN    std_logic;
          dout_9_1_re                     :   OUT   std_logic_vector(24 DOWNTO 0);  -- sfix25_En13
          dout_9_1_im                     :   OUT   std_logic_vector(24 DOWNTO 0);  -- sfix25_En13
          dout_9_1_vld                    :   OUT   std_logic;
          dinXTwdl_9_1_vld                :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT RADIX22FFT_CTRL1_10
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          dout_9_1_vld                    :   IN    std_logic;
          dinXTwdl_10_1_vld               :   IN    std_logic;
          rd_10_Addr                      :   OUT   std_logic;
          rd_10_Enb                       :   OUT   std_logic;
          proc_10_enb                     :   OUT   std_logic;
          multiply_10_J                   :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT RADIX22FFT_SDF2_10
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          dout_9_1_re                     :   IN    std_logic_vector(24 DOWNTO 0);  -- sfix25_En13
          dout_9_1_im                     :   IN    std_logic_vector(24 DOWNTO 0);  -- sfix25_En13
          dout_9_1_vld                    :   IN    std_logic;
          rd_10_Addr                      :   IN    std_logic;
          rd_10_Enb                       :   IN    std_logic;
          proc_10_enb                     :   IN    std_logic;
          multiply_10_J                   :   IN    std_logic;
          dout_10_1_re                    :   OUT   std_logic_vector(25 DOWNTO 0);  -- sfix26_En13
          dout_10_1_im                    :   OUT   std_logic_vector(25 DOWNTO 0);  -- sfix26_En13
          dout_10_1_vld                   :   OUT   std_logic;
          dinXTwdl_10_1_vld               :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT RADIX22FFT_SDF1_1_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          din_1_2_re_dly                  :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En13
          din_1_2_im_dly                  :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En13
          din_1_vld_dly                   :   IN    std_logic;
          rd_1_Addr                       :   IN    std_logic_vector(8 DOWNTO 0);  -- ufix9
          rd_1_Enb                        :   IN    std_logic;
          proc_1_enb                      :   IN    std_logic;
          dout_1_2_re                     :   OUT   std_logic_vector(16 DOWNTO 0);  -- sfix17_En13
          dout_1_2_im                     :   OUT   std_logic_vector(16 DOWNTO 0)  -- sfix17_En13
          );
  END COMPONENT;

  COMPONENT RADIX22FFT_SDF2_2_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          dout_1_2_re                     :   IN    std_logic_vector(16 DOWNTO 0);  -- sfix17_En13
          dout_1_2_im                     :   IN    std_logic_vector(16 DOWNTO 0);  -- sfix17_En13
          dout_1_1_vld                    :   IN    std_logic;
          rd_2_Addr                       :   IN    std_logic_vector(7 DOWNTO 0);  -- ufix8
          rd_2_Enb                        :   IN    std_logic;
          proc_2_enb                      :   IN    std_logic;
          multiply_2_J                    :   IN    std_logic;
          dout_2_2_re                     :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En13
          dout_2_2_im                     :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En13
          );
  END COMPONENT;

  COMPONENT TWDLROM_3_2
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          dout_2_1_vld                    :   IN    std_logic;
          twdl_3_2_re                     :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          twdl_3_2_im                     :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En14
          );
  END COMPONENT;

  COMPONENT RADIX22FFT_SDF1_3_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          din_3_2_re_dly                  :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En13
          din_3_2_im_dly                  :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En13
          din_3_vld_dly                   :   IN    std_logic;
          rd_3_Addr                       :   IN    std_logic_vector(6 DOWNTO 0);  -- ufix7
          rd_3_Enb                        :   IN    std_logic;
          twdl_3_2_re                     :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          twdl_3_2_im                     :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          proc_3_enb                      :   IN    std_logic;
          dout_3_2_re                     :   OUT   std_logic_vector(18 DOWNTO 0);  -- sfix19_En13
          dout_3_2_im                     :   OUT   std_logic_vector(18 DOWNTO 0)  -- sfix19_En13
          );
  END COMPONENT;

  COMPONENT RADIX22FFT_SDF2_4_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          dout_3_2_re                     :   IN    std_logic_vector(18 DOWNTO 0);  -- sfix19_En13
          dout_3_2_im                     :   IN    std_logic_vector(18 DOWNTO 0);  -- sfix19_En13
          dout_3_1_vld                    :   IN    std_logic;
          rd_4_Addr                       :   IN    std_logic_vector(5 DOWNTO 0);  -- ufix6
          rd_4_Enb                        :   IN    std_logic;
          proc_4_enb                      :   IN    std_logic;
          multiply_4_J                    :   IN    std_logic;
          dout_4_2_re                     :   OUT   std_logic_vector(19 DOWNTO 0);  -- sfix20_En13
          dout_4_2_im                     :   OUT   std_logic_vector(19 DOWNTO 0)  -- sfix20_En13
          );
  END COMPONENT;

  COMPONENT TWDLROM_5_2
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          dout_4_1_vld                    :   IN    std_logic;
          twdl_5_2_re                     :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          twdl_5_2_im                     :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En14
          );
  END COMPONENT;

  COMPONENT RADIX22FFT_SDF1_5_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          din_5_2_re_dly                  :   IN    std_logic_vector(19 DOWNTO 0);  -- sfix20_En13
          din_5_2_im_dly                  :   IN    std_logic_vector(19 DOWNTO 0);  -- sfix20_En13
          din_5_vld_dly                   :   IN    std_logic;
          rd_5_Addr                       :   IN    std_logic_vector(4 DOWNTO 0);  -- ufix5
          rd_5_Enb                        :   IN    std_logic;
          twdl_5_2_re                     :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          twdl_5_2_im                     :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          proc_5_enb                      :   IN    std_logic;
          dout_5_2_re                     :   OUT   std_logic_vector(20 DOWNTO 0);  -- sfix21_En13
          dout_5_2_im                     :   OUT   std_logic_vector(20 DOWNTO 0)  -- sfix21_En13
          );
  END COMPONENT;

  COMPONENT RADIX22FFT_SDF2_6_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          dout_5_2_re                     :   IN    std_logic_vector(20 DOWNTO 0);  -- sfix21_En13
          dout_5_2_im                     :   IN    std_logic_vector(20 DOWNTO 0);  -- sfix21_En13
          dout_5_1_vld                    :   IN    std_logic;
          rd_6_Addr                       :   IN    std_logic_vector(3 DOWNTO 0);  -- ufix4
          rd_6_Enb                        :   IN    std_logic;
          proc_6_enb                      :   IN    std_logic;
          multiply_6_J                    :   IN    std_logic;
          dout_6_2_re                     :   OUT   std_logic_vector(21 DOWNTO 0);  -- sfix22_En13
          dout_6_2_im                     :   OUT   std_logic_vector(21 DOWNTO 0)  -- sfix22_En13
          );
  END COMPONENT;

  COMPONENT TWDLROM_7_2
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          dout_6_1_vld                    :   IN    std_logic;
          twdl_7_2_re                     :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          twdl_7_2_im                     :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En14
          );
  END COMPONENT;

  COMPONENT RADIX22FFT_SDF1_7_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          din_7_2_re_dly                  :   IN    std_logic_vector(21 DOWNTO 0);  -- sfix22_En13
          din_7_2_im_dly                  :   IN    std_logic_vector(21 DOWNTO 0);  -- sfix22_En13
          din_7_vld_dly                   :   IN    std_logic;
          rd_7_Addr                       :   IN    std_logic_vector(2 DOWNTO 0);  -- ufix3
          rd_7_Enb                        :   IN    std_logic;
          twdl_7_2_re                     :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          twdl_7_2_im                     :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          proc_7_enb                      :   IN    std_logic;
          dout_7_2_re                     :   OUT   std_logic_vector(22 DOWNTO 0);  -- sfix23_En13
          dout_7_2_im                     :   OUT   std_logic_vector(22 DOWNTO 0)  -- sfix23_En13
          );
  END COMPONENT;

  COMPONENT RADIX22FFT_SDF2_8_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          dout_7_2_re                     :   IN    std_logic_vector(22 DOWNTO 0);  -- sfix23_En13
          dout_7_2_im                     :   IN    std_logic_vector(22 DOWNTO 0);  -- sfix23_En13
          dout_7_1_vld                    :   IN    std_logic;
          rd_8_Addr                       :   IN    std_logic_vector(1 DOWNTO 0);  -- ufix2
          rd_8_Enb                        :   IN    std_logic;
          proc_8_enb                      :   IN    std_logic;
          multiply_8_J                    :   IN    std_logic;
          dout_8_2_re                     :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En13
          dout_8_2_im                     :   OUT   std_logic_vector(23 DOWNTO 0)  -- sfix24_En13
          );
  END COMPONENT;

  COMPONENT TWDLROM_9_2
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          dout_8_1_vld                    :   IN    std_logic;
          twdl_9_2_re                     :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          twdl_9_2_im                     :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En14
          );
  END COMPONENT;

  COMPONENT RADIX22FFT_SDF1_9_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          din_9_2_re_dly                  :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En13
          din_9_2_im_dly                  :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En13
          din_9_vld_dly                   :   IN    std_logic;
          rd_9_Addr                       :   IN    std_logic;  -- ufix1
          rd_9_Enb                        :   IN    std_logic;
          twdl_9_2_re                     :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          twdl_9_2_im                     :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          proc_9_enb                      :   IN    std_logic;
          dout_9_2_re                     :   OUT   std_logic_vector(24 DOWNTO 0);  -- sfix25_En13
          dout_9_2_im                     :   OUT   std_logic_vector(24 DOWNTO 0)  -- sfix25_En13
          );
  END COMPONENT;

  COMPONENT RADIX22FFT_SDF2_10_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          dout_9_2_re                     :   IN    std_logic_vector(24 DOWNTO 0);  -- sfix25_En13
          dout_9_2_im                     :   IN    std_logic_vector(24 DOWNTO 0);  -- sfix25_En13
          dout_9_1_vld                    :   IN    std_logic;
          rd_10_Addr                      :   IN    std_logic;
          rd_10_Enb                       :   IN    std_logic;
          proc_10_enb                     :   IN    std_logic;
          multiply_10_J                   :   IN    std_logic;
          dout_10_2_re                    :   OUT   std_logic_vector(25 DOWNTO 0);  -- sfix26_En13
          dout_10_2_im                    :   OUT   std_logic_vector(25 DOWNTO 0)  -- sfix26_En13
          );
  END COMPONENT;

  COMPONENT TWDLROM_11_2
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          dout_10_1_vld                   :   IN    std_logic;
          twdl_11_2_re                    :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          twdl_11_2_im                    :   OUT   std_logic_vector(15 DOWNTO 0)  -- sfix16_En14
          );
  END COMPONENT;

  COMPONENT RADIX22FFT_SDNF1_11
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          dout_10_1_re                    :   IN    std_logic_vector(25 DOWNTO 0);  -- sfix26_En13
          dout_10_1_im                    :   IN    std_logic_vector(25 DOWNTO 0);  -- sfix26_En13
          dout_10_2_re                    :   IN    std_logic_vector(25 DOWNTO 0);  -- sfix26_En13
          dout_10_2_im                    :   IN    std_logic_vector(25 DOWNTO 0);  -- sfix26_En13
          dout_10_1_vld                   :   IN    std_logic;
          twdl_11_2_re                    :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          twdl_11_2_im                    :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En14
          dout_1_re                       :   OUT   std_logic_vector(26 DOWNTO 0);  -- sfix27_En13
          dout_1_im                       :   OUT   std_logic_vector(26 DOWNTO 0);  -- sfix27_En13
          dout_2_re                       :   OUT   std_logic_vector(26 DOWNTO 0);  -- sfix27_En13
          dout_2_im                       :   OUT   std_logic_vector(26 DOWNTO 0);  -- sfix27_En13
          dout_2_vld                      :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT RADIX22FFT_bitNatural_1
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          dout_re_v                       :   IN    vector_of_std_logic_vector27(0 TO 1);  -- sfix27_En13 [2]
          dout_im_v                       :   IN    vector_of_std_logic_vector27(0 TO 1);  -- sfix27_En13 [2]
          dout_2_vld                      :   IN    std_logic;
          dMem_re1                        :   OUT   std_logic_vector(26 DOWNTO 0);  -- sfix27_En13
          dMem_im1                        :   OUT   std_logic_vector(26 DOWNTO 0);  -- sfix27_En13
          dMem_vld1                       :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT RADIX22FFT_bitNatural_2
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          dout_re_v                       :   IN    vector_of_std_logic_vector27(0 TO 1);  -- sfix27_En13 [2]
          dout_im_v                       :   IN    vector_of_std_logic_vector27(0 TO 1);  -- sfix27_En13 [2]
          dout_2_vld                      :   IN    std_logic;
          dMem_re2                        :   OUT   std_logic_vector(26 DOWNTO 0);  -- sfix27_En13
          dMem_im2                        :   OUT   std_logic_vector(26 DOWNTO 0);  -- sfix27_En13
          startOutO                       :   OUT   std_logic;
          endOutO                         :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT RADIX22FFT_bitNaturalMux_1
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          dMem_re_v                       :   IN    vector_of_std_logic_vector27(0 TO 1);  -- sfix27_En13 [2]
          dMem_im_v                       :   IN    vector_of_std_logic_vector27(0 TO 1);  -- sfix27_En13 [2]
          dMem_vld1                       :   IN    std_logic;
          dMux_re1                        :   OUT   std_logic_vector(26 DOWNTO 0);  -- sfix27_En13
          dMux_im1                        :   OUT   std_logic_vector(26 DOWNTO 0);  -- sfix27_En13
          dMux_vld1                       :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT RADIX22FFT_bitNaturalMux_2
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          dMem_re_v                       :   IN    vector_of_std_logic_vector27(0 TO 1);  -- sfix27_En13 [2]
          dMem_im_v                       :   IN    vector_of_std_logic_vector27(0 TO 1);  -- sfix27_En13 [2]
          dMem_vld1                       :   IN    std_logic;
          dMux_re2                        :   OUT   std_logic_vector(26 DOWNTO 0);  -- sfix27_En13
          dMux_im2                        :   OUT   std_logic_vector(26 DOWNTO 0)  -- sfix27_En13
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : RADIX22FFT_CTRL1_1
    USE ENTITY work.RADIX22FFT_CTRL1_1(rtl);

  FOR ALL : RADIX22FFT_SDF1_1
    USE ENTITY work.RADIX22FFT_SDF1_1(rtl);

  FOR ALL : RADIX22FFT_CTRL1_2
    USE ENTITY work.RADIX22FFT_CTRL1_2(rtl);

  FOR ALL : RADIX22FFT_SDF2_2
    USE ENTITY work.RADIX22FFT_SDF2_2(rtl);

  FOR ALL : TWDLROM_3_1
    USE ENTITY work.TWDLROM_3_1(rtl);

  FOR ALL : RADIX22FFT_CTRL1_3
    USE ENTITY work.RADIX22FFT_CTRL1_3(rtl);

  FOR ALL : RADIX22FFT_SDF1_3
    USE ENTITY work.RADIX22FFT_SDF1_3(rtl);

  FOR ALL : RADIX22FFT_CTRL1_4
    USE ENTITY work.RADIX22FFT_CTRL1_4(rtl);

  FOR ALL : RADIX22FFT_SDF2_4
    USE ENTITY work.RADIX22FFT_SDF2_4(rtl);

  FOR ALL : TWDLROM_5_1
    USE ENTITY work.TWDLROM_5_1(rtl);

  FOR ALL : RADIX22FFT_CTRL1_5
    USE ENTITY work.RADIX22FFT_CTRL1_5(rtl);

  FOR ALL : RADIX22FFT_SDF1_5
    USE ENTITY work.RADIX22FFT_SDF1_5(rtl);

  FOR ALL : RADIX22FFT_CTRL1_6
    USE ENTITY work.RADIX22FFT_CTRL1_6(rtl);

  FOR ALL : RADIX22FFT_SDF2_6
    USE ENTITY work.RADIX22FFT_SDF2_6(rtl);

  FOR ALL : TWDLROM_7_1
    USE ENTITY work.TWDLROM_7_1(rtl);

  FOR ALL : RADIX22FFT_CTRL1_7
    USE ENTITY work.RADIX22FFT_CTRL1_7(rtl);

  FOR ALL : RADIX22FFT_SDF1_7
    USE ENTITY work.RADIX22FFT_SDF1_7(rtl);

  FOR ALL : RADIX22FFT_CTRL1_8
    USE ENTITY work.RADIX22FFT_CTRL1_8(rtl);

  FOR ALL : RADIX22FFT_SDF2_8
    USE ENTITY work.RADIX22FFT_SDF2_8(rtl);

  FOR ALL : TWDLROM_9_1
    USE ENTITY work.TWDLROM_9_1(rtl);

  FOR ALL : RADIX22FFT_CTRL1_9
    USE ENTITY work.RADIX22FFT_CTRL1_9(rtl);

  FOR ALL : RADIX22FFT_SDF1_9
    USE ENTITY work.RADIX22FFT_SDF1_9(rtl);

  FOR ALL : RADIX22FFT_CTRL1_10
    USE ENTITY work.RADIX22FFT_CTRL1_10(rtl);

  FOR ALL : RADIX22FFT_SDF2_10
    USE ENTITY work.RADIX22FFT_SDF2_10(rtl);

  FOR ALL : RADIX22FFT_SDF1_1_block
    USE ENTITY work.RADIX22FFT_SDF1_1_block(rtl);

  FOR ALL : RADIX22FFT_SDF2_2_block
    USE ENTITY work.RADIX22FFT_SDF2_2_block(rtl);

  FOR ALL : TWDLROM_3_2
    USE ENTITY work.TWDLROM_3_2(rtl);

  FOR ALL : RADIX22FFT_SDF1_3_block
    USE ENTITY work.RADIX22FFT_SDF1_3_block(rtl);

  FOR ALL : RADIX22FFT_SDF2_4_block
    USE ENTITY work.RADIX22FFT_SDF2_4_block(rtl);

  FOR ALL : TWDLROM_5_2
    USE ENTITY work.TWDLROM_5_2(rtl);

  FOR ALL : RADIX22FFT_SDF1_5_block
    USE ENTITY work.RADIX22FFT_SDF1_5_block(rtl);

  FOR ALL : RADIX22FFT_SDF2_6_block
    USE ENTITY work.RADIX22FFT_SDF2_6_block(rtl);

  FOR ALL : TWDLROM_7_2
    USE ENTITY work.TWDLROM_7_2(rtl);

  FOR ALL : RADIX22FFT_SDF1_7_block
    USE ENTITY work.RADIX22FFT_SDF1_7_block(rtl);

  FOR ALL : RADIX22FFT_SDF2_8_block
    USE ENTITY work.RADIX22FFT_SDF2_8_block(rtl);

  FOR ALL : TWDLROM_9_2
    USE ENTITY work.TWDLROM_9_2(rtl);

  FOR ALL : RADIX22FFT_SDF1_9_block
    USE ENTITY work.RADIX22FFT_SDF1_9_block(rtl);

  FOR ALL : RADIX22FFT_SDF2_10_block
    USE ENTITY work.RADIX22FFT_SDF2_10_block(rtl);

  FOR ALL : TWDLROM_11_2
    USE ENTITY work.TWDLROM_11_2(rtl);

  FOR ALL : RADIX22FFT_SDNF1_11
    USE ENTITY work.RADIX22FFT_SDNF1_11(rtl);

  FOR ALL : RADIX22FFT_bitNatural_1
    USE ENTITY work.RADIX22FFT_bitNatural_1(rtl);

  FOR ALL : RADIX22FFT_bitNatural_2
    USE ENTITY work.RADIX22FFT_bitNatural_2(rtl);

  FOR ALL : RADIX22FFT_bitNaturalMux_1
    USE ENTITY work.RADIX22FFT_bitNaturalMux_1(rtl);

  FOR ALL : RADIX22FFT_bitNaturalMux_2
    USE ENTITY work.RADIX22FFT_bitNaturalMux_2(rtl);

  -- Signals
  SIGNAL softReset                        : std_logic;
  SIGNAL dataIn_0_re                      : signed(15 DOWNTO 0);  -- sfix16_En13
  SIGNAL dataIn_0_im                      : signed(15 DOWNTO 0);  -- sfix16_En13
  SIGNAL intdelay_reg                     : vector_of_signed16(0 TO 2);  -- sfix16 [3]
  SIGNAL din_1_1_re_dly                   : signed(15 DOWNTO 0);  -- sfix16_En13
  SIGNAL intdelay_reg_1                   : vector_of_signed16(0 TO 2);  -- sfix16 [3]
  SIGNAL din_1_1_im_dly                   : signed(15 DOWNTO 0);  -- sfix16_En13
  SIGNAL intdelay_reg_2                   : std_logic_vector(0 TO 2);  -- ufix1 [3]
  SIGNAL din_1_vld_dly                    : std_logic;
  SIGNAL dinXTwdl_1_1_vld                 : std_logic;
  SIGNAL rd_1_Addr                        : std_logic_vector(8 DOWNTO 0);  -- ufix9
  SIGNAL rd_1_Enb                         : std_logic;
  SIGNAL proc_1_enb                       : std_logic;
  SIGNAL dout_1_1_re                      : std_logic_vector(16 DOWNTO 0);  -- ufix17
  SIGNAL dout_1_1_im                      : std_logic_vector(16 DOWNTO 0);  -- ufix17
  SIGNAL dout_1_1_vld                     : std_logic;
  SIGNAL dinXTwdl_2_1_vld                 : std_logic;
  SIGNAL rd_2_Addr                        : std_logic_vector(7 DOWNTO 0);  -- ufix8
  SIGNAL rd_2_Enb                         : std_logic;
  SIGNAL proc_2_enb                       : std_logic;
  SIGNAL multiply_2_J                     : std_logic;
  SIGNAL dout_2_1_re                      : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL dout_2_1_im                      : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL dout_2_1_vld                     : std_logic;
  SIGNAL dout_2_1_re_signed               : signed(17 DOWNTO 0);  -- sfix18_En13
  SIGNAL dout_2_1_im_signed               : signed(17 DOWNTO 0);  -- sfix18_En13
  SIGNAL intdelay_reg_3                   : vector_of_signed18(0 TO 2);  -- sfix18 [3]
  SIGNAL din_3_1_re_dly                   : signed(17 DOWNTO 0);  -- sfix18_En13
  SIGNAL intdelay_reg_4                   : vector_of_signed18(0 TO 2);  -- sfix18 [3]
  SIGNAL din_3_1_im_dly                   : signed(17 DOWNTO 0);  -- sfix18_En13
  SIGNAL intdelay_reg_5                   : std_logic_vector(0 TO 2);  -- ufix1 [3]
  SIGNAL din_3_vld_dly                    : std_logic;
  SIGNAL twdl_3_1_re                      : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL twdl_3_1_im                      : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL dinXTwdl_3_1_vld                 : std_logic;
  SIGNAL rd_3_Addr                        : std_logic_vector(6 DOWNTO 0);  -- ufix7
  SIGNAL rd_3_Enb                         : std_logic;
  SIGNAL proc_3_enb                       : std_logic;
  SIGNAL dout_3_1_re                      : std_logic_vector(18 DOWNTO 0);  -- ufix19
  SIGNAL dout_3_1_im                      : std_logic_vector(18 DOWNTO 0);  -- ufix19
  SIGNAL dout_3_1_vld                     : std_logic;
  SIGNAL dinXTwdl_4_1_vld                 : std_logic;
  SIGNAL rd_4_Addr                        : std_logic_vector(5 DOWNTO 0);  -- ufix6
  SIGNAL rd_4_Enb                         : std_logic;
  SIGNAL proc_4_enb                       : std_logic;
  SIGNAL multiply_4_J                     : std_logic;
  SIGNAL dout_4_1_re                      : std_logic_vector(19 DOWNTO 0);  -- ufix20
  SIGNAL dout_4_1_im                      : std_logic_vector(19 DOWNTO 0);  -- ufix20
  SIGNAL dout_4_1_vld                     : std_logic;
  SIGNAL dout_4_1_re_signed               : signed(19 DOWNTO 0);  -- sfix20_En13
  SIGNAL dout_4_1_im_signed               : signed(19 DOWNTO 0);  -- sfix20_En13
  SIGNAL intdelay_reg_6                   : vector_of_signed20(0 TO 2);  -- sfix20 [3]
  SIGNAL din_5_1_re_dly                   : signed(19 DOWNTO 0);  -- sfix20_En13
  SIGNAL intdelay_reg_7                   : vector_of_signed20(0 TO 2);  -- sfix20 [3]
  SIGNAL din_5_1_im_dly                   : signed(19 DOWNTO 0);  -- sfix20_En13
  SIGNAL intdelay_reg_8                   : std_logic_vector(0 TO 2);  -- ufix1 [3]
  SIGNAL din_5_vld_dly                    : std_logic;
  SIGNAL twdl_5_1_re                      : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL twdl_5_1_im                      : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL dinXTwdl_5_1_vld                 : std_logic;
  SIGNAL rd_5_Addr                        : std_logic_vector(4 DOWNTO 0);  -- ufix5
  SIGNAL rd_5_Enb                         : std_logic;
  SIGNAL proc_5_enb                       : std_logic;
  SIGNAL dout_5_1_re                      : std_logic_vector(20 DOWNTO 0);  -- ufix21
  SIGNAL dout_5_1_im                      : std_logic_vector(20 DOWNTO 0);  -- ufix21
  SIGNAL dout_5_1_vld                     : std_logic;
  SIGNAL dinXTwdl_6_1_vld                 : std_logic;
  SIGNAL rd_6_Addr                        : std_logic_vector(3 DOWNTO 0);  -- ufix4
  SIGNAL rd_6_Enb                         : std_logic;
  SIGNAL proc_6_enb                       : std_logic;
  SIGNAL multiply_6_J                     : std_logic;
  SIGNAL dout_6_1_re                      : std_logic_vector(21 DOWNTO 0);  -- ufix22
  SIGNAL dout_6_1_im                      : std_logic_vector(21 DOWNTO 0);  -- ufix22
  SIGNAL dout_6_1_vld                     : std_logic;
  SIGNAL dout_6_1_re_signed               : signed(21 DOWNTO 0);  -- sfix22_En13
  SIGNAL dout_6_1_im_signed               : signed(21 DOWNTO 0);  -- sfix22_En13
  SIGNAL intdelay_reg_9                   : vector_of_signed22(0 TO 2);  -- sfix22 [3]
  SIGNAL din_7_1_re_dly                   : signed(21 DOWNTO 0);  -- sfix22_En13
  SIGNAL intdelay_reg_10                  : vector_of_signed22(0 TO 2);  -- sfix22 [3]
  SIGNAL din_7_1_im_dly                   : signed(21 DOWNTO 0);  -- sfix22_En13
  SIGNAL intdelay_reg_11                  : std_logic_vector(0 TO 2);  -- ufix1 [3]
  SIGNAL din_7_vld_dly                    : std_logic;
  SIGNAL twdl_7_1_re                      : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL twdl_7_1_im                      : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL dinXTwdl_7_1_vld                 : std_logic;
  SIGNAL rd_7_Addr                        : std_logic_vector(2 DOWNTO 0);  -- ufix3
  SIGNAL rd_7_Enb                         : std_logic;
  SIGNAL proc_7_enb                       : std_logic;
  SIGNAL dout_7_1_re                      : std_logic_vector(22 DOWNTO 0);  -- ufix23
  SIGNAL dout_7_1_im                      : std_logic_vector(22 DOWNTO 0);  -- ufix23
  SIGNAL dout_7_1_vld                     : std_logic;
  SIGNAL dinXTwdl_8_1_vld                 : std_logic;
  SIGNAL rd_8_Addr                        : std_logic_vector(1 DOWNTO 0);  -- ufix2
  SIGNAL rd_8_Enb                         : std_logic;
  SIGNAL proc_8_enb                       : std_logic;
  SIGNAL multiply_8_J                     : std_logic;
  SIGNAL dout_8_1_re                      : std_logic_vector(23 DOWNTO 0);  -- ufix24
  SIGNAL dout_8_1_im                      : std_logic_vector(23 DOWNTO 0);  -- ufix24
  SIGNAL dout_8_1_vld                     : std_logic;
  SIGNAL dout_8_1_re_signed               : signed(23 DOWNTO 0);  -- sfix24_En13
  SIGNAL dout_8_1_im_signed               : signed(23 DOWNTO 0);  -- sfix24_En13
  SIGNAL intdelay_reg_12                  : vector_of_signed24(0 TO 2);  -- sfix24 [3]
  SIGNAL din_9_1_re_dly                   : signed(23 DOWNTO 0);  -- sfix24_En13
  SIGNAL intdelay_reg_13                  : vector_of_signed24(0 TO 2);  -- sfix24 [3]
  SIGNAL din_9_1_im_dly                   : signed(23 DOWNTO 0);  -- sfix24_En13
  SIGNAL intdelay_reg_14                  : std_logic_vector(0 TO 2);  -- ufix1 [3]
  SIGNAL din_9_vld_dly                    : std_logic;
  SIGNAL twdl_9_1_re                      : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL twdl_9_1_im                      : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL dinXTwdl_9_1_vld                 : std_logic;
  SIGNAL rd_9_Addr                        : std_logic;  -- ufix1
  SIGNAL rd_9_Enb                         : std_logic;
  SIGNAL proc_9_enb                       : std_logic;
  SIGNAL dout_9_1_re                      : std_logic_vector(24 DOWNTO 0);  -- ufix25
  SIGNAL dout_9_1_im                      : std_logic_vector(24 DOWNTO 0);  -- ufix25
  SIGNAL dout_9_1_vld                     : std_logic;
  SIGNAL dinXTwdl_10_1_vld                : std_logic;
  SIGNAL rd_10_Addr                       : std_logic;
  SIGNAL rd_10_Enb                        : std_logic;
  SIGNAL proc_10_enb                      : std_logic;
  SIGNAL multiply_10_J                    : std_logic;
  SIGNAL dout_10_1_re                     : std_logic_vector(25 DOWNTO 0);  -- ufix26
  SIGNAL dout_10_1_im                     : std_logic_vector(25 DOWNTO 0);  -- ufix26
  SIGNAL dout_10_1_vld                    : std_logic;
  SIGNAL dataIn_1_re                      : signed(15 DOWNTO 0);  -- sfix16_En13
  SIGNAL dataIn_1_im                      : signed(15 DOWNTO 0);  -- sfix16_En13
  SIGNAL intdelay_reg_15                  : vector_of_signed16(0 TO 2);  -- sfix16 [3]
  SIGNAL din_1_2_re_dly                   : signed(15 DOWNTO 0);  -- sfix16_En13
  SIGNAL intdelay_reg_16                  : vector_of_signed16(0 TO 2);  -- sfix16 [3]
  SIGNAL din_1_2_im_dly                   : signed(15 DOWNTO 0);  -- sfix16_En13
  SIGNAL dout_1_2_re                      : std_logic_vector(16 DOWNTO 0);  -- ufix17
  SIGNAL dout_1_2_im                      : std_logic_vector(16 DOWNTO 0);  -- ufix17
  SIGNAL dout_2_2_re                      : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL dout_2_2_im                      : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL dout_2_2_re_signed               : signed(17 DOWNTO 0);  -- sfix18_En13
  SIGNAL dout_2_2_im_signed               : signed(17 DOWNTO 0);  -- sfix18_En13
  SIGNAL intdelay_reg_17                  : vector_of_signed18(0 TO 2);  -- sfix18 [3]
  SIGNAL din_3_2_re_dly                   : signed(17 DOWNTO 0);  -- sfix18_En13
  SIGNAL intdelay_reg_18                  : vector_of_signed18(0 TO 2);  -- sfix18 [3]
  SIGNAL din_3_2_im_dly                   : signed(17 DOWNTO 0);  -- sfix18_En13
  SIGNAL twdl_3_2_re                      : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL twdl_3_2_im                      : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL dout_3_2_re                      : std_logic_vector(18 DOWNTO 0);  -- ufix19
  SIGNAL dout_3_2_im                      : std_logic_vector(18 DOWNTO 0);  -- ufix19
  SIGNAL dout_4_2_re                      : std_logic_vector(19 DOWNTO 0);  -- ufix20
  SIGNAL dout_4_2_im                      : std_logic_vector(19 DOWNTO 0);  -- ufix20
  SIGNAL dout_4_2_re_signed               : signed(19 DOWNTO 0);  -- sfix20_En13
  SIGNAL dout_4_2_im_signed               : signed(19 DOWNTO 0);  -- sfix20_En13
  SIGNAL intdelay_reg_19                  : vector_of_signed20(0 TO 2);  -- sfix20 [3]
  SIGNAL din_5_2_re_dly                   : signed(19 DOWNTO 0);  -- sfix20_En13
  SIGNAL intdelay_reg_20                  : vector_of_signed20(0 TO 2);  -- sfix20 [3]
  SIGNAL din_5_2_im_dly                   : signed(19 DOWNTO 0);  -- sfix20_En13
  SIGNAL twdl_5_2_re                      : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL twdl_5_2_im                      : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL dout_5_2_re                      : std_logic_vector(20 DOWNTO 0);  -- ufix21
  SIGNAL dout_5_2_im                      : std_logic_vector(20 DOWNTO 0);  -- ufix21
  SIGNAL dout_6_2_re                      : std_logic_vector(21 DOWNTO 0);  -- ufix22
  SIGNAL dout_6_2_im                      : std_logic_vector(21 DOWNTO 0);  -- ufix22
  SIGNAL dout_6_2_re_signed               : signed(21 DOWNTO 0);  -- sfix22_En13
  SIGNAL dout_6_2_im_signed               : signed(21 DOWNTO 0);  -- sfix22_En13
  SIGNAL intdelay_reg_21                  : vector_of_signed22(0 TO 2);  -- sfix22 [3]
  SIGNAL din_7_2_re_dly                   : signed(21 DOWNTO 0);  -- sfix22_En13
  SIGNAL intdelay_reg_22                  : vector_of_signed22(0 TO 2);  -- sfix22 [3]
  SIGNAL din_7_2_im_dly                   : signed(21 DOWNTO 0);  -- sfix22_En13
  SIGNAL twdl_7_2_re                      : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL twdl_7_2_im                      : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL dout_7_2_re                      : std_logic_vector(22 DOWNTO 0);  -- ufix23
  SIGNAL dout_7_2_im                      : std_logic_vector(22 DOWNTO 0);  -- ufix23
  SIGNAL dout_8_2_re                      : std_logic_vector(23 DOWNTO 0);  -- ufix24
  SIGNAL dout_8_2_im                      : std_logic_vector(23 DOWNTO 0);  -- ufix24
  SIGNAL dout_8_2_re_signed               : signed(23 DOWNTO 0);  -- sfix24_En13
  SIGNAL dout_8_2_im_signed               : signed(23 DOWNTO 0);  -- sfix24_En13
  SIGNAL intdelay_reg_23                  : vector_of_signed24(0 TO 2);  -- sfix24 [3]
  SIGNAL din_9_2_re_dly                   : signed(23 DOWNTO 0);  -- sfix24_En13
  SIGNAL intdelay_reg_24                  : vector_of_signed24(0 TO 2);  -- sfix24 [3]
  SIGNAL din_9_2_im_dly                   : signed(23 DOWNTO 0);  -- sfix24_En13
  SIGNAL twdl_9_2_re                      : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL twdl_9_2_im                      : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL dout_9_2_re                      : std_logic_vector(24 DOWNTO 0);  -- ufix25
  SIGNAL dout_9_2_im                      : std_logic_vector(24 DOWNTO 0);  -- ufix25
  SIGNAL dout_10_2_re                     : std_logic_vector(25 DOWNTO 0);  -- ufix26
  SIGNAL dout_10_2_im                     : std_logic_vector(25 DOWNTO 0);  -- ufix26
  SIGNAL twdl_11_2_re                     : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL twdl_11_2_im                     : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL dout_2_vld                       : std_logic;
  SIGNAL dout_re_v                        : vector_of_std_logic_vector27(0 TO 1);  -- ufix27 [2]
  SIGNAL dout_im_v                        : vector_of_std_logic_vector27(0 TO 1);  -- ufix27 [2]
  SIGNAL dMem_vld1                        : std_logic;
  SIGNAL startOutO                        : std_logic;
  SIGNAL endOutO                          : std_logic;
  SIGNAL dMem_re_v                        : vector_of_std_logic_vector27(0 TO 1);  -- ufix27 [2]
  SIGNAL dMem_im_v                        : vector_of_std_logic_vector27(0 TO 1);  -- ufix27 [2]
  SIGNAL dMux_vld1                        : std_logic;
  SIGNAL dataOut_re_tmp                   : vector_of_std_logic_vector27(0 TO 1);  -- ufix27 [2]
  SIGNAL dataOut_im_tmp                   : vector_of_std_logic_vector27(0 TO 1);  -- ufix27 [2]
  SIGNAL intdelay_reg_25                  : std_logic_vector(0 TO 1);  -- ufix1 [2]
  SIGNAL startOutS                        : std_logic;
  SIGNAL intdelay_reg_26                  : std_logic_vector(0 TO 1);  -- ufix1 [2]
  SIGNAL endOutS                          : std_logic;

BEGIN
  u_CTRL1_1_2 : RADIX22FFT_CTRL1_1
    PORT MAP( clk => clk,
              reset => reset,
              dinXTwdl_1_1_vld => dinXTwdl_1_1_vld,
              dinXTwdl_1_1_vld_1 => dinXTwdl_1_1_vld,
              rd_1_Addr => rd_1_Addr,  -- ufix9
              rd_1_Enb => rd_1_Enb,
              proc_1_enb => proc_1_enb
              );

  u_SDF1_1_1 : RADIX22FFT_SDF1_1
    PORT MAP( clk => clk,
              reset => reset,
              din_1_1_re_dly => std_logic_vector(din_1_1_re_dly),  -- sfix16_En13
              din_1_1_im_dly => std_logic_vector(din_1_1_im_dly),  -- sfix16_En13
              din_1_vld_dly => din_1_vld_dly,
              rd_1_Addr => rd_1_Addr,  -- ufix9
              rd_1_Enb => rd_1_Enb,
              proc_1_enb => proc_1_enb,
              dout_1_1_re => dout_1_1_re,  -- sfix17_En13
              dout_1_1_im => dout_1_1_im,  -- sfix17_En13
              dout_1_1_vld => dout_1_1_vld,
              dinXTwdl_1_1_vld => dinXTwdl_1_1_vld
              );

  u_CTRL2_2_2 : RADIX22FFT_CTRL1_2
    PORT MAP( clk => clk,
              reset => reset,
              dout_1_1_vld => dout_1_1_vld,
              dinXTwdl_2_1_vld => dinXTwdl_2_1_vld,
              rd_2_Addr => rd_2_Addr,  -- ufix8
              rd_2_Enb => rd_2_Enb,
              proc_2_enb => proc_2_enb,
              multiply_2_J => multiply_2_J
              );

  u_SDF2_2_1 : RADIX22FFT_SDF2_2
    PORT MAP( clk => clk,
              reset => reset,
              dout_1_1_re => dout_1_1_re,  -- sfix17_En13
              dout_1_1_im => dout_1_1_im,  -- sfix17_En13
              dout_1_1_vld => dout_1_1_vld,
              rd_2_Addr => rd_2_Addr,  -- ufix8
              rd_2_Enb => rd_2_Enb,
              proc_2_enb => proc_2_enb,
              multiply_2_J => multiply_2_J,
              dout_2_1_re => dout_2_1_re,  -- sfix18_En13
              dout_2_1_im => dout_2_1_im,  -- sfix18_En13
              dout_2_1_vld => dout_2_1_vld,
              dinXTwdl_2_1_vld => dinXTwdl_2_1_vld
              );

  u_twdlROM_3_1 : TWDLROM_3_1
    PORT MAP( clk => clk,
              reset => reset,
              dout_2_1_vld => dout_2_1_vld,
              twdl_3_1_re => twdl_3_1_re,  -- sfix16_En14
              twdl_3_1_im => twdl_3_1_im  -- sfix16_En14
              );

  u_CTRL1_3_2 : RADIX22FFT_CTRL1_3
    PORT MAP( clk => clk,
              reset => reset,
              dinXTwdl_3_1_vld => dinXTwdl_3_1_vld,
              dinXTwdl_3_1_vld_1 => dinXTwdl_3_1_vld,
              rd_3_Addr => rd_3_Addr,  -- ufix7
              rd_3_Enb => rd_3_Enb,
              proc_3_enb => proc_3_enb
              );

  u_SDF1_3_1 : RADIX22FFT_SDF1_3
    PORT MAP( clk => clk,
              reset => reset,
              din_3_1_re_dly => std_logic_vector(din_3_1_re_dly),  -- sfix18_En13
              din_3_1_im_dly => std_logic_vector(din_3_1_im_dly),  -- sfix18_En13
              din_3_vld_dly => din_3_vld_dly,
              rd_3_Addr => rd_3_Addr,  -- ufix7
              rd_3_Enb => rd_3_Enb,
              twdl_3_1_re => twdl_3_1_re,  -- sfix16_En14
              twdl_3_1_im => twdl_3_1_im,  -- sfix16_En14
              proc_3_enb => proc_3_enb,
              dout_3_1_re => dout_3_1_re,  -- sfix19_En13
              dout_3_1_im => dout_3_1_im,  -- sfix19_En13
              dout_3_1_vld => dout_3_1_vld,
              dinXTwdl_3_1_vld => dinXTwdl_3_1_vld
              );

  u_CTRL2_4_2 : RADIX22FFT_CTRL1_4
    PORT MAP( clk => clk,
              reset => reset,
              dout_3_1_vld => dout_3_1_vld,
              dinXTwdl_4_1_vld => dinXTwdl_4_1_vld,
              rd_4_Addr => rd_4_Addr,  -- ufix6
              rd_4_Enb => rd_4_Enb,
              proc_4_enb => proc_4_enb,
              multiply_4_J => multiply_4_J
              );

  u_SDF2_4_1 : RADIX22FFT_SDF2_4
    PORT MAP( clk => clk,
              reset => reset,
              dout_3_1_re => dout_3_1_re,  -- sfix19_En13
              dout_3_1_im => dout_3_1_im,  -- sfix19_En13
              dout_3_1_vld => dout_3_1_vld,
              rd_4_Addr => rd_4_Addr,  -- ufix6
              rd_4_Enb => rd_4_Enb,
              proc_4_enb => proc_4_enb,
              multiply_4_J => multiply_4_J,
              dout_4_1_re => dout_4_1_re,  -- sfix20_En13
              dout_4_1_im => dout_4_1_im,  -- sfix20_En13
              dout_4_1_vld => dout_4_1_vld,
              dinXTwdl_4_1_vld => dinXTwdl_4_1_vld
              );

  u_twdlROM_5_1 : TWDLROM_5_1
    PORT MAP( clk => clk,
              reset => reset,
              dout_4_1_vld => dout_4_1_vld,
              twdl_5_1_re => twdl_5_1_re,  -- sfix16_En14
              twdl_5_1_im => twdl_5_1_im  -- sfix16_En14
              );

  u_CTRL1_5_2 : RADIX22FFT_CTRL1_5
    PORT MAP( clk => clk,
              reset => reset,
              dinXTwdl_5_1_vld => dinXTwdl_5_1_vld,
              dinXTwdl_5_1_vld_1 => dinXTwdl_5_1_vld,
              rd_5_Addr => rd_5_Addr,  -- ufix5
              rd_5_Enb => rd_5_Enb,
              proc_5_enb => proc_5_enb
              );

  u_SDF1_5_1 : RADIX22FFT_SDF1_5
    PORT MAP( clk => clk,
              reset => reset,
              din_5_1_re_dly => std_logic_vector(din_5_1_re_dly),  -- sfix20_En13
              din_5_1_im_dly => std_logic_vector(din_5_1_im_dly),  -- sfix20_En13
              din_5_vld_dly => din_5_vld_dly,
              rd_5_Addr => rd_5_Addr,  -- ufix5
              rd_5_Enb => rd_5_Enb,
              twdl_5_1_re => twdl_5_1_re,  -- sfix16_En14
              twdl_5_1_im => twdl_5_1_im,  -- sfix16_En14
              proc_5_enb => proc_5_enb,
              dout_5_1_re => dout_5_1_re,  -- sfix21_En13
              dout_5_1_im => dout_5_1_im,  -- sfix21_En13
              dout_5_1_vld => dout_5_1_vld,
              dinXTwdl_5_1_vld => dinXTwdl_5_1_vld
              );

  u_CTRL2_6_2 : RADIX22FFT_CTRL1_6
    PORT MAP( clk => clk,
              reset => reset,
              dout_5_1_vld => dout_5_1_vld,
              dinXTwdl_6_1_vld => dinXTwdl_6_1_vld,
              rd_6_Addr => rd_6_Addr,  -- ufix4
              rd_6_Enb => rd_6_Enb,
              proc_6_enb => proc_6_enb,
              multiply_6_J => multiply_6_J
              );

  u_SDF2_6_1 : RADIX22FFT_SDF2_6
    PORT MAP( clk => clk,
              reset => reset,
              dout_5_1_re => dout_5_1_re,  -- sfix21_En13
              dout_5_1_im => dout_5_1_im,  -- sfix21_En13
              dout_5_1_vld => dout_5_1_vld,
              rd_6_Addr => rd_6_Addr,  -- ufix4
              rd_6_Enb => rd_6_Enb,
              proc_6_enb => proc_6_enb,
              multiply_6_J => multiply_6_J,
              dout_6_1_re => dout_6_1_re,  -- sfix22_En13
              dout_6_1_im => dout_6_1_im,  -- sfix22_En13
              dout_6_1_vld => dout_6_1_vld,
              dinXTwdl_6_1_vld => dinXTwdl_6_1_vld
              );

  u_twdlROM_7_1 : TWDLROM_7_1
    PORT MAP( clk => clk,
              reset => reset,
              dout_6_1_vld => dout_6_1_vld,
              twdl_7_1_re => twdl_7_1_re,  -- sfix16_En14
              twdl_7_1_im => twdl_7_1_im  -- sfix16_En14
              );

  u_CTRL1_7_2 : RADIX22FFT_CTRL1_7
    PORT MAP( clk => clk,
              reset => reset,
              dinXTwdl_7_1_vld => dinXTwdl_7_1_vld,
              dinXTwdl_7_1_vld_1 => dinXTwdl_7_1_vld,
              rd_7_Addr => rd_7_Addr,  -- ufix3
              rd_7_Enb => rd_7_Enb,
              proc_7_enb => proc_7_enb
              );

  u_SDF1_7_1 : RADIX22FFT_SDF1_7
    PORT MAP( clk => clk,
              reset => reset,
              din_7_1_re_dly => std_logic_vector(din_7_1_re_dly),  -- sfix22_En13
              din_7_1_im_dly => std_logic_vector(din_7_1_im_dly),  -- sfix22_En13
              din_7_vld_dly => din_7_vld_dly,
              rd_7_Addr => rd_7_Addr,  -- ufix3
              rd_7_Enb => rd_7_Enb,
              twdl_7_1_re => twdl_7_1_re,  -- sfix16_En14
              twdl_7_1_im => twdl_7_1_im,  -- sfix16_En14
              proc_7_enb => proc_7_enb,
              dout_7_1_re => dout_7_1_re,  -- sfix23_En13
              dout_7_1_im => dout_7_1_im,  -- sfix23_En13
              dout_7_1_vld => dout_7_1_vld,
              dinXTwdl_7_1_vld => dinXTwdl_7_1_vld
              );

  u_CTRL2_8_2 : RADIX22FFT_CTRL1_8
    PORT MAP( clk => clk,
              reset => reset,
              dout_7_1_vld => dout_7_1_vld,
              dinXTwdl_8_1_vld => dinXTwdl_8_1_vld,
              rd_8_Addr => rd_8_Addr,  -- ufix2
              rd_8_Enb => rd_8_Enb,
              proc_8_enb => proc_8_enb,
              multiply_8_J => multiply_8_J
              );

  u_SDF2_8_1 : RADIX22FFT_SDF2_8
    PORT MAP( clk => clk,
              reset => reset,
              dout_7_1_re => dout_7_1_re,  -- sfix23_En13
              dout_7_1_im => dout_7_1_im,  -- sfix23_En13
              dout_7_1_vld => dout_7_1_vld,
              rd_8_Addr => rd_8_Addr,  -- ufix2
              rd_8_Enb => rd_8_Enb,
              proc_8_enb => proc_8_enb,
              multiply_8_J => multiply_8_J,
              dout_8_1_re => dout_8_1_re,  -- sfix24_En13
              dout_8_1_im => dout_8_1_im,  -- sfix24_En13
              dout_8_1_vld => dout_8_1_vld,
              dinXTwdl_8_1_vld => dinXTwdl_8_1_vld
              );

  u_twdlROM_9_1 : TWDLROM_9_1
    PORT MAP( clk => clk,
              reset => reset,
              dout_8_1_vld => dout_8_1_vld,
              twdl_9_1_re => twdl_9_1_re,  -- sfix16_En14
              twdl_9_1_im => twdl_9_1_im  -- sfix16_En14
              );

  u_CTRL1_9_2 : RADIX22FFT_CTRL1_9
    PORT MAP( clk => clk,
              reset => reset,
              dinXTwdl_9_1_vld => dinXTwdl_9_1_vld,
              dinXTwdl_9_1_vld_1 => dinXTwdl_9_1_vld,
              rd_9_Addr => rd_9_Addr,  -- ufix1
              rd_9_Enb => rd_9_Enb,
              proc_9_enb => proc_9_enb
              );

  u_SDF1_9_1 : RADIX22FFT_SDF1_9
    PORT MAP( clk => clk,
              reset => reset,
              din_9_1_re_dly => std_logic_vector(din_9_1_re_dly),  -- sfix24_En13
              din_9_1_im_dly => std_logic_vector(din_9_1_im_dly),  -- sfix24_En13
              din_9_vld_dly => din_9_vld_dly,
              rd_9_Addr => rd_9_Addr,  -- ufix1
              rd_9_Enb => rd_9_Enb,
              twdl_9_1_re => twdl_9_1_re,  -- sfix16_En14
              twdl_9_1_im => twdl_9_1_im,  -- sfix16_En14
              proc_9_enb => proc_9_enb,
              dout_9_1_re => dout_9_1_re,  -- sfix25_En13
              dout_9_1_im => dout_9_1_im,  -- sfix25_En13
              dout_9_1_vld => dout_9_1_vld,
              dinXTwdl_9_1_vld => dinXTwdl_9_1_vld
              );

  u_CTRL2_10_2 : RADIX22FFT_CTRL1_10
    PORT MAP( clk => clk,
              reset => reset,
              dout_9_1_vld => dout_9_1_vld,
              dinXTwdl_10_1_vld => dinXTwdl_10_1_vld,
              rd_10_Addr => rd_10_Addr,
              rd_10_Enb => rd_10_Enb,
              proc_10_enb => proc_10_enb,
              multiply_10_J => multiply_10_J
              );

  u_SDF2_10_1 : RADIX22FFT_SDF2_10
    PORT MAP( clk => clk,
              reset => reset,
              dout_9_1_re => dout_9_1_re,  -- sfix25_En13
              dout_9_1_im => dout_9_1_im,  -- sfix25_En13
              dout_9_1_vld => dout_9_1_vld,
              rd_10_Addr => rd_10_Addr,
              rd_10_Enb => rd_10_Enb,
              proc_10_enb => proc_10_enb,
              multiply_10_J => multiply_10_J,
              dout_10_1_re => dout_10_1_re,  -- sfix26_En13
              dout_10_1_im => dout_10_1_im,  -- sfix26_En13
              dout_10_1_vld => dout_10_1_vld,
              dinXTwdl_10_1_vld => dinXTwdl_10_1_vld
              );

  u_SDF1_1_2 : RADIX22FFT_SDF1_1_block
    PORT MAP( clk => clk,
              reset => reset,
              din_1_2_re_dly => std_logic_vector(din_1_2_re_dly),  -- sfix16_En13
              din_1_2_im_dly => std_logic_vector(din_1_2_im_dly),  -- sfix16_En13
              din_1_vld_dly => din_1_vld_dly,
              rd_1_Addr => rd_1_Addr,  -- ufix9
              rd_1_Enb => rd_1_Enb,
              proc_1_enb => proc_1_enb,
              dout_1_2_re => dout_1_2_re,  -- sfix17_En13
              dout_1_2_im => dout_1_2_im  -- sfix17_En13
              );

  u_SDF2_2_2 : RADIX22FFT_SDF2_2_block
    PORT MAP( clk => clk,
              reset => reset,
              dout_1_2_re => dout_1_2_re,  -- sfix17_En13
              dout_1_2_im => dout_1_2_im,  -- sfix17_En13
              dout_1_1_vld => dout_1_1_vld,
              rd_2_Addr => rd_2_Addr,  -- ufix8
              rd_2_Enb => rd_2_Enb,
              proc_2_enb => proc_2_enb,
              multiply_2_J => multiply_2_J,
              dout_2_2_re => dout_2_2_re,  -- sfix18_En13
              dout_2_2_im => dout_2_2_im  -- sfix18_En13
              );

  u_twdlROM_3_2 : TWDLROM_3_2
    PORT MAP( clk => clk,
              reset => reset,
              dout_2_1_vld => dout_2_1_vld,
              twdl_3_2_re => twdl_3_2_re,  -- sfix16_En14
              twdl_3_2_im => twdl_3_2_im  -- sfix16_En14
              );

  u_SDF1_3_2 : RADIX22FFT_SDF1_3_block
    PORT MAP( clk => clk,
              reset => reset,
              din_3_2_re_dly => std_logic_vector(din_3_2_re_dly),  -- sfix18_En13
              din_3_2_im_dly => std_logic_vector(din_3_2_im_dly),  -- sfix18_En13
              din_3_vld_dly => din_3_vld_dly,
              rd_3_Addr => rd_3_Addr,  -- ufix7
              rd_3_Enb => rd_3_Enb,
              twdl_3_2_re => twdl_3_2_re,  -- sfix16_En14
              twdl_3_2_im => twdl_3_2_im,  -- sfix16_En14
              proc_3_enb => proc_3_enb,
              dout_3_2_re => dout_3_2_re,  -- sfix19_En13
              dout_3_2_im => dout_3_2_im  -- sfix19_En13
              );

  u_SDF2_4_2 : RADIX22FFT_SDF2_4_block
    PORT MAP( clk => clk,
              reset => reset,
              dout_3_2_re => dout_3_2_re,  -- sfix19_En13
              dout_3_2_im => dout_3_2_im,  -- sfix19_En13
              dout_3_1_vld => dout_3_1_vld,
              rd_4_Addr => rd_4_Addr,  -- ufix6
              rd_4_Enb => rd_4_Enb,
              proc_4_enb => proc_4_enb,
              multiply_4_J => multiply_4_J,
              dout_4_2_re => dout_4_2_re,  -- sfix20_En13
              dout_4_2_im => dout_4_2_im  -- sfix20_En13
              );

  u_twdlROM_5_2 : TWDLROM_5_2
    PORT MAP( clk => clk,
              reset => reset,
              dout_4_1_vld => dout_4_1_vld,
              twdl_5_2_re => twdl_5_2_re,  -- sfix16_En14
              twdl_5_2_im => twdl_5_2_im  -- sfix16_En14
              );

  u_SDF1_5_2 : RADIX22FFT_SDF1_5_block
    PORT MAP( clk => clk,
              reset => reset,
              din_5_2_re_dly => std_logic_vector(din_5_2_re_dly),  -- sfix20_En13
              din_5_2_im_dly => std_logic_vector(din_5_2_im_dly),  -- sfix20_En13
              din_5_vld_dly => din_5_vld_dly,
              rd_5_Addr => rd_5_Addr,  -- ufix5
              rd_5_Enb => rd_5_Enb,
              twdl_5_2_re => twdl_5_2_re,  -- sfix16_En14
              twdl_5_2_im => twdl_5_2_im,  -- sfix16_En14
              proc_5_enb => proc_5_enb,
              dout_5_2_re => dout_5_2_re,  -- sfix21_En13
              dout_5_2_im => dout_5_2_im  -- sfix21_En13
              );

  u_SDF2_6_2 : RADIX22FFT_SDF2_6_block
    PORT MAP( clk => clk,
              reset => reset,
              dout_5_2_re => dout_5_2_re,  -- sfix21_En13
              dout_5_2_im => dout_5_2_im,  -- sfix21_En13
              dout_5_1_vld => dout_5_1_vld,
              rd_6_Addr => rd_6_Addr,  -- ufix4
              rd_6_Enb => rd_6_Enb,
              proc_6_enb => proc_6_enb,
              multiply_6_J => multiply_6_J,
              dout_6_2_re => dout_6_2_re,  -- sfix22_En13
              dout_6_2_im => dout_6_2_im  -- sfix22_En13
              );

  u_twdlROM_7_2 : TWDLROM_7_2
    PORT MAP( clk => clk,
              reset => reset,
              dout_6_1_vld => dout_6_1_vld,
              twdl_7_2_re => twdl_7_2_re,  -- sfix16_En14
              twdl_7_2_im => twdl_7_2_im  -- sfix16_En14
              );

  u_SDF1_7_2 : RADIX22FFT_SDF1_7_block
    PORT MAP( clk => clk,
              reset => reset,
              din_7_2_re_dly => std_logic_vector(din_7_2_re_dly),  -- sfix22_En13
              din_7_2_im_dly => std_logic_vector(din_7_2_im_dly),  -- sfix22_En13
              din_7_vld_dly => din_7_vld_dly,
              rd_7_Addr => rd_7_Addr,  -- ufix3
              rd_7_Enb => rd_7_Enb,
              twdl_7_2_re => twdl_7_2_re,  -- sfix16_En14
              twdl_7_2_im => twdl_7_2_im,  -- sfix16_En14
              proc_7_enb => proc_7_enb,
              dout_7_2_re => dout_7_2_re,  -- sfix23_En13
              dout_7_2_im => dout_7_2_im  -- sfix23_En13
              );

  u_SDF2_8_2 : RADIX22FFT_SDF2_8_block
    PORT MAP( clk => clk,
              reset => reset,
              dout_7_2_re => dout_7_2_re,  -- sfix23_En13
              dout_7_2_im => dout_7_2_im,  -- sfix23_En13
              dout_7_1_vld => dout_7_1_vld,
              rd_8_Addr => rd_8_Addr,  -- ufix2
              rd_8_Enb => rd_8_Enb,
              proc_8_enb => proc_8_enb,
              multiply_8_J => multiply_8_J,
              dout_8_2_re => dout_8_2_re,  -- sfix24_En13
              dout_8_2_im => dout_8_2_im  -- sfix24_En13
              );

  u_twdlROM_9_2 : TWDLROM_9_2
    PORT MAP( clk => clk,
              reset => reset,
              dout_8_1_vld => dout_8_1_vld,
              twdl_9_2_re => twdl_9_2_re,  -- sfix16_En14
              twdl_9_2_im => twdl_9_2_im  -- sfix16_En14
              );

  u_SDF1_9_2 : RADIX22FFT_SDF1_9_block
    PORT MAP( clk => clk,
              reset => reset,
              din_9_2_re_dly => std_logic_vector(din_9_2_re_dly),  -- sfix24_En13
              din_9_2_im_dly => std_logic_vector(din_9_2_im_dly),  -- sfix24_En13
              din_9_vld_dly => din_9_vld_dly,
              rd_9_Addr => rd_9_Addr,  -- ufix1
              rd_9_Enb => rd_9_Enb,
              twdl_9_2_re => twdl_9_2_re,  -- sfix16_En14
              twdl_9_2_im => twdl_9_2_im,  -- sfix16_En14
              proc_9_enb => proc_9_enb,
              dout_9_2_re => dout_9_2_re,  -- sfix25_En13
              dout_9_2_im => dout_9_2_im  -- sfix25_En13
              );

  u_SDF2_10_2 : RADIX22FFT_SDF2_10_block
    PORT MAP( clk => clk,
              reset => reset,
              dout_9_2_re => dout_9_2_re,  -- sfix25_En13
              dout_9_2_im => dout_9_2_im,  -- sfix25_En13
              dout_9_1_vld => dout_9_1_vld,
              rd_10_Addr => rd_10_Addr,
              rd_10_Enb => rd_10_Enb,
              proc_10_enb => proc_10_enb,
              multiply_10_J => multiply_10_J,
              dout_10_2_re => dout_10_2_re,  -- sfix26_En13
              dout_10_2_im => dout_10_2_im  -- sfix26_En13
              );

  u_twdlROM_11_2 : TWDLROM_11_2
    PORT MAP( clk => clk,
              reset => reset,
              dout_10_1_vld => dout_10_1_vld,
              twdl_11_2_re => twdl_11_2_re,  -- sfix16_En14
              twdl_11_2_im => twdl_11_2_im  -- sfix16_En14
              );

  u_SDNF1_11_1 : RADIX22FFT_SDNF1_11
    PORT MAP( clk => clk,
              reset => reset,
              dout_10_1_re => dout_10_1_re,  -- sfix26_En13
              dout_10_1_im => dout_10_1_im,  -- sfix26_En13
              dout_10_2_re => dout_10_2_re,  -- sfix26_En13
              dout_10_2_im => dout_10_2_im,  -- sfix26_En13
              dout_10_1_vld => dout_10_1_vld,
              twdl_11_2_re => twdl_11_2_re,  -- sfix16_En14
              twdl_11_2_im => twdl_11_2_im,  -- sfix16_En14
              dout_1_re => dout_re_v(0),  -- sfix27_En13
              dout_1_im => dout_im_v(0),  -- sfix27_En13
              dout_2_re => dout_re_v(1),  -- sfix27_En13
              dout_2_im => dout_im_v(1),  -- sfix27_En13
              dout_2_vld => dout_2_vld
              );

  u_NaturalOrder_Stage : RADIX22FFT_bitNatural_1
    PORT MAP( clk => clk,
              reset => reset,
              dout_re_v => dout_re_v,  -- sfix27_En13 [2]
              dout_im_v => dout_im_v,  -- sfix27_En13 [2]
              dout_2_vld => dout_2_vld,
              dMem_re1 => dMem_re_v(0),  -- sfix27_En13
              dMem_im1 => dMem_im_v(0),  -- sfix27_En13
              dMem_vld1 => dMem_vld1
              );

  u_NaturalOrder_Stage_1 : RADIX22FFT_bitNatural_2
    PORT MAP( clk => clk,
              reset => reset,
              dout_re_v => dout_re_v,  -- sfix27_En13 [2]
              dout_im_v => dout_im_v,  -- sfix27_En13 [2]
              dout_2_vld => dout_2_vld,
              dMem_re2 => dMem_re_v(1),  -- sfix27_En13
              dMem_im2 => dMem_im_v(1),  -- sfix27_En13
              startOutO => startOutO,
              endOutO => endOutO
              );

  u_NaturalOrder_OutMux : RADIX22FFT_bitNaturalMux_1
    PORT MAP( clk => clk,
              reset => reset,
              dMem_re_v => dMem_re_v,  -- sfix27_En13 [2]
              dMem_im_v => dMem_im_v,  -- sfix27_En13 [2]
              dMem_vld1 => dMem_vld1,
              dMux_re1 => dataOut_re_tmp(0),  -- sfix27_En13
              dMux_im1 => dataOut_im_tmp(0),  -- sfix27_En13
              dMux_vld1 => dMux_vld1
              );

  u_NaturalOrder_OutMux_1 : RADIX22FFT_bitNaturalMux_2
    PORT MAP( clk => clk,
              reset => reset,
              dMem_re_v => dMem_re_v,  -- sfix27_En13 [2]
              dMem_im_v => dMem_im_v,  -- sfix27_En13 [2]
              dMem_vld1 => dMem_vld1,
              dMux_re2 => dataOut_re_tmp(1),  -- sfix27_En13
              dMux_im2 => dataOut_im_tmp(1)  -- sfix27_En13
              );

  softReset <= '0';

  dataIn_0_re <= signed(dataIn_re(0));

  dataIn_0_im <= signed(dataIn_im(0));

  intdelay_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      intdelay_reg <= (OTHERS => to_signed(16#0000#, 16));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF softReset = '1' THEN
        intdelay_reg <= (OTHERS => to_signed(16#0000#, 16));
      ELSE 
        intdelay_reg(0) <= dataIn_0_re;
        intdelay_reg(1 TO 2) <= intdelay_reg(0 TO 1);
      END IF;
    END IF;
  END PROCESS intdelay_process;

  din_1_1_re_dly <= intdelay_reg(2);

  intdelay_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      intdelay_reg_1 <= (OTHERS => to_signed(16#0000#, 16));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF softReset = '1' THEN
        intdelay_reg_1 <= (OTHERS => to_signed(16#0000#, 16));
      ELSE 
        intdelay_reg_1(0) <= dataIn_0_im;
        intdelay_reg_1(1 TO 2) <= intdelay_reg_1(0 TO 1);
      END IF;
    END IF;
  END PROCESS intdelay_1_process;

  din_1_1_im_dly <= intdelay_reg_1(2);

  intdelay_2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      intdelay_reg_2 <= (OTHERS => '0');
    ELSIF clk'EVENT AND clk = '1' THEN
      IF softReset = '1' THEN
        intdelay_reg_2 <= (OTHERS => '0');
      ELSE 
        intdelay_reg_2(0) <= validIn;
        intdelay_reg_2(1 TO 2) <= intdelay_reg_2(0 TO 1);
      END IF;
    END IF;
  END PROCESS intdelay_2_process;

  din_1_vld_dly <= intdelay_reg_2(2);

  dout_2_1_re_signed <= signed(dout_2_1_re);

  dout_2_1_im_signed <= signed(dout_2_1_im);

  intdelay_3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      intdelay_reg_3 <= (OTHERS => to_signed(16#00000#, 18));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF softReset = '1' THEN
        intdelay_reg_3 <= (OTHERS => to_signed(16#00000#, 18));
      ELSE 
        intdelay_reg_3(0) <= dout_2_1_re_signed;
        intdelay_reg_3(1 TO 2) <= intdelay_reg_3(0 TO 1);
      END IF;
    END IF;
  END PROCESS intdelay_3_process;

  din_3_1_re_dly <= intdelay_reg_3(2);

  intdelay_4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      intdelay_reg_4 <= (OTHERS => to_signed(16#00000#, 18));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF softReset = '1' THEN
        intdelay_reg_4 <= (OTHERS => to_signed(16#00000#, 18));
      ELSE 
        intdelay_reg_4(0) <= dout_2_1_im_signed;
        intdelay_reg_4(1 TO 2) <= intdelay_reg_4(0 TO 1);
      END IF;
    END IF;
  END PROCESS intdelay_4_process;

  din_3_1_im_dly <= intdelay_reg_4(2);

  intdelay_5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      intdelay_reg_5 <= (OTHERS => '0');
    ELSIF clk'EVENT AND clk = '1' THEN
      IF softReset = '1' THEN
        intdelay_reg_5 <= (OTHERS => '0');
      ELSE 
        intdelay_reg_5(0) <= dout_2_1_vld;
        intdelay_reg_5(1 TO 2) <= intdelay_reg_5(0 TO 1);
      END IF;
    END IF;
  END PROCESS intdelay_5_process;

  din_3_vld_dly <= intdelay_reg_5(2);

  dout_4_1_re_signed <= signed(dout_4_1_re);

  dout_4_1_im_signed <= signed(dout_4_1_im);

  intdelay_6_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      intdelay_reg_6 <= (OTHERS => to_signed(16#00000#, 20));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF softReset = '1' THEN
        intdelay_reg_6 <= (OTHERS => to_signed(16#00000#, 20));
      ELSE 
        intdelay_reg_6(0) <= dout_4_1_re_signed;
        intdelay_reg_6(1 TO 2) <= intdelay_reg_6(0 TO 1);
      END IF;
    END IF;
  END PROCESS intdelay_6_process;

  din_5_1_re_dly <= intdelay_reg_6(2);

  intdelay_7_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      intdelay_reg_7 <= (OTHERS => to_signed(16#00000#, 20));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF softReset = '1' THEN
        intdelay_reg_7 <= (OTHERS => to_signed(16#00000#, 20));
      ELSE 
        intdelay_reg_7(0) <= dout_4_1_im_signed;
        intdelay_reg_7(1 TO 2) <= intdelay_reg_7(0 TO 1);
      END IF;
    END IF;
  END PROCESS intdelay_7_process;

  din_5_1_im_dly <= intdelay_reg_7(2);

  intdelay_8_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      intdelay_reg_8 <= (OTHERS => '0');
    ELSIF clk'EVENT AND clk = '1' THEN
      IF softReset = '1' THEN
        intdelay_reg_8 <= (OTHERS => '0');
      ELSE 
        intdelay_reg_8(0) <= dout_4_1_vld;
        intdelay_reg_8(1 TO 2) <= intdelay_reg_8(0 TO 1);
      END IF;
    END IF;
  END PROCESS intdelay_8_process;

  din_5_vld_dly <= intdelay_reg_8(2);

  dout_6_1_re_signed <= signed(dout_6_1_re);

  dout_6_1_im_signed <= signed(dout_6_1_im);

  intdelay_9_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      intdelay_reg_9 <= (OTHERS => to_signed(16#000000#, 22));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF softReset = '1' THEN
        intdelay_reg_9 <= (OTHERS => to_signed(16#000000#, 22));
      ELSE 
        intdelay_reg_9(0) <= dout_6_1_re_signed;
        intdelay_reg_9(1 TO 2) <= intdelay_reg_9(0 TO 1);
      END IF;
    END IF;
  END PROCESS intdelay_9_process;

  din_7_1_re_dly <= intdelay_reg_9(2);

  intdelay_10_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      intdelay_reg_10 <= (OTHERS => to_signed(16#000000#, 22));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF softReset = '1' THEN
        intdelay_reg_10 <= (OTHERS => to_signed(16#000000#, 22));
      ELSE 
        intdelay_reg_10(0) <= dout_6_1_im_signed;
        intdelay_reg_10(1 TO 2) <= intdelay_reg_10(0 TO 1);
      END IF;
    END IF;
  END PROCESS intdelay_10_process;

  din_7_1_im_dly <= intdelay_reg_10(2);

  intdelay_11_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      intdelay_reg_11 <= (OTHERS => '0');
    ELSIF clk'EVENT AND clk = '1' THEN
      IF softReset = '1' THEN
        intdelay_reg_11 <= (OTHERS => '0');
      ELSE 
        intdelay_reg_11(0) <= dout_6_1_vld;
        intdelay_reg_11(1 TO 2) <= intdelay_reg_11(0 TO 1);
      END IF;
    END IF;
  END PROCESS intdelay_11_process;

  din_7_vld_dly <= intdelay_reg_11(2);

  dout_8_1_re_signed <= signed(dout_8_1_re);

  dout_8_1_im_signed <= signed(dout_8_1_im);

  intdelay_12_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      intdelay_reg_12 <= (OTHERS => to_signed(16#000000#, 24));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF softReset = '1' THEN
        intdelay_reg_12 <= (OTHERS => to_signed(16#000000#, 24));
      ELSE 
        intdelay_reg_12(0) <= dout_8_1_re_signed;
        intdelay_reg_12(1 TO 2) <= intdelay_reg_12(0 TO 1);
      END IF;
    END IF;
  END PROCESS intdelay_12_process;

  din_9_1_re_dly <= intdelay_reg_12(2);

  intdelay_13_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      intdelay_reg_13 <= (OTHERS => to_signed(16#000000#, 24));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF softReset = '1' THEN
        intdelay_reg_13 <= (OTHERS => to_signed(16#000000#, 24));
      ELSE 
        intdelay_reg_13(0) <= dout_8_1_im_signed;
        intdelay_reg_13(1 TO 2) <= intdelay_reg_13(0 TO 1);
      END IF;
    END IF;
  END PROCESS intdelay_13_process;

  din_9_1_im_dly <= intdelay_reg_13(2);

  intdelay_14_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      intdelay_reg_14 <= (OTHERS => '0');
    ELSIF clk'EVENT AND clk = '1' THEN
      IF softReset = '1' THEN
        intdelay_reg_14 <= (OTHERS => '0');
      ELSE 
        intdelay_reg_14(0) <= dout_8_1_vld;
        intdelay_reg_14(1 TO 2) <= intdelay_reg_14(0 TO 1);
      END IF;
    END IF;
  END PROCESS intdelay_14_process;

  din_9_vld_dly <= intdelay_reg_14(2);

  dataIn_1_re <= signed(dataIn_re(1));

  dataIn_1_im <= signed(dataIn_im(1));

  intdelay_15_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      intdelay_reg_15 <= (OTHERS => to_signed(16#0000#, 16));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF softReset = '1' THEN
        intdelay_reg_15 <= (OTHERS => to_signed(16#0000#, 16));
      ELSE 
        intdelay_reg_15(0) <= dataIn_1_re;
        intdelay_reg_15(1 TO 2) <= intdelay_reg_15(0 TO 1);
      END IF;
    END IF;
  END PROCESS intdelay_15_process;

  din_1_2_re_dly <= intdelay_reg_15(2);

  intdelay_16_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      intdelay_reg_16 <= (OTHERS => to_signed(16#0000#, 16));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF softReset = '1' THEN
        intdelay_reg_16 <= (OTHERS => to_signed(16#0000#, 16));
      ELSE 
        intdelay_reg_16(0) <= dataIn_1_im;
        intdelay_reg_16(1 TO 2) <= intdelay_reg_16(0 TO 1);
      END IF;
    END IF;
  END PROCESS intdelay_16_process;

  din_1_2_im_dly <= intdelay_reg_16(2);

  dout_2_2_re_signed <= signed(dout_2_2_re);

  dout_2_2_im_signed <= signed(dout_2_2_im);

  intdelay_17_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      intdelay_reg_17 <= (OTHERS => to_signed(16#00000#, 18));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF softReset = '1' THEN
        intdelay_reg_17 <= (OTHERS => to_signed(16#00000#, 18));
      ELSE 
        intdelay_reg_17(0) <= dout_2_2_re_signed;
        intdelay_reg_17(1 TO 2) <= intdelay_reg_17(0 TO 1);
      END IF;
    END IF;
  END PROCESS intdelay_17_process;

  din_3_2_re_dly <= intdelay_reg_17(2);

  intdelay_18_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      intdelay_reg_18 <= (OTHERS => to_signed(16#00000#, 18));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF softReset = '1' THEN
        intdelay_reg_18 <= (OTHERS => to_signed(16#00000#, 18));
      ELSE 
        intdelay_reg_18(0) <= dout_2_2_im_signed;
        intdelay_reg_18(1 TO 2) <= intdelay_reg_18(0 TO 1);
      END IF;
    END IF;
  END PROCESS intdelay_18_process;

  din_3_2_im_dly <= intdelay_reg_18(2);

  dout_4_2_re_signed <= signed(dout_4_2_re);

  dout_4_2_im_signed <= signed(dout_4_2_im);

  intdelay_19_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      intdelay_reg_19 <= (OTHERS => to_signed(16#00000#, 20));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF softReset = '1' THEN
        intdelay_reg_19 <= (OTHERS => to_signed(16#00000#, 20));
      ELSE 
        intdelay_reg_19(0) <= dout_4_2_re_signed;
        intdelay_reg_19(1 TO 2) <= intdelay_reg_19(0 TO 1);
      END IF;
    END IF;
  END PROCESS intdelay_19_process;

  din_5_2_re_dly <= intdelay_reg_19(2);

  intdelay_20_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      intdelay_reg_20 <= (OTHERS => to_signed(16#00000#, 20));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF softReset = '1' THEN
        intdelay_reg_20 <= (OTHERS => to_signed(16#00000#, 20));
      ELSE 
        intdelay_reg_20(0) <= dout_4_2_im_signed;
        intdelay_reg_20(1 TO 2) <= intdelay_reg_20(0 TO 1);
      END IF;
    END IF;
  END PROCESS intdelay_20_process;

  din_5_2_im_dly <= intdelay_reg_20(2);

  dout_6_2_re_signed <= signed(dout_6_2_re);

  dout_6_2_im_signed <= signed(dout_6_2_im);

  intdelay_21_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      intdelay_reg_21 <= (OTHERS => to_signed(16#000000#, 22));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF softReset = '1' THEN
        intdelay_reg_21 <= (OTHERS => to_signed(16#000000#, 22));
      ELSE 
        intdelay_reg_21(0) <= dout_6_2_re_signed;
        intdelay_reg_21(1 TO 2) <= intdelay_reg_21(0 TO 1);
      END IF;
    END IF;
  END PROCESS intdelay_21_process;

  din_7_2_re_dly <= intdelay_reg_21(2);

  intdelay_22_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      intdelay_reg_22 <= (OTHERS => to_signed(16#000000#, 22));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF softReset = '1' THEN
        intdelay_reg_22 <= (OTHERS => to_signed(16#000000#, 22));
      ELSE 
        intdelay_reg_22(0) <= dout_6_2_im_signed;
        intdelay_reg_22(1 TO 2) <= intdelay_reg_22(0 TO 1);
      END IF;
    END IF;
  END PROCESS intdelay_22_process;

  din_7_2_im_dly <= intdelay_reg_22(2);

  dout_8_2_re_signed <= signed(dout_8_2_re);

  dout_8_2_im_signed <= signed(dout_8_2_im);

  intdelay_23_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      intdelay_reg_23 <= (OTHERS => to_signed(16#000000#, 24));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF softReset = '1' THEN
        intdelay_reg_23 <= (OTHERS => to_signed(16#000000#, 24));
      ELSE 
        intdelay_reg_23(0) <= dout_8_2_re_signed;
        intdelay_reg_23(1 TO 2) <= intdelay_reg_23(0 TO 1);
      END IF;
    END IF;
  END PROCESS intdelay_23_process;

  din_9_2_re_dly <= intdelay_reg_23(2);

  intdelay_24_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      intdelay_reg_24 <= (OTHERS => to_signed(16#000000#, 24));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF softReset = '1' THEN
        intdelay_reg_24 <= (OTHERS => to_signed(16#000000#, 24));
      ELSE 
        intdelay_reg_24(0) <= dout_8_2_im_signed;
        intdelay_reg_24(1 TO 2) <= intdelay_reg_24(0 TO 1);
      END IF;
    END IF;
  END PROCESS intdelay_24_process;

  din_9_2_im_dly <= intdelay_reg_24(2);







  intdelay_25_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      intdelay_reg_25 <= (OTHERS => '0');
    ELSIF clk'EVENT AND clk = '1' THEN
      IF softReset = '1' THEN
        intdelay_reg_25 <= (OTHERS => '0');
      ELSE 
        intdelay_reg_25(0) <= startOutO;
        intdelay_reg_25(1) <= intdelay_reg_25(0);
      END IF;
    END IF;
  END PROCESS intdelay_25_process;

  startOutS <= intdelay_reg_25(1);

  intdelay_26_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      intdelay_reg_26 <= (OTHERS => '0');
    ELSIF clk'EVENT AND clk = '1' THEN
      IF softReset = '1' THEN
        intdelay_reg_26 <= (OTHERS => '0');
      ELSE 
        intdelay_reg_26(0) <= endOutO;
        intdelay_reg_26(1) <= intdelay_reg_26(0);
      END IF;
    END IF;
  END PROCESS intdelay_26_process;

  endOutS <= intdelay_reg_26(1);

  dataOut_re <= dataOut_re_tmp;

  dataOut_im <= dataOut_im_tmp;

  startOut <= startOutS;

  endOut <= endOutS;

  validOut <= dMux_vld1;

END rtl;


// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="nrPDSCH_nrPDSCH,hls_ip_2022_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu28dr-ffvg1517-2-e,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=3.087000,HLS_SYN_LAT=18,HLS_SYN_TPT=16,HLS_SYN_MEM=4,HLS_SYN_DSP=0,HLS_SYN_FF=370,HLS_SYN_LUT=3080,HLS_VERSION=2022_2}" *)

module nrPDSCH (
        ap_clk,
        ap_rst_n,
        bitsIn_TDATA,
        bitsIn_TVALID,
        bitsIn_TREADY,
        bitsIn_TKEEP,
        bitsIn_TSTRB,
        bitsIn_TLAST,
        symbolsOut_TDATA,
        symbolsOut_TVALID,
        symbolsOut_TREADY,
        symbolsOut_TKEEP,
        symbolsOut_TSTRB,
        symbolsOut_TLAST,
        s_axi_BUS_A_AWVALID,
        s_axi_BUS_A_AWREADY,
        s_axi_BUS_A_AWADDR,
        s_axi_BUS_A_WVALID,
        s_axi_BUS_A_WREADY,
        s_axi_BUS_A_WDATA,
        s_axi_BUS_A_WSTRB,
        s_axi_BUS_A_ARVALID,
        s_axi_BUS_A_ARREADY,
        s_axi_BUS_A_ARADDR,
        s_axi_BUS_A_RVALID,
        s_axi_BUS_A_RREADY,
        s_axi_BUS_A_RDATA,
        s_axi_BUS_A_RRESP,
        s_axi_BUS_A_BVALID,
        s_axi_BUS_A_BREADY,
        s_axi_BUS_A_BRESP
);

parameter    ap_ST_fsm_pp0_stage0 = 16'd1;
parameter    ap_ST_fsm_pp0_stage1 = 16'd2;
parameter    ap_ST_fsm_pp0_stage2 = 16'd4;
parameter    ap_ST_fsm_pp0_stage3 = 16'd8;
parameter    ap_ST_fsm_pp0_stage4 = 16'd16;
parameter    ap_ST_fsm_pp0_stage5 = 16'd32;
parameter    ap_ST_fsm_pp0_stage6 = 16'd64;
parameter    ap_ST_fsm_pp0_stage7 = 16'd128;
parameter    ap_ST_fsm_pp0_stage8 = 16'd256;
parameter    ap_ST_fsm_pp0_stage9 = 16'd512;
parameter    ap_ST_fsm_pp0_stage10 = 16'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 16'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 16'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 16'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 16'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 16'd32768;
parameter    C_S_AXI_BUS_A_DATA_WIDTH = 32;
parameter    C_S_AXI_BUS_A_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_BUS_A_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input  [71:0] bitsIn_TDATA;
input   bitsIn_TVALID;
output   bitsIn_TREADY;
input  [8:0] bitsIn_TKEEP;
input  [8:0] bitsIn_TSTRB;
input  [0:0] bitsIn_TLAST;
output  [71:0] symbolsOut_TDATA;
output   symbolsOut_TVALID;
input   symbolsOut_TREADY;
output  [8:0] symbolsOut_TKEEP;
output  [8:0] symbolsOut_TSTRB;
output  [0:0] symbolsOut_TLAST;
input   s_axi_BUS_A_AWVALID;
output   s_axi_BUS_A_AWREADY;
input  [C_S_AXI_BUS_A_ADDR_WIDTH - 1:0] s_axi_BUS_A_AWADDR;
input   s_axi_BUS_A_WVALID;
output   s_axi_BUS_A_WREADY;
input  [C_S_AXI_BUS_A_DATA_WIDTH - 1:0] s_axi_BUS_A_WDATA;
input  [C_S_AXI_BUS_A_WSTRB_WIDTH - 1:0] s_axi_BUS_A_WSTRB;
input   s_axi_BUS_A_ARVALID;
output   s_axi_BUS_A_ARREADY;
input  [C_S_AXI_BUS_A_ADDR_WIDTH - 1:0] s_axi_BUS_A_ARADDR;
output   s_axi_BUS_A_RVALID;
input   s_axi_BUS_A_RREADY;
output  [C_S_AXI_BUS_A_DATA_WIDTH - 1:0] s_axi_BUS_A_RDATA;
output  [1:0] s_axi_BUS_A_RRESP;
output   s_axi_BUS_A_BVALID;
input   s_axi_BUS_A_BREADY;
output  [1:0] s_axi_BUS_A_BRESP;

 reg    ap_rst_n_inv;
wire   [3:0] modOrder;
reg   [3:0] modOrder_0_data_reg;
reg    modOrder_0_vld_reg;
reg    modOrder_0_ack_out;
wire   [11:0] nBitsdivSSRbits;
reg   [11:0] nBitsdivSSRbits_0_data_reg;
reg    nBitsdivSSRbits_0_vld_reg;
reg    nBitsdivSSRbits_0_ack_out;
wire   [5:0] leftBits;
reg   [5:0] leftBits_0_data_reg;
reg    leftBits_0_vld_reg;
reg    leftBits_0_ack_out;
reg   [0:0] b0_disable_V;
reg   [31:0] b0_loop_i;
reg   [0:0] b0_enable_V;
wire   [9:0] scramblerSeq_V_address0;
reg    scramblerSeq_V_ce0;
wire   [63:0] scramblerSeq_V_q0;
reg    bitsIn_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [15:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_pp0_stage0;
reg    symbolsOut_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
reg   [0:0] icmp_ln84_reg_4747;
reg   [0:0] empty_21_reg_441;
reg   [0:0] and_ln154_reg_4785;
reg   [0:0] cmp_i_i51_reg_4781;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
reg   [0:0] and_ln154_1_reg_4789;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
reg   [0:0] and_ln154_2_reg_4793;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
reg   [0:0] and_ln154_3_reg_4797;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
reg   [0:0] and_ln154_4_reg_4801;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7;
reg   [0:0] and_ln154_5_reg_4805;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8;
reg   [0:0] and_ln154_6_reg_4809;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9;
reg   [0:0] and_ln154_7_reg_4813;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10;
reg   [0:0] and_ln154_8_reg_4817;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_pp0_stage11;
reg   [0:0] and_ln154_9_reg_4821;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_pp0_stage12;
reg   [0:0] and_ln154_10_reg_4825;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_pp0_stage13;
reg   [0:0] and_ln154_11_reg_4829;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_pp0_stage14;
reg   [0:0] and_ln154_12_reg_4833;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_pp0_stage15;
reg   [0:0] and_ln154_13_reg_4837;
reg    ap_enable_reg_pp0_iter1;
reg   [0:0] and_ln154_14_reg_4841;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
reg   [0:0] and_ln154_15_reg_4851;
reg   [0:0] icmp_ln84_reg_4747_pp0_iter1_reg;
reg   [0:0] empty_21_reg_441_pp0_iter1_reg;
reg   [0:0] and_ln154_15_reg_4851_pp0_iter1_reg;
reg   [0:0] cmp_i_i51_reg_4781_pp0_iter1_reg;
reg   [31:0] empty_20_reg_405;
reg   [0:0] b0_disable_V_flag_1_reg_421;
wire    ap_block_state2_pp0_stage1_iter0;
reg    ap_predicate_op658_write_state18;
reg    ap_predicate_op667_write_state18;
reg    ap_block_state18_pp0_stage1_iter1;
reg    ap_block_state18_io;
reg    ap_block_pp0_stage1_11001;
reg   [71:0] p_cast_reg_4355;
reg    ap_block_state1_pp0_stage0_iter0;
reg    ap_predicate_op646_write_state17;
reg    ap_predicate_op656_write_state17;
reg    ap_block_state17_pp0_stage0_iter1;
reg    ap_block_state17_io;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] xor_ln77_61_fu_946_p2;
reg   [0:0] xor_ln77_61_reg_4437;
wire   [0:0] tmp_31_fu_952_p3;
reg   [0:0] tmp_31_reg_4442;
wire   [0:0] tmp_32_fu_960_p3;
reg   [0:0] tmp_32_reg_4447;
wire   [0:0] tmp_33_fu_968_p3;
reg   [0:0] tmp_33_reg_4452;
wire   [0:0] tmp_34_fu_976_p3;
reg   [0:0] tmp_34_reg_4457;
wire   [0:0] tmp_35_fu_984_p3;
reg   [0:0] tmp_35_reg_4462;
wire   [0:0] tmp_36_fu_992_p3;
reg   [0:0] tmp_36_reg_4467;
wire   [0:0] tmp_37_fu_1000_p3;
reg   [0:0] tmp_37_reg_4472;
wire   [0:0] tmp_38_fu_1008_p3;
reg   [0:0] tmp_38_reg_4477;
wire   [0:0] tmp_39_fu_1016_p3;
reg   [0:0] tmp_39_reg_4482;
wire   [0:0] tmp_40_fu_1024_p3;
reg   [0:0] tmp_40_reg_4487;
wire   [0:0] tmp_41_fu_1032_p3;
reg   [0:0] tmp_41_reg_4492;
wire   [0:0] tmp_42_fu_1040_p3;
reg   [0:0] tmp_42_reg_4497;
wire   [0:0] tmp_43_fu_1048_p3;
reg   [0:0] tmp_43_reg_4502;
wire   [0:0] tmp_44_fu_1056_p3;
reg   [0:0] tmp_44_reg_4507;
wire   [0:0] tmp_45_fu_1064_p3;
reg   [0:0] tmp_45_reg_4512;
wire   [0:0] tmp_46_fu_1072_p3;
reg   [0:0] tmp_46_reg_4517;
wire   [0:0] tmp_47_fu_1080_p3;
reg   [0:0] tmp_47_reg_4522;
wire   [0:0] tmp_48_fu_1088_p3;
reg   [0:0] tmp_48_reg_4527;
wire   [0:0] tmp_49_fu_1096_p3;
reg   [0:0] tmp_49_reg_4532;
wire   [0:0] tmp_50_fu_1104_p3;
reg   [0:0] tmp_50_reg_4537;
wire   [0:0] tmp_51_fu_1112_p3;
reg   [0:0] tmp_51_reg_4542;
wire   [0:0] tmp_52_fu_1120_p3;
reg   [0:0] tmp_52_reg_4547;
wire   [0:0] tmp_53_fu_1128_p3;
reg   [0:0] tmp_53_reg_4552;
wire   [0:0] tmp_54_fu_1136_p3;
reg   [0:0] tmp_54_reg_4557;
wire   [0:0] tmp_55_fu_1144_p3;
reg   [0:0] tmp_55_reg_4562;
wire   [0:0] tmp_56_fu_1152_p3;
reg   [0:0] tmp_56_reg_4567;
wire   [0:0] tmp_57_fu_1160_p3;
reg   [0:0] tmp_57_reg_4572;
wire   [0:0] tmp_58_fu_1168_p3;
reg   [0:0] tmp_58_reg_4577;
wire   [0:0] tmp_59_fu_1176_p3;
reg   [0:0] tmp_59_reg_4582;
wire   [0:0] tmp_60_fu_1184_p3;
reg   [0:0] tmp_60_reg_4587;
wire   [0:0] xor_ln804_fu_1207_p2;
reg   [0:0] xor_ln804_reg_4592;
wire   [0:0] xor_ln77_1_fu_1228_p2;
reg   [0:0] xor_ln77_1_reg_4597;
wire   [0:0] xor_ln77_2_fu_1249_p2;
reg   [0:0] xor_ln77_2_reg_4602;
wire   [0:0] xor_ln77_3_fu_1270_p2;
reg   [0:0] xor_ln77_3_reg_4607;
wire   [0:0] xor_ln77_4_fu_1291_p2;
reg   [0:0] xor_ln77_4_reg_4612;
wire   [0:0] xor_ln77_5_fu_1312_p2;
reg   [0:0] xor_ln77_5_reg_4617;
wire   [0:0] xor_ln77_6_fu_1333_p2;
reg   [0:0] xor_ln77_6_reg_4622;
wire   [0:0] xor_ln77_7_fu_1354_p2;
reg   [0:0] xor_ln77_7_reg_4627;
wire   [0:0] xor_ln77_8_fu_1375_p2;
reg   [0:0] xor_ln77_8_reg_4632;
wire   [0:0] xor_ln77_9_fu_1396_p2;
reg   [0:0] xor_ln77_9_reg_4637;
wire   [0:0] xor_ln77_10_fu_1417_p2;
reg   [0:0] xor_ln77_10_reg_4642;
wire   [0:0] xor_ln77_11_fu_1438_p2;
reg   [0:0] xor_ln77_11_reg_4647;
wire   [0:0] xor_ln77_12_fu_1459_p2;
reg   [0:0] xor_ln77_12_reg_4652;
wire   [0:0] xor_ln77_13_fu_1480_p2;
reg   [0:0] xor_ln77_13_reg_4657;
wire   [0:0] xor_ln77_14_fu_1501_p2;
reg   [0:0] xor_ln77_14_reg_4662;
wire   [0:0] xor_ln77_15_fu_1522_p2;
reg   [0:0] xor_ln77_15_reg_4667;
wire   [0:0] xor_ln77_16_fu_1543_p2;
reg   [0:0] xor_ln77_16_reg_4672;
wire   [0:0] xor_ln77_17_fu_1564_p2;
reg   [0:0] xor_ln77_17_reg_4677;
wire   [0:0] xor_ln77_18_fu_1585_p2;
reg   [0:0] xor_ln77_18_reg_4682;
wire   [0:0] xor_ln77_19_fu_1606_p2;
reg   [0:0] xor_ln77_19_reg_4687;
wire   [0:0] xor_ln77_20_fu_1627_p2;
reg   [0:0] xor_ln77_20_reg_4692;
wire   [0:0] xor_ln77_21_fu_1648_p2;
reg   [0:0] xor_ln77_21_reg_4697;
wire   [0:0] xor_ln77_22_fu_1669_p2;
reg   [0:0] xor_ln77_22_reg_4702;
wire   [0:0] xor_ln77_23_fu_1690_p2;
reg   [0:0] xor_ln77_23_reg_4707;
wire   [0:0] xor_ln77_24_fu_1711_p2;
reg   [0:0] xor_ln77_24_reg_4712;
wire   [0:0] xor_ln77_25_fu_1732_p2;
reg   [0:0] xor_ln77_25_reg_4717;
wire   [0:0] xor_ln77_26_fu_1753_p2;
reg   [0:0] xor_ln77_26_reg_4722;
wire   [0:0] xor_ln77_27_fu_1774_p2;
reg   [0:0] xor_ln77_27_reg_4727;
wire   [0:0] xor_ln77_28_fu_1795_p2;
reg   [0:0] xor_ln77_28_reg_4732;
wire   [0:0] xor_ln77_29_fu_1816_p2;
reg   [0:0] xor_ln77_29_reg_4737;
wire   [0:0] xor_ln77_30_fu_1837_p2;
reg   [0:0] xor_ln77_30_reg_4742;
wire   [0:0] icmp_ln84_fu_2037_p2;
wire   [0:0] cmp102_fu_2043_p2;
reg   [0:0] cmp102_reg_4751;
wire   [0:0] cmp_i_i123_fu_2067_p2;
reg   [0:0] cmp_i_i123_reg_4756;
wire   [6:0] leftBits_cast_fu_2073_p1;
reg   [6:0] leftBits_cast_reg_4776;
wire   [0:0] cmp_i_i51_fu_2077_p2;
wire   [0:0] and_ln154_fu_2095_p2;
wire   [0:0] ap_phi_mux_empty_21_phi_fu_446_p8;
wire   [0:0] and_ln154_1_fu_2107_p2;
wire   [0:0] and_ln154_2_fu_2119_p2;
wire   [0:0] and_ln154_3_fu_2131_p2;
wire   [0:0] and_ln154_4_fu_2143_p2;
wire   [0:0] and_ln154_5_fu_2155_p2;
wire   [0:0] and_ln154_6_fu_2167_p2;
wire   [0:0] and_ln154_7_fu_2179_p2;
wire   [0:0] and_ln154_8_fu_2191_p2;
wire   [0:0] and_ln154_9_fu_2203_p2;
wire   [0:0] and_ln154_10_fu_2215_p2;
wire   [0:0] and_ln154_11_fu_2227_p2;
wire   [0:0] and_ln154_12_fu_2239_p2;
wire   [0:0] and_ln154_13_fu_2251_p2;
wire   [0:0] and_ln154_14_fu_2263_p2;
reg   [1:0] p_Result_42_fu_2269_p4;
reg   [1:0] p_Result_42_reg_4845;
wire   [0:0] and_ln154_15_fu_2285_p2;
wire   [6:0] sub_i_i115_fu_2303_p2;
reg   [6:0] sub_i_i115_reg_4855;
reg    ap_predicate_op408_write_state3;
reg    ap_block_state3_pp0_stage2_iter0;
reg    ap_block_state3_io;
reg    ap_predicate_op669_write_state19;
wire    regslice_both_symbolsOut_V_data_V_U_apdone_blk;
reg    ap_block_state19_pp0_stage2_iter1;
reg    ap_block_state19_io;
reg    ap_block_pp0_stage2_11001;
wire   [0:0] modSymOutT_last_V_fu_2425_p2;
reg   [0:0] modSymOutT_last_V_reg_4874;
wire   [71:0] zext_ln258_fu_2431_p1;
wire   [0:0] modSymOutT_last_V_1_fu_2543_p2;
reg   [0:0] modSymOutT_last_V_1_reg_4886;
reg    ap_predicate_op411_write_state4;
reg    ap_predicate_op423_write_state4;
reg    ap_block_state4_pp0_stage3_iter0;
reg    ap_block_state4_io;
reg    ap_block_pp0_stage3_11001;
wire   [71:0] zext_ln258_1_fu_2549_p1;
wire   [0:0] modSymOutT_last_V_2_fu_2661_p2;
reg    ap_predicate_op426_write_state5;
reg    ap_predicate_op438_write_state5;
reg    ap_block_state5_pp0_stage4_iter0;
reg    ap_block_state5_io;
reg    ap_block_pp0_stage4_11001;
wire   [71:0] zext_ln258_2_fu_2667_p1;
wire   [0:0] modSymOutT_last_V_3_fu_2677_p2;
reg   [0:0] modSymOutT_last_V_3_reg_4908;
wire   [0:0] or_ln144_2_fu_2692_p2;
reg   [0:0] or_ln144_2_reg_4914;
wire   [0:0] or_ln144_18_fu_2708_p2;
reg   [0:0] or_ln144_18_reg_4919;
wire   [71:0] zext_ln258_3_fu_2816_p1;
reg    ap_predicate_op449_write_state6;
reg    ap_predicate_op459_write_state6;
reg    ap_block_state6_pp0_stage5_iter0;
reg    ap_block_state6_io;
reg    ap_block_pp0_stage5_11001;
wire   [0:0] modSymOutT_last_V_4_fu_2928_p2;
reg    ap_predicate_op462_write_state7;
reg    ap_predicate_op474_write_state7;
reg    ap_block_state7_pp0_stage6_iter0;
reg    ap_block_state7_io;
reg    ap_block_pp0_stage6_11001;
wire   [71:0] zext_ln258_4_fu_2934_p1;
wire   [0:0] modSymOutT_last_V_5_fu_2944_p2;
reg   [0:0] modSymOutT_last_V_5_reg_4939;
wire   [0:0] modSymOutT_last_V_6_fu_2954_p2;
reg   [0:0] modSymOutT_last_V_6_reg_4944;
wire   [0:0] modSymOutT_last_V_7_fu_2964_p2;
reg   [0:0] modSymOutT_last_V_7_reg_4949;
wire   [0:0] modSymOutT_last_V_8_fu_2974_p2;
reg   [0:0] modSymOutT_last_V_8_reg_4954;
wire   [0:0] modSymOutT_last_V_9_fu_2984_p2;
reg   [0:0] modSymOutT_last_V_9_reg_4959;
wire   [0:0] modSymOutT_last_V_10_fu_2994_p2;
reg   [0:0] modSymOutT_last_V_10_reg_4964;
wire   [0:0] modSymOutT_last_V_11_fu_3004_p2;
reg   [0:0] modSymOutT_last_V_11_reg_4969;
wire   [0:0] modSymOutT_last_V_12_fu_3014_p2;
reg   [0:0] modSymOutT_last_V_12_reg_4974;
wire   [0:0] modSymOutT_last_V_13_fu_3024_p2;
reg   [0:0] modSymOutT_last_V_13_reg_4979;
wire   [0:0] modSymOutT_last_V_14_fu_3034_p2;
reg   [0:0] modSymOutT_last_V_14_reg_4984;
wire   [0:0] modSymOutT_last_V_15_fu_3044_p2;
reg   [0:0] modSymOutT_last_V_15_reg_4989;
wire   [0:0] or_ln144_15_fu_3119_p2;
wire   [0:0] or_ln144_29_fu_3184_p2;
wire   [71:0] zext_ln258_5_fu_3292_p1;
reg    ap_predicate_op524_write_state8;
reg    ap_predicate_op534_write_state8;
reg    ap_block_state8_pp0_stage7_iter0;
reg    ap_block_state8_io;
reg    ap_block_pp0_stage7_11001;
wire   [71:0] zext_ln258_6_fu_3405_p1;
reg    ap_predicate_op542_write_state9;
reg    ap_predicate_op552_write_state9;
reg    ap_block_state9_pp0_stage8_iter0;
reg    ap_block_state9_io;
reg    ap_block_pp0_stage8_11001;
wire   [71:0] zext_ln258_7_fu_3512_p1;
reg    ap_predicate_op555_write_state10;
reg    ap_predicate_op565_write_state10;
reg    ap_block_state10_pp0_stage9_iter0;
reg    ap_block_state10_io;
reg    ap_block_pp0_stage9_11001;
wire   [71:0] zext_ln258_8_fu_3619_p1;
reg    ap_predicate_op568_write_state11;
reg    ap_predicate_op578_write_state11;
reg    ap_block_state11_pp0_stage10_iter0;
reg    ap_block_state11_io;
reg    ap_block_pp0_stage10_11001;
wire   [71:0] zext_ln258_9_fu_3726_p1;
reg    ap_predicate_op581_write_state12;
reg    ap_predicate_op591_write_state12;
reg    ap_block_state12_pp0_stage11_iter0;
reg    ap_block_state12_io;
reg    ap_block_pp0_stage11_11001;
wire   [71:0] zext_ln258_10_fu_3833_p1;
reg    ap_predicate_op594_write_state13;
reg    ap_predicate_op604_write_state13;
reg    ap_block_state13_pp0_stage12_iter0;
reg    ap_block_state13_io;
reg    ap_block_pp0_stage12_11001;
wire   [71:0] zext_ln258_11_fu_3940_p1;
reg    ap_predicate_op607_write_state14;
reg    ap_predicate_op617_write_state14;
reg    ap_block_state14_pp0_stage13_iter0;
reg    ap_block_state14_io;
reg    ap_block_pp0_stage13_11001;
wire   [71:0] zext_ln258_12_fu_4047_p1;
reg    ap_predicate_op620_write_state15;
reg    ap_predicate_op630_write_state15;
reg    ap_block_state15_pp0_stage14_iter0;
reg    ap_block_state15_io;
reg    ap_block_pp0_stage14_11001;
wire   [71:0] zext_ln258_13_fu_4154_p1;
reg    ap_predicate_op633_write_state16;
reg    ap_predicate_op643_write_state16;
reg    ap_block_state16_pp0_stage15_iter0;
reg    ap_block_state16_io;
reg    ap_block_pp0_stage15_11001;
wire   [71:0] zext_ln258_14_fu_4261_p1;
wire   [71:0] zext_ln258_15_fu_4350_p1;
reg    ap_block_pp0_stage15_subdone;
reg    ap_block_pp0_stage2_subdone;
reg   [31:0] ap_phi_mux_empty_20_phi_fu_408_p8;
wire   [31:0] ap_phi_reg_pp0_iter0_empty_20_reg_405;
wire   [0:0] triggerIn_s_V_fu_486_p3;
wire   [31:0] add_ln66_fu_519_p2;
wire   [0:0] b0_enable_V_load_load_fu_503_p1;
wire   [0:0] b0_disable_V_load_load_fu_494_p1;
reg   [0:0] ap_phi_reg_pp0_iter0_b0_disable_V_flag_1_reg_421;
reg   [0:0] ap_phi_reg_pp0_iter0_empty_21_reg_441;
wire   [0:0] ap_phi_mux_b0_disable_V_flag_3_phi_fu_464_p4;
reg   [0:0] ap_phi_reg_pp0_iter0_b0_disable_V_flag_3_reg_461;
reg   [0:0] ap_phi_reg_pp0_iter0_b0_disable_V_new_3_reg_471;
wire   [63:0] idxprom_fu_544_p1;
reg    ap_block_pp0_stage2_01001;
reg    ap_block_pp0_stage3_01001;
reg    ap_block_pp0_stage4_01001;
reg    ap_block_pp0_stage5_01001;
reg    ap_block_pp0_stage6_01001;
reg    ap_block_pp0_stage7_01001;
reg    ap_block_pp0_stage8_01001;
reg    ap_block_pp0_stage9_01001;
reg    ap_block_pp0_stage10_01001;
reg    ap_block_pp0_stage11_01001;
reg    ap_block_pp0_stage12_01001;
reg    ap_block_pp0_stage13_01001;
reg    ap_block_pp0_stage14_01001;
reg    ap_block_pp0_stage15_01001;
reg    ap_block_pp0_stage0_01001;
reg    ap_block_pp0_stage1_01001;
wire   [30:0] trunc_ln779_fu_549_p1;
wire   [30:0] trunc_ln77_fu_553_p1;
wire   [29:0] trunc_ln77_60_fu_762_p1;
wire   [29:0] trunc_ln77_59_fu_759_p1;
wire   [28:0] trunc_ln77_58_fu_755_p1;
wire   [28:0] trunc_ln77_57_fu_752_p1;
wire   [27:0] trunc_ln77_56_fu_748_p1;
wire   [27:0] trunc_ln77_55_fu_745_p1;
wire   [26:0] trunc_ln77_54_fu_741_p1;
wire   [26:0] trunc_ln77_53_fu_738_p1;
wire   [25:0] trunc_ln77_52_fu_734_p1;
wire   [25:0] trunc_ln77_51_fu_731_p1;
wire   [24:0] trunc_ln77_50_fu_727_p1;
wire   [24:0] trunc_ln77_49_fu_724_p1;
wire   [23:0] trunc_ln77_48_fu_720_p1;
wire   [23:0] trunc_ln77_47_fu_717_p1;
wire   [22:0] trunc_ln77_46_fu_713_p1;
wire   [22:0] trunc_ln77_45_fu_710_p1;
wire   [21:0] trunc_ln77_44_fu_706_p1;
wire   [21:0] trunc_ln77_43_fu_703_p1;
wire   [20:0] trunc_ln77_42_fu_699_p1;
wire   [20:0] trunc_ln77_41_fu_696_p1;
wire   [19:0] trunc_ln77_40_fu_692_p1;
wire   [19:0] trunc_ln77_39_fu_689_p1;
wire   [18:0] trunc_ln77_38_fu_685_p1;
wire   [18:0] trunc_ln77_37_fu_682_p1;
wire   [17:0] trunc_ln77_36_fu_678_p1;
wire   [17:0] trunc_ln77_35_fu_675_p1;
wire   [16:0] trunc_ln77_34_fu_671_p1;
wire   [16:0] trunc_ln77_33_fu_668_p1;
wire   [15:0] trunc_ln77_32_fu_664_p1;
wire   [15:0] trunc_ln77_31_fu_661_p1;
wire   [14:0] trunc_ln77_30_fu_657_p1;
wire   [14:0] trunc_ln77_29_fu_654_p1;
wire   [13:0] trunc_ln77_28_fu_650_p1;
wire   [13:0] trunc_ln77_27_fu_647_p1;
wire   [12:0] trunc_ln77_26_fu_643_p1;
wire   [12:0] trunc_ln77_25_fu_640_p1;
wire   [11:0] trunc_ln77_24_fu_636_p1;
wire   [11:0] trunc_ln77_23_fu_633_p1;
wire   [10:0] trunc_ln77_22_fu_629_p1;
wire   [10:0] trunc_ln77_21_fu_626_p1;
wire   [9:0] trunc_ln77_20_fu_622_p1;
wire   [9:0] trunc_ln77_19_fu_619_p1;
wire   [8:0] trunc_ln77_18_fu_615_p1;
wire   [8:0] trunc_ln77_17_fu_612_p1;
wire   [7:0] trunc_ln77_16_fu_608_p1;
wire   [7:0] trunc_ln77_15_fu_605_p1;
wire   [6:0] trunc_ln77_14_fu_601_p1;
wire   [6:0] trunc_ln77_13_fu_598_p1;
wire   [5:0] trunc_ln77_12_fu_594_p1;
wire   [5:0] trunc_ln77_11_fu_591_p1;
wire   [4:0] trunc_ln77_10_fu_587_p1;
wire   [4:0] trunc_ln77_9_fu_584_p1;
wire   [3:0] trunc_ln77_8_fu_580_p1;
wire   [3:0] trunc_ln77_7_fu_577_p1;
wire   [2:0] trunc_ln77_6_fu_573_p1;
wire   [2:0] trunc_ln77_5_fu_570_p1;
wire   [1:0] trunc_ln77_4_fu_566_p1;
wire   [1:0] trunc_ln77_3_fu_563_p1;
wire   [0:0] trunc_ln77_2_fu_559_p1;
wire   [0:0] trunc_ln77_1_fu_556_p1;
wire   [1:0] xor_ln77_60_fu_940_p2;
wire   [2:0] xor_ln77_59_fu_934_p2;
wire   [3:0] xor_ln77_58_fu_928_p2;
wire   [4:0] xor_ln77_57_fu_922_p2;
wire   [5:0] xor_ln77_56_fu_916_p2;
wire   [6:0] xor_ln77_55_fu_910_p2;
wire   [7:0] xor_ln77_54_fu_904_p2;
wire   [8:0] xor_ln77_53_fu_898_p2;
wire   [9:0] xor_ln77_52_fu_892_p2;
wire   [10:0] xor_ln77_51_fu_886_p2;
wire   [11:0] xor_ln77_50_fu_880_p2;
wire   [12:0] xor_ln77_49_fu_874_p2;
wire   [13:0] xor_ln77_48_fu_868_p2;
wire   [14:0] xor_ln77_47_fu_862_p2;
wire   [15:0] xor_ln77_46_fu_856_p2;
wire   [16:0] xor_ln77_45_fu_850_p2;
wire   [17:0] xor_ln77_44_fu_844_p2;
wire   [18:0] xor_ln77_43_fu_838_p2;
wire   [19:0] xor_ln77_42_fu_832_p2;
wire   [20:0] xor_ln77_41_fu_826_p2;
wire   [21:0] xor_ln77_40_fu_820_p2;
wire   [22:0] xor_ln77_39_fu_814_p2;
wire   [23:0] xor_ln77_38_fu_808_p2;
wire   [24:0] xor_ln77_37_fu_802_p2;
wire   [25:0] xor_ln77_36_fu_796_p2;
wire   [26:0] xor_ln77_35_fu_790_p2;
wire   [27:0] xor_ln77_34_fu_784_p2;
wire   [28:0] xor_ln77_33_fu_778_p2;
wire   [29:0] xor_ln77_32_fu_772_p2;
wire   [30:0] xor_ln77_fu_766_p2;
wire   [0:0] tmp_61_fu_1192_p3;
wire   [0:0] tmp_62_fu_1200_p3;
wire   [0:0] tmp_63_fu_1213_p3;
wire   [0:0] tmp_64_fu_1221_p3;
wire   [0:0] tmp_65_fu_1234_p3;
wire   [0:0] tmp_66_fu_1242_p3;
wire   [0:0] tmp_67_fu_1255_p3;
wire   [0:0] tmp_68_fu_1263_p3;
wire   [0:0] tmp_69_fu_1276_p3;
wire   [0:0] tmp_70_fu_1284_p3;
wire   [0:0] tmp_71_fu_1297_p3;
wire   [0:0] tmp_72_fu_1305_p3;
wire   [0:0] tmp_73_fu_1318_p3;
wire   [0:0] tmp_74_fu_1326_p3;
wire   [0:0] tmp_75_fu_1339_p3;
wire   [0:0] tmp_76_fu_1347_p3;
wire   [0:0] tmp_77_fu_1360_p3;
wire   [0:0] tmp_78_fu_1368_p3;
wire   [0:0] tmp_79_fu_1381_p3;
wire   [0:0] tmp_80_fu_1389_p3;
wire   [0:0] tmp_81_fu_1402_p3;
wire   [0:0] tmp_82_fu_1410_p3;
wire   [0:0] tmp_83_fu_1423_p3;
wire   [0:0] tmp_84_fu_1431_p3;
wire   [0:0] tmp_85_fu_1444_p3;
wire   [0:0] tmp_86_fu_1452_p3;
wire   [0:0] tmp_87_fu_1465_p3;
wire   [0:0] tmp_88_fu_1473_p3;
wire   [0:0] tmp_89_fu_1486_p3;
wire   [0:0] tmp_90_fu_1494_p3;
wire   [0:0] tmp_91_fu_1507_p3;
wire   [0:0] tmp_92_fu_1515_p3;
wire   [0:0] tmp_93_fu_1528_p3;
wire   [0:0] tmp_94_fu_1536_p3;
wire   [0:0] tmp_95_fu_1549_p3;
wire   [0:0] tmp_96_fu_1557_p3;
wire   [0:0] tmp_97_fu_1570_p3;
wire   [0:0] tmp_98_fu_1578_p3;
wire   [0:0] tmp_99_fu_1591_p3;
wire   [0:0] tmp_100_fu_1599_p3;
wire   [0:0] tmp_101_fu_1612_p3;
wire   [0:0] tmp_102_fu_1620_p3;
wire   [0:0] tmp_103_fu_1633_p3;
wire   [0:0] tmp_104_fu_1641_p3;
wire   [0:0] tmp_105_fu_1654_p3;
wire   [0:0] tmp_106_fu_1662_p3;
wire   [0:0] tmp_107_fu_1675_p3;
wire   [0:0] tmp_108_fu_1683_p3;
wire   [0:0] tmp_109_fu_1696_p3;
wire   [0:0] tmp_110_fu_1704_p3;
wire   [0:0] tmp_111_fu_1717_p3;
wire   [0:0] tmp_112_fu_1725_p3;
wire   [0:0] tmp_113_fu_1738_p3;
wire   [0:0] tmp_114_fu_1746_p3;
wire   [0:0] tmp_115_fu_1759_p3;
wire   [0:0] tmp_116_fu_1767_p3;
wire   [0:0] tmp_117_fu_1780_p3;
wire   [0:0] tmp_118_fu_1788_p3;
wire   [0:0] tmp_119_fu_1801_p3;
wire   [0:0] tmp_120_fu_1809_p3;
wire   [0:0] tmp_121_fu_1822_p3;
wire   [0:0] tmp_122_fu_1830_p3;
wire   [0:0] tmp_123_fu_1843_p3;
wire   [0:0] tmp_124_fu_1851_p3;
wire   [0:0] tmp_125_fu_1864_p3;
wire   [0:0] tmp_126_fu_1872_p3;
wire   [0:0] xor_ln804_1_fu_1879_p2;
wire   [0:0] xor_ln77_31_fu_1858_p2;
wire   [4:0] zext_ln84_fu_2017_p1;
wire   [4:0] add_ln84_fu_2021_p2;
wire   [3:0] tmp_127_fu_2027_p4;
wire   [12:0] nBitsdivSSRbits_cast_fu_2049_p1;
wire   [12:0] sub_i_i144_fu_2053_p2;
wire  signed [32:0] sub_i_i144_cast_fu_2059_p1;
wire   [32:0] conv_i_i121_fu_2063_p1;
wire   [6:0] sub_i_i_fu_2083_p2;
wire   [0:0] icmp_ln1027_fu_2089_p2;
wire   [0:0] icmp_ln1027_1_fu_2101_p2;
wire   [0:0] icmp_ln1027_2_fu_2113_p2;
wire   [0:0] icmp_ln1027_3_fu_2125_p2;
wire   [0:0] icmp_ln1027_4_fu_2137_p2;
wire   [0:0] icmp_ln1027_5_fu_2149_p2;
wire   [0:0] icmp_ln1027_6_fu_2161_p2;
wire   [0:0] icmp_ln1027_7_fu_2173_p2;
wire   [0:0] icmp_ln1027_8_fu_2185_p2;
wire   [0:0] icmp_ln1027_9_fu_2197_p2;
wire   [0:0] icmp_ln1027_10_fu_2209_p2;
wire   [0:0] icmp_ln1027_11_fu_2221_p2;
wire   [0:0] icmp_ln1027_12_fu_2233_p2;
wire   [0:0] icmp_ln1027_13_fu_2245_p2;
wire   [0:0] icmp_ln1027_14_fu_2257_p2;
wire   [63:0] p_Result_49_fu_1885_p65;
wire   [0:0] icmp_ln1027_15_fu_2279_p2;
wire   [1:0] tmp_fu_2291_p3;
reg   [1:0] p_Result_s_fu_2308_p4;
wire   [1:0] tmp_1_fu_2297_p3;
reg   [1:0] p_Result_1_fu_2346_p4;
wire   [15:0] b1_modSyms_V_3_fu_2370_p6;
wire   [15:0] b1_modSyms_V_1_fu_2332_p6;
wire   [15:0] b1_modSyms_V_2_fu_2356_p6;
wire   [15:0] b1_modSyms_V_fu_2318_p6;
wire   [64:0] p_Result_50_fu_2384_p6;
wire   [64:0] p_Result_51_fu_2398_p6;
wire   [0:0] icmp_ln1019_fu_2419_p2;
wire   [64:0] modSymOutT_data_V_fu_2412_p3;
wire   [1:0] tmp_2_fu_2436_p3;
reg   [1:0] p_Result_4_fu_2448_p4;
wire   [1:0] tmp_3_fu_2442_p3;
reg   [1:0] p_Result_5_fu_2486_p4;
wire   [15:0] b1_modSyms_V_7_fu_2510_p6;
wire   [15:0] b1_modSyms_V_5_fu_2472_p6;
wire   [15:0] b1_modSyms_V_6_fu_2496_p6;
wire   [15:0] b1_modSyms_V_4_fu_2458_p6;
wire   [0:0] icmp_ln1019_1_fu_2538_p2;
wire   [64:0] p_Result_52_fu_2524_p6;
wire   [1:0] tmp_4_fu_2554_p3;
reg   [1:0] p_Result_7_fu_2566_p4;
wire   [1:0] tmp_5_fu_2560_p3;
reg   [1:0] p_Result_8_fu_2604_p4;
wire   [15:0] b1_modSyms_V_11_fu_2628_p6;
wire   [15:0] b1_modSyms_V_9_fu_2590_p6;
wire   [15:0] b1_modSyms_V_10_fu_2614_p6;
wire   [15:0] b1_modSyms_V_8_fu_2576_p6;
wire   [0:0] icmp_ln1019_2_fu_2656_p2;
wire   [64:0] p_Result_53_fu_2642_p6;
wire   [0:0] icmp_ln1019_3_fu_2672_p2;
wire   [0:0] or_ln144_1_fu_2687_p2;
wire   [0:0] or_ln144_fu_2682_p2;
wire   [0:0] or_ln144_17_fu_2702_p2;
wire   [0:0] or_ln144_16_fu_2698_p2;
wire   [1:0] tmp_6_fu_2714_p3;
reg   [1:0] p_Result_s_22_fu_2726_p4;
wire   [1:0] tmp_7_fu_2720_p3;
reg   [1:0] p_Result_2_fu_2764_p4;
wire   [15:0] b1_modSyms_V_15_fu_2788_p6;
wire   [15:0] b1_modSyms_V_13_fu_2750_p6;
wire   [15:0] b1_modSyms_V_14_fu_2774_p6;
wire   [15:0] b1_modSyms_V_12_fu_2736_p6;
wire   [64:0] p_Result_54_fu_2802_p6;
wire   [1:0] tmp_8_fu_2821_p3;
reg   [1:0] p_Result_6_fu_2833_p4;
wire   [1:0] tmp_9_fu_2827_p3;
reg   [1:0] p_Result_9_fu_2871_p4;
wire   [15:0] b1_modSyms_V_19_fu_2895_p6;
wire   [15:0] b1_modSyms_V_17_fu_2857_p6;
wire   [15:0] b1_modSyms_V_18_fu_2881_p6;
wire   [15:0] b1_modSyms_V_16_fu_2843_p6;
wire   [0:0] icmp_ln1019_4_fu_2923_p2;
wire   [64:0] p_Result_55_fu_2909_p6;
wire   [0:0] icmp_ln1019_5_fu_2939_p2;
wire   [0:0] icmp_ln1019_6_fu_2949_p2;
wire   [0:0] icmp_ln1019_7_fu_2959_p2;
wire   [0:0] icmp_ln1019_8_fu_2969_p2;
wire   [0:0] icmp_ln1019_9_fu_2979_p2;
wire   [0:0] icmp_ln1019_10_fu_2989_p2;
wire   [0:0] icmp_ln1019_11_fu_2999_p2;
wire   [0:0] icmp_ln1019_12_fu_3009_p2;
wire   [0:0] icmp_ln1019_13_fu_3019_p2;
wire   [0:0] icmp_ln1019_14_fu_3029_p2;
wire   [0:0] icmp_ln1019_15_fu_3039_p2;
wire   [0:0] or_ln144_4_fu_3054_p2;
wire   [0:0] or_ln144_3_fu_3049_p2;
wire   [0:0] or_ln144_5_fu_3060_p2;
wire   [0:0] or_ln144_8_fu_3077_p2;
wire   [0:0] or_ln144_7_fu_3071_p2;
wire   [0:0] or_ln144_11_fu_3095_p2;
wire   [0:0] or_ln144_12_fu_3101_p2;
wire   [0:0] or_ln144_10_fu_3089_p2;
wire   [0:0] or_ln144_13_fu_3107_p2;
wire   [0:0] or_ln144_9_fu_3083_p2;
wire   [0:0] or_ln144_14_fu_3113_p2;
wire   [0:0] or_ln144_6_fu_3066_p2;
wire   [0:0] or_ln144_20_fu_3131_p2;
wire   [0:0] or_ln144_19_fu_3125_p2;
wire   [0:0] or_ln144_21_fu_3137_p2;
wire   [0:0] or_ln144_24_fu_3154_p2;
wire   [0:0] or_ln144_23_fu_3148_p2;
wire   [0:0] or_ln144_26_fu_3166_p2;
wire   [0:0] or_ln144_27_fu_3172_p2;
wire   [0:0] or_ln144_25_fu_3160_p2;
wire   [0:0] or_ln144_28_fu_3178_p2;
wire   [0:0] or_ln144_22_fu_3143_p2;
wire   [1:0] tmp_s_fu_3190_p3;
reg   [1:0] p_Result_11_fu_3202_p4;
wire   [1:0] tmp_10_fu_3196_p3;
reg   [1:0] p_Result_12_fu_3240_p4;
wire   [15:0] b1_modSyms_V_23_fu_3264_p6;
wire   [15:0] b1_modSyms_V_21_fu_3226_p6;
wire   [15:0] b1_modSyms_V_22_fu_3250_p6;
wire   [15:0] b1_modSyms_V_20_fu_3212_p6;
wire   [64:0] p_Result_56_fu_3278_p6;
wire   [1:0] tmp_11_fu_3303_p3;
reg   [1:0] p_Result_14_fu_3315_p4;
wire   [1:0] tmp_12_fu_3309_p3;
reg   [1:0] p_Result_15_fu_3353_p4;
wire   [15:0] b1_modSyms_V_27_fu_3377_p6;
wire   [15:0] b1_modSyms_V_25_fu_3339_p6;
wire   [15:0] b1_modSyms_V_26_fu_3363_p6;
wire   [15:0] b1_modSyms_V_24_fu_3325_p6;
wire   [64:0] p_Result_57_fu_3391_p6;
wire   [1:0] tmp_13_fu_3410_p3;
reg   [1:0] p_Result_17_fu_3422_p4;
wire   [1:0] tmp_14_fu_3416_p3;
reg   [1:0] p_Result_18_fu_3460_p4;
wire   [15:0] b1_modSyms_V_31_fu_3484_p6;
wire   [15:0] b1_modSyms_V_29_fu_3446_p6;
wire   [15:0] b1_modSyms_V_30_fu_3470_p6;
wire   [15:0] b1_modSyms_V_28_fu_3432_p6;
wire   [64:0] p_Result_58_fu_3498_p6;
wire   [1:0] tmp_15_fu_3517_p3;
reg   [1:0] p_Result_20_fu_3529_p4;
wire   [1:0] tmp_16_fu_3523_p3;
reg   [1:0] p_Result_21_fu_3567_p4;
wire   [15:0] b1_modSyms_V_35_fu_3591_p6;
wire   [15:0] b1_modSyms_V_33_fu_3553_p6;
wire   [15:0] b1_modSyms_V_34_fu_3577_p6;
wire   [15:0] b1_modSyms_V_32_fu_3539_p6;
wire   [64:0] p_Result_59_fu_3605_p6;
wire   [1:0] tmp_17_fu_3624_p3;
reg   [1:0] p_Result_23_fu_3636_p4;
wire   [1:0] tmp_18_fu_3630_p3;
reg   [1:0] p_Result_24_fu_3674_p4;
wire   [15:0] b1_modSyms_V_39_fu_3698_p6;
wire   [15:0] b1_modSyms_V_37_fu_3660_p6;
wire   [15:0] b1_modSyms_V_38_fu_3684_p6;
wire   [15:0] b1_modSyms_V_36_fu_3646_p6;
wire   [64:0] p_Result_60_fu_3712_p6;
wire   [1:0] tmp_19_fu_3731_p3;
reg   [1:0] p_Result_26_fu_3743_p4;
wire   [1:0] tmp_20_fu_3737_p3;
reg   [1:0] p_Result_27_fu_3781_p4;
wire   [15:0] b1_modSyms_V_43_fu_3805_p6;
wire   [15:0] b1_modSyms_V_41_fu_3767_p6;
wire   [15:0] b1_modSyms_V_42_fu_3791_p6;
wire   [15:0] b1_modSyms_V_40_fu_3753_p6;
wire   [64:0] p_Result_61_fu_3819_p6;
wire   [1:0] tmp_21_fu_3838_p3;
reg   [1:0] p_Result_29_fu_3850_p4;
wire   [1:0] tmp_22_fu_3844_p3;
reg   [1:0] p_Result_30_fu_3888_p4;
wire   [15:0] b1_modSyms_V_47_fu_3912_p6;
wire   [15:0] b1_modSyms_V_45_fu_3874_p6;
wire   [15:0] b1_modSyms_V_46_fu_3898_p6;
wire   [15:0] b1_modSyms_V_44_fu_3860_p6;
wire   [64:0] p_Result_62_fu_3926_p6;
wire   [1:0] tmp_23_fu_3945_p3;
reg   [1:0] p_Result_32_fu_3957_p4;
wire   [1:0] tmp_24_fu_3951_p3;
reg   [1:0] p_Result_33_fu_3995_p4;
wire   [15:0] b1_modSyms_V_51_fu_4019_p6;
wire   [15:0] b1_modSyms_V_49_fu_3981_p6;
wire   [15:0] b1_modSyms_V_50_fu_4005_p6;
wire   [15:0] b1_modSyms_V_48_fu_3967_p6;
wire   [64:0] p_Result_63_fu_4033_p6;
wire   [1:0] tmp_25_fu_4052_p3;
reg   [1:0] p_Result_35_fu_4064_p4;
wire   [1:0] tmp_26_fu_4058_p3;
reg   [1:0] p_Result_36_fu_4102_p4;
wire   [15:0] b1_modSyms_V_55_fu_4126_p6;
wire   [15:0] b1_modSyms_V_53_fu_4088_p6;
wire   [15:0] b1_modSyms_V_54_fu_4112_p6;
wire   [15:0] b1_modSyms_V_52_fu_4074_p6;
wire   [64:0] p_Result_64_fu_4140_p6;
wire   [1:0] tmp_27_fu_4159_p3;
reg   [1:0] p_Result_38_fu_4171_p4;
wire   [1:0] tmp_28_fu_4165_p3;
reg   [1:0] p_Result_39_fu_4209_p4;
wire   [15:0] b1_modSyms_V_59_fu_4233_p6;
wire   [15:0] b1_modSyms_V_57_fu_4195_p6;
wire   [15:0] b1_modSyms_V_58_fu_4219_p6;
wire   [15:0] b1_modSyms_V_56_fu_4181_p6;
wire   [64:0] p_Result_65_fu_4247_p6;
wire   [1:0] tmp_29_fu_4266_p3;
reg   [1:0] p_Result_41_fu_4272_p4;
wire   [15:0] b1_modSyms_V_63_fu_4323_p6;
wire   [15:0] b1_modSyms_V_61_fu_4296_p6;
wire   [15:0] b1_modSyms_V_62_fu_4310_p6;
wire   [15:0] b1_modSyms_V_60_fu_4282_p6;
wire   [64:0] p_Result_66_fu_4336_p6;
reg   [15:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_block_pp0_stage1_subdone;
wire    ap_reset_idle_pp0;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage6_subdone;
reg    ap_block_pp0_stage7_subdone;
reg    ap_block_pp0_stage8_subdone;
reg    ap_block_pp0_stage9_subdone;
reg    ap_block_pp0_stage10_subdone;
reg    ap_block_pp0_stage11_subdone;
reg    ap_block_pp0_stage12_subdone;
reg    ap_block_pp0_stage13_subdone;
reg    ap_block_pp0_stage14_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    regslice_both_bitsIn_V_data_V_U_apdone_blk;
wire   [71:0] bitsIn_TDATA_int_regslice;
wire    bitsIn_TVALID_int_regslice;
reg    bitsIn_TREADY_int_regslice;
wire    regslice_both_bitsIn_V_data_V_U_ack_in;
wire    regslice_both_bitsIn_V_keep_V_U_apdone_blk;
wire   [8:0] bitsIn_TKEEP_int_regslice;
wire    regslice_both_bitsIn_V_keep_V_U_vld_out;
wire    regslice_both_bitsIn_V_keep_V_U_ack_in;
wire    regslice_both_bitsIn_V_strb_V_U_apdone_blk;
wire   [8:0] bitsIn_TSTRB_int_regslice;
wire    regslice_both_bitsIn_V_strb_V_U_vld_out;
wire    regslice_both_bitsIn_V_strb_V_U_ack_in;
wire    regslice_both_bitsIn_V_last_V_U_apdone_blk;
wire   [0:0] bitsIn_TLAST_int_regslice;
wire    regslice_both_bitsIn_V_last_V_U_vld_out;
wire    regslice_both_bitsIn_V_last_V_U_ack_in;
reg   [71:0] symbolsOut_TDATA_int_regslice;
reg    symbolsOut_TVALID_int_regslice;
wire    symbolsOut_TREADY_int_regslice;
wire    regslice_both_symbolsOut_V_data_V_U_vld_out;
wire    regslice_both_symbolsOut_V_keep_V_U_apdone_blk;
wire    regslice_both_symbolsOut_V_keep_V_U_ack_in_dummy;
wire    regslice_both_symbolsOut_V_keep_V_U_vld_out;
wire    regslice_both_symbolsOut_V_strb_V_U_apdone_blk;
wire    regslice_both_symbolsOut_V_strb_V_U_ack_in_dummy;
wire    regslice_both_symbolsOut_V_strb_V_U_vld_out;
wire    regslice_both_symbolsOut_V_last_V_U_apdone_blk;
reg   [0:0] symbolsOut_TLAST_int_regslice;
wire    regslice_both_symbolsOut_V_last_V_U_ack_in_dummy;
wire    regslice_both_symbolsOut_V_last_V_U_vld_out;
reg    ap_condition_769;
reg    ap_condition_3831;
reg    ap_condition_1036;
reg    ap_condition_1022;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 modOrder_0_data_reg = 4'd0;
#0 modOrder_0_vld_reg = 1'b0;
#0 nBitsdivSSRbits_0_data_reg = 12'd0;
#0 nBitsdivSSRbits_0_vld_reg = 1'b0;
#0 leftBits_0_data_reg = 6'd0;
#0 leftBits_0_vld_reg = 1'b0;
#0 b0_disable_V = 1'd0;
#0 b0_loop_i = 32'd0;
#0 b0_enable_V = 1'd0;
#0 ap_CS_fsm = 16'd1;
#0 icmp_ln84_reg_4747 = 1'd0;
#0 empty_21_reg_441 = 1'd0;
#0 and_ln154_reg_4785 = 1'd0;
#0 cmp_i_i51_reg_4781 = 1'd0;
#0 and_ln154_1_reg_4789 = 1'd0;
#0 and_ln154_2_reg_4793 = 1'd0;
#0 and_ln154_3_reg_4797 = 1'd0;
#0 and_ln154_4_reg_4801 = 1'd0;
#0 and_ln154_5_reg_4805 = 1'd0;
#0 and_ln154_6_reg_4809 = 1'd0;
#0 and_ln154_7_reg_4813 = 1'd0;
#0 and_ln154_8_reg_4817 = 1'd0;
#0 and_ln154_9_reg_4821 = 1'd0;
#0 and_ln154_10_reg_4825 = 1'd0;
#0 and_ln154_11_reg_4829 = 1'd0;
#0 and_ln154_12_reg_4833 = 1'd0;
#0 and_ln154_13_reg_4837 = 1'd0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 and_ln154_14_reg_4841 = 1'd0;
#0 and_ln154_15_reg_4851 = 1'd0;
#0 icmp_ln84_reg_4747_pp0_iter1_reg = 1'd0;
#0 empty_21_reg_441_pp0_iter1_reg = 1'd0;
#0 and_ln154_15_reg_4851_pp0_iter1_reg = 1'd0;
#0 cmp_i_i51_reg_4781_pp0_iter1_reg = 1'd0;
#0 empty_20_reg_405 = 32'd0;
#0 b0_disable_V_flag_1_reg_421 = 1'd0;
#0 p_cast_reg_4355 = 72'd0;
#0 xor_ln77_61_reg_4437 = 1'd0;
#0 tmp_31_reg_4442 = 1'd0;
#0 tmp_32_reg_4447 = 1'd0;
#0 tmp_33_reg_4452 = 1'd0;
#0 tmp_34_reg_4457 = 1'd0;
#0 tmp_35_reg_4462 = 1'd0;
#0 tmp_36_reg_4467 = 1'd0;
#0 tmp_37_reg_4472 = 1'd0;
#0 tmp_38_reg_4477 = 1'd0;
#0 tmp_39_reg_4482 = 1'd0;
#0 tmp_40_reg_4487 = 1'd0;
#0 tmp_41_reg_4492 = 1'd0;
#0 tmp_42_reg_4497 = 1'd0;
#0 tmp_43_reg_4502 = 1'd0;
#0 tmp_44_reg_4507 = 1'd0;
#0 tmp_45_reg_4512 = 1'd0;
#0 tmp_46_reg_4517 = 1'd0;
#0 tmp_47_reg_4522 = 1'd0;
#0 tmp_48_reg_4527 = 1'd0;
#0 tmp_49_reg_4532 = 1'd0;
#0 tmp_50_reg_4537 = 1'd0;
#0 tmp_51_reg_4542 = 1'd0;
#0 tmp_52_reg_4547 = 1'd0;
#0 tmp_53_reg_4552 = 1'd0;
#0 tmp_54_reg_4557 = 1'd0;
#0 tmp_55_reg_4562 = 1'd0;
#0 tmp_56_reg_4567 = 1'd0;
#0 tmp_57_reg_4572 = 1'd0;
#0 tmp_58_reg_4577 = 1'd0;
#0 tmp_59_reg_4582 = 1'd0;
#0 tmp_60_reg_4587 = 1'd0;
#0 xor_ln804_reg_4592 = 1'd0;
#0 xor_ln77_1_reg_4597 = 1'd0;
#0 xor_ln77_2_reg_4602 = 1'd0;
#0 xor_ln77_3_reg_4607 = 1'd0;
#0 xor_ln77_4_reg_4612 = 1'd0;
#0 xor_ln77_5_reg_4617 = 1'd0;
#0 xor_ln77_6_reg_4622 = 1'd0;
#0 xor_ln77_7_reg_4627 = 1'd0;
#0 xor_ln77_8_reg_4632 = 1'd0;
#0 xor_ln77_9_reg_4637 = 1'd0;
#0 xor_ln77_10_reg_4642 = 1'd0;
#0 xor_ln77_11_reg_4647 = 1'd0;
#0 xor_ln77_12_reg_4652 = 1'd0;
#0 xor_ln77_13_reg_4657 = 1'd0;
#0 xor_ln77_14_reg_4662 = 1'd0;
#0 xor_ln77_15_reg_4667 = 1'd0;
#0 xor_ln77_16_reg_4672 = 1'd0;
#0 xor_ln77_17_reg_4677 = 1'd0;
#0 xor_ln77_18_reg_4682 = 1'd0;
#0 xor_ln77_19_reg_4687 = 1'd0;
#0 xor_ln77_20_reg_4692 = 1'd0;
#0 xor_ln77_21_reg_4697 = 1'd0;
#0 xor_ln77_22_reg_4702 = 1'd0;
#0 xor_ln77_23_reg_4707 = 1'd0;
#0 xor_ln77_24_reg_4712 = 1'd0;
#0 xor_ln77_25_reg_4717 = 1'd0;
#0 xor_ln77_26_reg_4722 = 1'd0;
#0 xor_ln77_27_reg_4727 = 1'd0;
#0 xor_ln77_28_reg_4732 = 1'd0;
#0 xor_ln77_29_reg_4737 = 1'd0;
#0 xor_ln77_30_reg_4742 = 1'd0;
#0 cmp102_reg_4751 = 1'd0;
#0 cmp_i_i123_reg_4756 = 1'd0;
#0 leftBits_cast_reg_4776 = 7'd0;
#0 p_Result_42_reg_4845 = 2'd0;
#0 sub_i_i115_reg_4855 = 7'd0;
#0 modSymOutT_last_V_reg_4874 = 1'd0;
#0 modSymOutT_last_V_1_reg_4886 = 1'd0;
#0 modSymOutT_last_V_3_reg_4908 = 1'd0;
#0 or_ln144_2_reg_4914 = 1'd0;
#0 or_ln144_18_reg_4919 = 1'd0;
#0 modSymOutT_last_V_5_reg_4939 = 1'd0;
#0 modSymOutT_last_V_6_reg_4944 = 1'd0;
#0 modSymOutT_last_V_7_reg_4949 = 1'd0;
#0 modSymOutT_last_V_8_reg_4954 = 1'd0;
#0 modSymOutT_last_V_9_reg_4959 = 1'd0;
#0 modSymOutT_last_V_10_reg_4964 = 1'd0;
#0 modSymOutT_last_V_11_reg_4969 = 1'd0;
#0 modSymOutT_last_V_12_reg_4974 = 1'd0;
#0 modSymOutT_last_V_13_reg_4979 = 1'd0;
#0 modSymOutT_last_V_14_reg_4984 = 1'd0;
#0 modSymOutT_last_V_15_reg_4989 = 1'd0;
#0 ap_phi_reg_pp0_iter0_b0_disable_V_flag_1_reg_421 = 1'd0;
#0 ap_phi_reg_pp0_iter0_empty_21_reg_441 = 1'd0;
#0 ap_phi_reg_pp0_iter0_b0_disable_V_flag_3_reg_461 = 1'd0;
#0 ap_phi_reg_pp0_iter0_b0_disable_V_new_3_reg_471 = 1'd0;
end

nrPDSCH_scramblerSeq_V_ROM_AUTO_1R #(
    .DataWidth( 64 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
scramblerSeq_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(scramblerSeq_V_address0),
    .ce0(scramblerSeq_V_ce0),
    .q0(scramblerSeq_V_q0)
);

nrPDSCH_BUS_A_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_BUS_A_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_BUS_A_DATA_WIDTH ))
BUS_A_s_axi_U(
    .AWVALID(s_axi_BUS_A_AWVALID),
    .AWREADY(s_axi_BUS_A_AWREADY),
    .AWADDR(s_axi_BUS_A_AWADDR),
    .WVALID(s_axi_BUS_A_WVALID),
    .WREADY(s_axi_BUS_A_WREADY),
    .WDATA(s_axi_BUS_A_WDATA),
    .WSTRB(s_axi_BUS_A_WSTRB),
    .ARVALID(s_axi_BUS_A_ARVALID),
    .ARREADY(s_axi_BUS_A_ARREADY),
    .ARADDR(s_axi_BUS_A_ARADDR),
    .RVALID(s_axi_BUS_A_RVALID),
    .RREADY(s_axi_BUS_A_RREADY),
    .RDATA(s_axi_BUS_A_RDATA),
    .RRESP(s_axi_BUS_A_RRESP),
    .BVALID(s_axi_BUS_A_BVALID),
    .BREADY(s_axi_BUS_A_BREADY),
    .BRESP(s_axi_BUS_A_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .modOrder(modOrder),
    .nBitsdivSSRbits(nBitsdivSSRbits),
    .leftBits(leftBits)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U1(
    .din0(16'd11585),
    .din1(16'd11585),
    .din2(16'd53951),
    .din3(16'd53951),
    .din4(p_Result_s_fu_2308_p4),
    .dout(b1_modSyms_V_fu_2318_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U2(
    .din0(16'd11585),
    .din1(16'd53951),
    .din2(16'd11585),
    .din3(16'd53951),
    .din4(p_Result_s_fu_2308_p4),
    .dout(b1_modSyms_V_1_fu_2332_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U3(
    .din0(16'd11585),
    .din1(16'd11585),
    .din2(16'd53951),
    .din3(16'd53951),
    .din4(p_Result_1_fu_2346_p4),
    .dout(b1_modSyms_V_2_fu_2356_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U4(
    .din0(16'd11585),
    .din1(16'd53951),
    .din2(16'd11585),
    .din3(16'd53951),
    .din4(p_Result_1_fu_2346_p4),
    .dout(b1_modSyms_V_3_fu_2370_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U5(
    .din0(16'd11585),
    .din1(16'd11585),
    .din2(16'd53951),
    .din3(16'd53951),
    .din4(p_Result_4_fu_2448_p4),
    .dout(b1_modSyms_V_4_fu_2458_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U6(
    .din0(16'd11585),
    .din1(16'd53951),
    .din2(16'd11585),
    .din3(16'd53951),
    .din4(p_Result_4_fu_2448_p4),
    .dout(b1_modSyms_V_5_fu_2472_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U7(
    .din0(16'd11585),
    .din1(16'd11585),
    .din2(16'd53951),
    .din3(16'd53951),
    .din4(p_Result_5_fu_2486_p4),
    .dout(b1_modSyms_V_6_fu_2496_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U8(
    .din0(16'd11585),
    .din1(16'd53951),
    .din2(16'd11585),
    .din3(16'd53951),
    .din4(p_Result_5_fu_2486_p4),
    .dout(b1_modSyms_V_7_fu_2510_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U9(
    .din0(16'd11585),
    .din1(16'd11585),
    .din2(16'd53951),
    .din3(16'd53951),
    .din4(p_Result_7_fu_2566_p4),
    .dout(b1_modSyms_V_8_fu_2576_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U10(
    .din0(16'd11585),
    .din1(16'd53951),
    .din2(16'd11585),
    .din3(16'd53951),
    .din4(p_Result_7_fu_2566_p4),
    .dout(b1_modSyms_V_9_fu_2590_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U11(
    .din0(16'd11585),
    .din1(16'd11585),
    .din2(16'd53951),
    .din3(16'd53951),
    .din4(p_Result_8_fu_2604_p4),
    .dout(b1_modSyms_V_10_fu_2614_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U12(
    .din0(16'd11585),
    .din1(16'd53951),
    .din2(16'd11585),
    .din3(16'd53951),
    .din4(p_Result_8_fu_2604_p4),
    .dout(b1_modSyms_V_11_fu_2628_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U13(
    .din0(16'd11585),
    .din1(16'd11585),
    .din2(16'd53951),
    .din3(16'd53951),
    .din4(p_Result_s_22_fu_2726_p4),
    .dout(b1_modSyms_V_12_fu_2736_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U14(
    .din0(16'd11585),
    .din1(16'd53951),
    .din2(16'd11585),
    .din3(16'd53951),
    .din4(p_Result_s_22_fu_2726_p4),
    .dout(b1_modSyms_V_13_fu_2750_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U15(
    .din0(16'd11585),
    .din1(16'd11585),
    .din2(16'd53951),
    .din3(16'd53951),
    .din4(p_Result_2_fu_2764_p4),
    .dout(b1_modSyms_V_14_fu_2774_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U16(
    .din0(16'd11585),
    .din1(16'd53951),
    .din2(16'd11585),
    .din3(16'd53951),
    .din4(p_Result_2_fu_2764_p4),
    .dout(b1_modSyms_V_15_fu_2788_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U17(
    .din0(16'd11585),
    .din1(16'd11585),
    .din2(16'd53951),
    .din3(16'd53951),
    .din4(p_Result_6_fu_2833_p4),
    .dout(b1_modSyms_V_16_fu_2843_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U18(
    .din0(16'd11585),
    .din1(16'd53951),
    .din2(16'd11585),
    .din3(16'd53951),
    .din4(p_Result_6_fu_2833_p4),
    .dout(b1_modSyms_V_17_fu_2857_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U19(
    .din0(16'd11585),
    .din1(16'd11585),
    .din2(16'd53951),
    .din3(16'd53951),
    .din4(p_Result_9_fu_2871_p4),
    .dout(b1_modSyms_V_18_fu_2881_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U20(
    .din0(16'd11585),
    .din1(16'd53951),
    .din2(16'd11585),
    .din3(16'd53951),
    .din4(p_Result_9_fu_2871_p4),
    .dout(b1_modSyms_V_19_fu_2895_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U21(
    .din0(16'd11585),
    .din1(16'd11585),
    .din2(16'd53951),
    .din3(16'd53951),
    .din4(p_Result_11_fu_3202_p4),
    .dout(b1_modSyms_V_20_fu_3212_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U22(
    .din0(16'd11585),
    .din1(16'd53951),
    .din2(16'd11585),
    .din3(16'd53951),
    .din4(p_Result_11_fu_3202_p4),
    .dout(b1_modSyms_V_21_fu_3226_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U23(
    .din0(16'd11585),
    .din1(16'd11585),
    .din2(16'd53951),
    .din3(16'd53951),
    .din4(p_Result_12_fu_3240_p4),
    .dout(b1_modSyms_V_22_fu_3250_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U24(
    .din0(16'd11585),
    .din1(16'd53951),
    .din2(16'd11585),
    .din3(16'd53951),
    .din4(p_Result_12_fu_3240_p4),
    .dout(b1_modSyms_V_23_fu_3264_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U25(
    .din0(16'd11585),
    .din1(16'd11585),
    .din2(16'd53951),
    .din3(16'd53951),
    .din4(p_Result_14_fu_3315_p4),
    .dout(b1_modSyms_V_24_fu_3325_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U26(
    .din0(16'd11585),
    .din1(16'd53951),
    .din2(16'd11585),
    .din3(16'd53951),
    .din4(p_Result_14_fu_3315_p4),
    .dout(b1_modSyms_V_25_fu_3339_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U27(
    .din0(16'd11585),
    .din1(16'd11585),
    .din2(16'd53951),
    .din3(16'd53951),
    .din4(p_Result_15_fu_3353_p4),
    .dout(b1_modSyms_V_26_fu_3363_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U28(
    .din0(16'd11585),
    .din1(16'd53951),
    .din2(16'd11585),
    .din3(16'd53951),
    .din4(p_Result_15_fu_3353_p4),
    .dout(b1_modSyms_V_27_fu_3377_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U29(
    .din0(16'd11585),
    .din1(16'd11585),
    .din2(16'd53951),
    .din3(16'd53951),
    .din4(p_Result_17_fu_3422_p4),
    .dout(b1_modSyms_V_28_fu_3432_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U30(
    .din0(16'd11585),
    .din1(16'd53951),
    .din2(16'd11585),
    .din3(16'd53951),
    .din4(p_Result_17_fu_3422_p4),
    .dout(b1_modSyms_V_29_fu_3446_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U31(
    .din0(16'd11585),
    .din1(16'd11585),
    .din2(16'd53951),
    .din3(16'd53951),
    .din4(p_Result_18_fu_3460_p4),
    .dout(b1_modSyms_V_30_fu_3470_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U32(
    .din0(16'd11585),
    .din1(16'd53951),
    .din2(16'd11585),
    .din3(16'd53951),
    .din4(p_Result_18_fu_3460_p4),
    .dout(b1_modSyms_V_31_fu_3484_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U33(
    .din0(16'd11585),
    .din1(16'd11585),
    .din2(16'd53951),
    .din3(16'd53951),
    .din4(p_Result_20_fu_3529_p4),
    .dout(b1_modSyms_V_32_fu_3539_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U34(
    .din0(16'd11585),
    .din1(16'd53951),
    .din2(16'd11585),
    .din3(16'd53951),
    .din4(p_Result_20_fu_3529_p4),
    .dout(b1_modSyms_V_33_fu_3553_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U35(
    .din0(16'd11585),
    .din1(16'd11585),
    .din2(16'd53951),
    .din3(16'd53951),
    .din4(p_Result_21_fu_3567_p4),
    .dout(b1_modSyms_V_34_fu_3577_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U36(
    .din0(16'd11585),
    .din1(16'd53951),
    .din2(16'd11585),
    .din3(16'd53951),
    .din4(p_Result_21_fu_3567_p4),
    .dout(b1_modSyms_V_35_fu_3591_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U37(
    .din0(16'd11585),
    .din1(16'd11585),
    .din2(16'd53951),
    .din3(16'd53951),
    .din4(p_Result_23_fu_3636_p4),
    .dout(b1_modSyms_V_36_fu_3646_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U38(
    .din0(16'd11585),
    .din1(16'd53951),
    .din2(16'd11585),
    .din3(16'd53951),
    .din4(p_Result_23_fu_3636_p4),
    .dout(b1_modSyms_V_37_fu_3660_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U39(
    .din0(16'd11585),
    .din1(16'd11585),
    .din2(16'd53951),
    .din3(16'd53951),
    .din4(p_Result_24_fu_3674_p4),
    .dout(b1_modSyms_V_38_fu_3684_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U40(
    .din0(16'd11585),
    .din1(16'd53951),
    .din2(16'd11585),
    .din3(16'd53951),
    .din4(p_Result_24_fu_3674_p4),
    .dout(b1_modSyms_V_39_fu_3698_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U41(
    .din0(16'd11585),
    .din1(16'd11585),
    .din2(16'd53951),
    .din3(16'd53951),
    .din4(p_Result_26_fu_3743_p4),
    .dout(b1_modSyms_V_40_fu_3753_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U42(
    .din0(16'd11585),
    .din1(16'd53951),
    .din2(16'd11585),
    .din3(16'd53951),
    .din4(p_Result_26_fu_3743_p4),
    .dout(b1_modSyms_V_41_fu_3767_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U43(
    .din0(16'd11585),
    .din1(16'd11585),
    .din2(16'd53951),
    .din3(16'd53951),
    .din4(p_Result_27_fu_3781_p4),
    .dout(b1_modSyms_V_42_fu_3791_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U44(
    .din0(16'd11585),
    .din1(16'd53951),
    .din2(16'd11585),
    .din3(16'd53951),
    .din4(p_Result_27_fu_3781_p4),
    .dout(b1_modSyms_V_43_fu_3805_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U45(
    .din0(16'd11585),
    .din1(16'd11585),
    .din2(16'd53951),
    .din3(16'd53951),
    .din4(p_Result_29_fu_3850_p4),
    .dout(b1_modSyms_V_44_fu_3860_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U46(
    .din0(16'd11585),
    .din1(16'd53951),
    .din2(16'd11585),
    .din3(16'd53951),
    .din4(p_Result_29_fu_3850_p4),
    .dout(b1_modSyms_V_45_fu_3874_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U47(
    .din0(16'd11585),
    .din1(16'd11585),
    .din2(16'd53951),
    .din3(16'd53951),
    .din4(p_Result_30_fu_3888_p4),
    .dout(b1_modSyms_V_46_fu_3898_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U48(
    .din0(16'd11585),
    .din1(16'd53951),
    .din2(16'd11585),
    .din3(16'd53951),
    .din4(p_Result_30_fu_3888_p4),
    .dout(b1_modSyms_V_47_fu_3912_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U49(
    .din0(16'd11585),
    .din1(16'd11585),
    .din2(16'd53951),
    .din3(16'd53951),
    .din4(p_Result_32_fu_3957_p4),
    .dout(b1_modSyms_V_48_fu_3967_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U50(
    .din0(16'd11585),
    .din1(16'd53951),
    .din2(16'd11585),
    .din3(16'd53951),
    .din4(p_Result_32_fu_3957_p4),
    .dout(b1_modSyms_V_49_fu_3981_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U51(
    .din0(16'd11585),
    .din1(16'd11585),
    .din2(16'd53951),
    .din3(16'd53951),
    .din4(p_Result_33_fu_3995_p4),
    .dout(b1_modSyms_V_50_fu_4005_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U52(
    .din0(16'd11585),
    .din1(16'd53951),
    .din2(16'd11585),
    .din3(16'd53951),
    .din4(p_Result_33_fu_3995_p4),
    .dout(b1_modSyms_V_51_fu_4019_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U53(
    .din0(16'd11585),
    .din1(16'd11585),
    .din2(16'd53951),
    .din3(16'd53951),
    .din4(p_Result_35_fu_4064_p4),
    .dout(b1_modSyms_V_52_fu_4074_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U54(
    .din0(16'd11585),
    .din1(16'd53951),
    .din2(16'd11585),
    .din3(16'd53951),
    .din4(p_Result_35_fu_4064_p4),
    .dout(b1_modSyms_V_53_fu_4088_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U55(
    .din0(16'd11585),
    .din1(16'd11585),
    .din2(16'd53951),
    .din3(16'd53951),
    .din4(p_Result_36_fu_4102_p4),
    .dout(b1_modSyms_V_54_fu_4112_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U56(
    .din0(16'd11585),
    .din1(16'd53951),
    .din2(16'd11585),
    .din3(16'd53951),
    .din4(p_Result_36_fu_4102_p4),
    .dout(b1_modSyms_V_55_fu_4126_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U57(
    .din0(16'd11585),
    .din1(16'd11585),
    .din2(16'd53951),
    .din3(16'd53951),
    .din4(p_Result_38_fu_4171_p4),
    .dout(b1_modSyms_V_56_fu_4181_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U58(
    .din0(16'd11585),
    .din1(16'd53951),
    .din2(16'd11585),
    .din3(16'd53951),
    .din4(p_Result_38_fu_4171_p4),
    .dout(b1_modSyms_V_57_fu_4195_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U59(
    .din0(16'd11585),
    .din1(16'd11585),
    .din2(16'd53951),
    .din3(16'd53951),
    .din4(p_Result_39_fu_4209_p4),
    .dout(b1_modSyms_V_58_fu_4219_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U60(
    .din0(16'd11585),
    .din1(16'd53951),
    .din2(16'd11585),
    .din3(16'd53951),
    .din4(p_Result_39_fu_4209_p4),
    .dout(b1_modSyms_V_59_fu_4233_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U61(
    .din0(16'd11585),
    .din1(16'd11585),
    .din2(16'd53951),
    .din3(16'd53951),
    .din4(p_Result_41_fu_4272_p4),
    .dout(b1_modSyms_V_60_fu_4282_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U62(
    .din0(16'd11585),
    .din1(16'd53951),
    .din2(16'd11585),
    .din3(16'd53951),
    .din4(p_Result_41_fu_4272_p4),
    .dout(b1_modSyms_V_61_fu_4296_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U63(
    .din0(16'd11585),
    .din1(16'd11585),
    .din2(16'd53951),
    .din3(16'd53951),
    .din4(p_Result_42_reg_4845),
    .dout(b1_modSyms_V_62_fu_4310_p6)
);

nrPDSCH_mux_42_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 16 ))
mux_42_16_1_1_U64(
    .din0(16'd11585),
    .din1(16'd53951),
    .din2(16'd11585),
    .din3(16'd53951),
    .din4(p_Result_42_reg_4845),
    .dout(b1_modSyms_V_63_fu_4323_p6)
);

nrPDSCH_regslice_both #(
    .DataWidth( 72 ))
regslice_both_bitsIn_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(bitsIn_TDATA),
    .vld_in(bitsIn_TVALID),
    .ack_in(regslice_both_bitsIn_V_data_V_U_ack_in),
    .data_out(bitsIn_TDATA_int_regslice),
    .vld_out(bitsIn_TVALID_int_regslice),
    .ack_out(bitsIn_TREADY_int_regslice),
    .apdone_blk(regslice_both_bitsIn_V_data_V_U_apdone_blk)
);

nrPDSCH_regslice_both #(
    .DataWidth( 9 ))
regslice_both_bitsIn_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(bitsIn_TKEEP),
    .vld_in(bitsIn_TVALID),
    .ack_in(regslice_both_bitsIn_V_keep_V_U_ack_in),
    .data_out(bitsIn_TKEEP_int_regslice),
    .vld_out(regslice_both_bitsIn_V_keep_V_U_vld_out),
    .ack_out(bitsIn_TREADY_int_regslice),
    .apdone_blk(regslice_both_bitsIn_V_keep_V_U_apdone_blk)
);

nrPDSCH_regslice_both #(
    .DataWidth( 9 ))
regslice_both_bitsIn_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(bitsIn_TSTRB),
    .vld_in(bitsIn_TVALID),
    .ack_in(regslice_both_bitsIn_V_strb_V_U_ack_in),
    .data_out(bitsIn_TSTRB_int_regslice),
    .vld_out(regslice_both_bitsIn_V_strb_V_U_vld_out),
    .ack_out(bitsIn_TREADY_int_regslice),
    .apdone_blk(regslice_both_bitsIn_V_strb_V_U_apdone_blk)
);

nrPDSCH_regslice_both #(
    .DataWidth( 1 ))
regslice_both_bitsIn_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(bitsIn_TLAST),
    .vld_in(bitsIn_TVALID),
    .ack_in(regslice_both_bitsIn_V_last_V_U_ack_in),
    .data_out(bitsIn_TLAST_int_regslice),
    .vld_out(regslice_both_bitsIn_V_last_V_U_vld_out),
    .ack_out(bitsIn_TREADY_int_regslice),
    .apdone_blk(regslice_both_bitsIn_V_last_V_U_apdone_blk)
);

nrPDSCH_regslice_both #(
    .DataWidth( 72 ))
regslice_both_symbolsOut_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(symbolsOut_TDATA_int_regslice),
    .vld_in(symbolsOut_TVALID_int_regslice),
    .ack_in(symbolsOut_TREADY_int_regslice),
    .data_out(symbolsOut_TDATA),
    .vld_out(regslice_both_symbolsOut_V_data_V_U_vld_out),
    .ack_out(symbolsOut_TREADY),
    .apdone_blk(regslice_both_symbolsOut_V_data_V_U_apdone_blk)
);

nrPDSCH_regslice_both #(
    .DataWidth( 9 ))
regslice_both_symbolsOut_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(9'd511),
    .vld_in(symbolsOut_TVALID_int_regslice),
    .ack_in(regslice_both_symbolsOut_V_keep_V_U_ack_in_dummy),
    .data_out(symbolsOut_TKEEP),
    .vld_out(regslice_both_symbolsOut_V_keep_V_U_vld_out),
    .ack_out(symbolsOut_TREADY),
    .apdone_blk(regslice_both_symbolsOut_V_keep_V_U_apdone_blk)
);

nrPDSCH_regslice_both #(
    .DataWidth( 9 ))
regslice_both_symbolsOut_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(9'd0),
    .vld_in(symbolsOut_TVALID_int_regslice),
    .ack_in(regslice_both_symbolsOut_V_strb_V_U_ack_in_dummy),
    .data_out(symbolsOut_TSTRB),
    .vld_out(regslice_both_symbolsOut_V_strb_V_U_vld_out),
    .ack_out(symbolsOut_TREADY),
    .apdone_blk(regslice_both_symbolsOut_V_strb_V_U_apdone_blk)
);

nrPDSCH_regslice_both #(
    .DataWidth( 1 ))
regslice_both_symbolsOut_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(symbolsOut_TLAST_int_regslice),
    .vld_in(symbolsOut_TVALID_int_regslice),
    .ack_in(regslice_both_symbolsOut_V_last_V_U_ack_in_dummy),
    .data_out(symbolsOut_TLAST),
    .vld_out(regslice_both_symbolsOut_V_last_V_U_vld_out),
    .ack_out(symbolsOut_TREADY),
    .apdone_blk(regslice_both_symbolsOut_V_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        and_ln154_10_reg_4825 <= 1'd0;
    end else begin
        if (((ap_phi_mux_empty_21_phi_fu_446_p8 == 1'd1) & (cmp_i_i51_fu_2077_p2 == 1'd0) & (icmp_ln84_fu_2037_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            and_ln154_10_reg_4825 <= and_ln154_10_fu_2215_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        and_ln154_11_reg_4829 <= 1'd0;
    end else begin
        if (((ap_phi_mux_empty_21_phi_fu_446_p8 == 1'd1) & (cmp_i_i51_fu_2077_p2 == 1'd0) & (icmp_ln84_fu_2037_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            and_ln154_11_reg_4829 <= and_ln154_11_fu_2227_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        and_ln154_12_reg_4833 <= 1'd0;
    end else begin
        if (((ap_phi_mux_empty_21_phi_fu_446_p8 == 1'd1) & (cmp_i_i51_fu_2077_p2 == 1'd0) & (icmp_ln84_fu_2037_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            and_ln154_12_reg_4833 <= and_ln154_12_fu_2239_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        and_ln154_13_reg_4837 <= 1'd0;
    end else begin
        if (((ap_phi_mux_empty_21_phi_fu_446_p8 == 1'd1) & (cmp_i_i51_fu_2077_p2 == 1'd0) & (icmp_ln84_fu_2037_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            and_ln154_13_reg_4837 <= and_ln154_13_fu_2251_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        and_ln154_14_reg_4841 <= 1'd0;
    end else begin
        if (((ap_phi_mux_empty_21_phi_fu_446_p8 == 1'd1) & (cmp_i_i51_fu_2077_p2 == 1'd0) & (icmp_ln84_fu_2037_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            and_ln154_14_reg_4841 <= and_ln154_14_fu_2263_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        and_ln154_15_reg_4851 <= 1'd0;
    end else begin
        if (((ap_phi_mux_empty_21_phi_fu_446_p8 == 1'd1) & (cmp_i_i51_fu_2077_p2 == 1'd0) & (icmp_ln84_fu_2037_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            and_ln154_15_reg_4851 <= and_ln154_15_fu_2285_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        and_ln154_15_reg_4851_pp0_iter1_reg <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            and_ln154_15_reg_4851_pp0_iter1_reg <= and_ln154_15_reg_4851;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        and_ln154_1_reg_4789 <= 1'd0;
    end else begin
        if (((ap_phi_mux_empty_21_phi_fu_446_p8 == 1'd1) & (cmp_i_i51_fu_2077_p2 == 1'd0) & (icmp_ln84_fu_2037_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            and_ln154_1_reg_4789 <= and_ln154_1_fu_2107_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        and_ln154_2_reg_4793 <= 1'd0;
    end else begin
        if (((ap_phi_mux_empty_21_phi_fu_446_p8 == 1'd1) & (cmp_i_i51_fu_2077_p2 == 1'd0) & (icmp_ln84_fu_2037_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            and_ln154_2_reg_4793 <= and_ln154_2_fu_2119_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        and_ln154_3_reg_4797 <= 1'd0;
    end else begin
        if (((ap_phi_mux_empty_21_phi_fu_446_p8 == 1'd1) & (cmp_i_i51_fu_2077_p2 == 1'd0) & (icmp_ln84_fu_2037_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            and_ln154_3_reg_4797 <= and_ln154_3_fu_2131_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        and_ln154_4_reg_4801 <= 1'd0;
    end else begin
        if (((ap_phi_mux_empty_21_phi_fu_446_p8 == 1'd1) & (cmp_i_i51_fu_2077_p2 == 1'd0) & (icmp_ln84_fu_2037_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            and_ln154_4_reg_4801 <= and_ln154_4_fu_2143_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        and_ln154_5_reg_4805 <= 1'd0;
    end else begin
        if (((ap_phi_mux_empty_21_phi_fu_446_p8 == 1'd1) & (cmp_i_i51_fu_2077_p2 == 1'd0) & (icmp_ln84_fu_2037_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            and_ln154_5_reg_4805 <= and_ln154_5_fu_2155_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        and_ln154_6_reg_4809 <= 1'd0;
    end else begin
        if (((ap_phi_mux_empty_21_phi_fu_446_p8 == 1'd1) & (cmp_i_i51_fu_2077_p2 == 1'd0) & (icmp_ln84_fu_2037_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            and_ln154_6_reg_4809 <= and_ln154_6_fu_2167_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        and_ln154_7_reg_4813 <= 1'd0;
    end else begin
        if (((ap_phi_mux_empty_21_phi_fu_446_p8 == 1'd1) & (cmp_i_i51_fu_2077_p2 == 1'd0) & (icmp_ln84_fu_2037_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            and_ln154_7_reg_4813 <= and_ln154_7_fu_2179_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        and_ln154_8_reg_4817 <= 1'd0;
    end else begin
        if (((ap_phi_mux_empty_21_phi_fu_446_p8 == 1'd1) & (cmp_i_i51_fu_2077_p2 == 1'd0) & (icmp_ln84_fu_2037_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            and_ln154_8_reg_4817 <= and_ln154_8_fu_2191_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        and_ln154_9_reg_4821 <= 1'd0;
    end else begin
        if (((ap_phi_mux_empty_21_phi_fu_446_p8 == 1'd1) & (cmp_i_i51_fu_2077_p2 == 1'd0) & (icmp_ln84_fu_2037_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            and_ln154_9_reg_4821 <= and_ln154_9_fu_2203_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        and_ln154_reg_4785 <= 1'd0;
    end else begin
        if (((ap_phi_mux_empty_21_phi_fu_446_p8 == 1'd1) & (cmp_i_i51_fu_2077_p2 == 1'd0) & (icmp_ln84_fu_2037_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            and_ln154_reg_4785 <= and_ln154_fu_2095_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_subdone))) begin
            ap_enable_reg_pp0_iter1 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_phi_reg_pp0_iter0_b0_disable_V_flag_1_reg_421 <= 1'd0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (b0_disable_V_load_load_fu_494_p1 == 1'd0) & (b0_enable_V_load_load_fu_503_p1 == 1'd0) & (triggerIn_s_V_fu_486_p3 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (b0_enable_V_load_load_fu_503_p1 == 1'd1) & (triggerIn_s_V_fu_486_p3 == 1'd0)))) begin
            ap_phi_reg_pp0_iter0_b0_disable_V_flag_1_reg_421 <= 1'd0;
        end else if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (b0_disable_V_load_load_fu_494_p1 == 1'd1) & (b0_enable_V_load_load_fu_503_p1 == 1'd0) & (triggerIn_s_V_fu_486_p3 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (triggerIn_s_V_fu_486_p3 == 1'd1)))) begin
            ap_phi_reg_pp0_iter0_b0_disable_V_flag_1_reg_421 <= 1'd1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_phi_reg_pp0_iter0_b0_disable_V_flag_3_reg_461 <= 1'd0;
    end else begin
        if ((1'b1 == 1'b1)) begin
            if ((1'b1 == ap_condition_3831)) begin
                ap_phi_reg_pp0_iter0_b0_disable_V_flag_3_reg_461 <= ap_phi_reg_pp0_iter0_b0_disable_V_flag_1_reg_421;
            end else if ((1'b1 == ap_condition_769)) begin
                ap_phi_reg_pp0_iter0_b0_disable_V_flag_3_reg_461 <= or_ln144_15_fu_3119_p2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_phi_reg_pp0_iter0_b0_disable_V_new_3_reg_471 <= 1'd0;
    end else begin
        if ((1'b1 == 1'b1)) begin
            if ((1'b1 == ap_condition_3831)) begin
                ap_phi_reg_pp0_iter0_b0_disable_V_new_3_reg_471 <= 1'd0;
            end else if ((1'b1 == ap_condition_769)) begin
                ap_phi_reg_pp0_iter0_b0_disable_V_new_3_reg_471 <= or_ln144_29_fu_3184_p2;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_phi_reg_pp0_iter0_empty_21_reg_441 <= 1'd0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (b0_disable_V_load_load_fu_494_p1 == 1'd0) & (b0_enable_V_load_load_fu_503_p1 == 1'd0) & (triggerIn_s_V_fu_486_p3 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (b0_disable_V_load_load_fu_494_p1 == 1'd1) & (b0_enable_V_load_load_fu_503_p1 == 1'd0) & (triggerIn_s_V_fu_486_p3 == 1'd0)))) begin
            ap_phi_reg_pp0_iter0_empty_21_reg_441 <= 1'd0;
        end else if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (b0_enable_V_load_load_fu_503_p1 == 1'd1) & (triggerIn_s_V_fu_486_p3 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (triggerIn_s_V_fu_486_p3 == 1'd1)))) begin
            ap_phi_reg_pp0_iter0_empty_21_reg_441 <= 1'd1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        b0_disable_V <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == 1'b1) & (ap_phi_mux_b0_disable_V_flag_3_phi_fu_464_p4 == 1'd1))) begin
            b0_disable_V <= ap_phi_reg_pp0_iter0_b0_disable_V_new_3_reg_471;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        b0_disable_V_flag_1_reg_421 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == 1'b1))) begin
            b0_disable_V_flag_1_reg_421 <= ap_phi_reg_pp0_iter0_b0_disable_V_flag_1_reg_421;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        b0_enable_V <= 1'd0;
    end else begin
        if ((1'b1 == ap_condition_1022)) begin
            if ((triggerIn_s_V_fu_486_p3 == 1'd1)) begin
                b0_enable_V <= 1'd1;
            end else if ((1'b1 == ap_condition_1036)) begin
                b0_enable_V <= 1'd0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        b0_loop_i <= 32'd0;
    end else begin
        if ((1'b1 == ap_condition_1022)) begin
            if ((triggerIn_s_V_fu_486_p3 == 1'd1)) begin
                b0_loop_i <= 32'd0;
            end else if (((b0_enable_V_load_load_fu_503_p1 == 1'd1) & (triggerIn_s_V_fu_486_p3 == 1'd0))) begin
                b0_loop_i <= add_ln66_fu_519_p2;
            end else if ((1'b1 == ap_condition_1036)) begin
                b0_loop_i <= 32'd0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        cmp102_reg_4751 <= 1'd0;
    end else begin
        if (((icmp_ln84_fu_2037_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            cmp102_reg_4751 <= cmp102_fu_2043_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        cmp_i_i123_reg_4756 <= 1'd0;
    end else begin
        if (((icmp_ln84_fu_2037_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            cmp_i_i123_reg_4756 <= cmp_i_i123_fu_2067_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        cmp_i_i51_reg_4781 <= 1'd0;
    end else begin
        if (((icmp_ln84_fu_2037_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            cmp_i_i51_reg_4781 <= cmp_i_i51_fu_2077_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        cmp_i_i51_reg_4781_pp0_iter1_reg <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            cmp_i_i51_reg_4781_pp0_iter1_reg <= cmp_i_i51_reg_4781;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        empty_20_reg_405 <= 32'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (b0_disable_V_load_load_fu_494_p1 == 1'd0) & (b0_enable_V_load_load_fu_503_p1 == 1'd0) & (triggerIn_s_V_fu_486_p3 == 1'd0))) begin
            empty_20_reg_405 <= b0_loop_i;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (b0_enable_V_load_load_fu_503_p1 == 1'd1) & (triggerIn_s_V_fu_486_p3 == 1'd0))) begin
            empty_20_reg_405 <= add_ln66_fu_519_p2;
        end else if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (b0_disable_V_load_load_fu_494_p1 == 1'd1) & (b0_enable_V_load_load_fu_503_p1 == 1'd0) & (triggerIn_s_V_fu_486_p3 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1) & (triggerIn_s_V_fu_486_p3 == 1'd1)))) begin
            empty_20_reg_405 <= 32'd0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1))) begin
            empty_20_reg_405 <= ap_phi_reg_pp0_iter0_empty_20_reg_405;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        empty_21_reg_441 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == 1'b1))) begin
            empty_21_reg_441 <= ap_phi_reg_pp0_iter0_empty_21_reg_441;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        empty_21_reg_441_pp0_iter1_reg <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            empty_21_reg_441_pp0_iter1_reg <= empty_21_reg_441;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        icmp_ln84_reg_4747 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            icmp_ln84_reg_4747 <= icmp_ln84_fu_2037_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        icmp_ln84_reg_4747_pp0_iter1_reg <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            icmp_ln84_reg_4747_pp0_iter1_reg <= icmp_ln84_reg_4747;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        leftBits_0_data_reg <= 6'd0;
    end else begin
        if ((((leftBits_0_ack_out == 1'b1) & (1'b1 == 1'b1) & (leftBits_0_vld_reg == 1'b1)) | ((1'b1 == 1'b1) & (leftBits_0_vld_reg == 1'b0)))) begin
            leftBits_0_data_reg <= leftBits;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
                leftBits_cast_reg_4776[0] <= 1'b0;
        leftBits_cast_reg_4776[1] <= 1'b0;
        leftBits_cast_reg_4776[2] <= 1'b0;
        leftBits_cast_reg_4776[3] <= 1'b0;
        leftBits_cast_reg_4776[4] <= 1'b0;
        leftBits_cast_reg_4776[5] <= 1'b0;
    end else begin
        if (((icmp_ln84_fu_2037_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
                        leftBits_cast_reg_4776[5 : 0] <= leftBits_cast_fu_2073_p1[5 : 0];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        modOrder_0_data_reg <= 4'd0;
    end else begin
        if ((((modOrder_0_ack_out == 1'b1) & (1'b1 == 1'b1) & (modOrder_0_vld_reg == 1'b1)) | ((1'b1 == 1'b1) & (modOrder_0_vld_reg == 1'b0)))) begin
            modOrder_0_data_reg <= modOrder;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        modSymOutT_last_V_10_reg_4964 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln84_reg_4747 == 1'd1) & (1'b0 == ap_block_pp0_stage6_11001))) begin
            modSymOutT_last_V_10_reg_4964 <= modSymOutT_last_V_10_fu_2994_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        modSymOutT_last_V_11_reg_4969 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln84_reg_4747 == 1'd1) & (1'b0 == ap_block_pp0_stage6_11001))) begin
            modSymOutT_last_V_11_reg_4969 <= modSymOutT_last_V_11_fu_3004_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        modSymOutT_last_V_12_reg_4974 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln84_reg_4747 == 1'd1) & (1'b0 == ap_block_pp0_stage6_11001))) begin
            modSymOutT_last_V_12_reg_4974 <= modSymOutT_last_V_12_fu_3014_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        modSymOutT_last_V_13_reg_4979 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln84_reg_4747 == 1'd1) & (1'b0 == ap_block_pp0_stage6_11001))) begin
            modSymOutT_last_V_13_reg_4979 <= modSymOutT_last_V_13_fu_3024_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        modSymOutT_last_V_14_reg_4984 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln84_reg_4747 == 1'd1) & (1'b0 == ap_block_pp0_stage6_11001))) begin
            modSymOutT_last_V_14_reg_4984 <= modSymOutT_last_V_14_fu_3034_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        modSymOutT_last_V_15_reg_4989 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln84_reg_4747 == 1'd1) & (1'b0 == ap_block_pp0_stage6_11001))) begin
            modSymOutT_last_V_15_reg_4989 <= modSymOutT_last_V_15_fu_3044_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        modSymOutT_last_V_1_reg_4886 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln84_reg_4747 == 1'd1) & (1'b0 == ap_block_pp0_stage3_11001))) begin
            modSymOutT_last_V_1_reg_4886 <= modSymOutT_last_V_1_fu_2543_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        modSymOutT_last_V_3_reg_4908 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln84_reg_4747 == 1'd1) & (1'b0 == ap_block_pp0_stage4_11001))) begin
            modSymOutT_last_V_3_reg_4908 <= modSymOutT_last_V_3_fu_2677_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        modSymOutT_last_V_5_reg_4939 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln84_reg_4747 == 1'd1) & (1'b0 == ap_block_pp0_stage6_11001))) begin
            modSymOutT_last_V_5_reg_4939 <= modSymOutT_last_V_5_fu_2944_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        modSymOutT_last_V_6_reg_4944 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln84_reg_4747 == 1'd1) & (1'b0 == ap_block_pp0_stage6_11001))) begin
            modSymOutT_last_V_6_reg_4944 <= modSymOutT_last_V_6_fu_2954_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        modSymOutT_last_V_7_reg_4949 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln84_reg_4747 == 1'd1) & (1'b0 == ap_block_pp0_stage6_11001))) begin
            modSymOutT_last_V_7_reg_4949 <= modSymOutT_last_V_7_fu_2964_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        modSymOutT_last_V_8_reg_4954 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln84_reg_4747 == 1'd1) & (1'b0 == ap_block_pp0_stage6_11001))) begin
            modSymOutT_last_V_8_reg_4954 <= modSymOutT_last_V_8_fu_2974_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        modSymOutT_last_V_9_reg_4959 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln84_reg_4747 == 1'd1) & (1'b0 == ap_block_pp0_stage6_11001))) begin
            modSymOutT_last_V_9_reg_4959 <= modSymOutT_last_V_9_fu_2984_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        modSymOutT_last_V_reg_4874 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln84_reg_4747 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001))) begin
            modSymOutT_last_V_reg_4874 <= modSymOutT_last_V_fu_2425_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        nBitsdivSSRbits_0_data_reg <= 12'd0;
    end else begin
        if ((((nBitsdivSSRbits_0_ack_out == 1'b1) & (1'b1 == 1'b1) & (nBitsdivSSRbits_0_vld_reg == 1'b1)) | ((1'b1 == 1'b1) & (nBitsdivSSRbits_0_vld_reg == 1'b0)))) begin
            nBitsdivSSRbits_0_data_reg <= nBitsdivSSRbits;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        or_ln144_18_reg_4919 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln84_reg_4747 == 1'd1) & (1'b0 == ap_block_pp0_stage4_11001))) begin
            or_ln144_18_reg_4919 <= or_ln144_18_fu_2708_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        or_ln144_2_reg_4914 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln84_reg_4747 == 1'd1) & (1'b0 == ap_block_pp0_stage4_11001))) begin
            or_ln144_2_reg_4914 <= or_ln144_2_fu_2692_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        p_Result_42_reg_4845 <= 2'd0;
    end else begin
        if (((icmp_ln84_fu_2037_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            p_Result_42_reg_4845 <= p_Result_42_fu_2269_p4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        p_cast_reg_4355 <= 72'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
            p_cast_reg_4355 <= bitsIn_TDATA_int_regslice;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        sub_i_i115_reg_4855 <= 7'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln84_reg_4747 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001))) begin
            sub_i_i115_reg_4855 <= sub_i_i115_fu_2303_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        tmp_31_reg_4442 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            tmp_31_reg_4442 <= xor_ln77_60_fu_940_p2[32'd1];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        tmp_32_reg_4447 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            tmp_32_reg_4447 <= xor_ln77_59_fu_934_p2[32'd2];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        tmp_33_reg_4452 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            tmp_33_reg_4452 <= xor_ln77_58_fu_928_p2[32'd3];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        tmp_34_reg_4457 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            tmp_34_reg_4457 <= xor_ln77_57_fu_922_p2[32'd4];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        tmp_35_reg_4462 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            tmp_35_reg_4462 <= xor_ln77_56_fu_916_p2[32'd5];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        tmp_36_reg_4467 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            tmp_36_reg_4467 <= xor_ln77_55_fu_910_p2[32'd6];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        tmp_37_reg_4472 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            tmp_37_reg_4472 <= xor_ln77_54_fu_904_p2[32'd7];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        tmp_38_reg_4477 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            tmp_38_reg_4477 <= xor_ln77_53_fu_898_p2[32'd8];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        tmp_39_reg_4482 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            tmp_39_reg_4482 <= xor_ln77_52_fu_892_p2[32'd9];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        tmp_40_reg_4487 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            tmp_40_reg_4487 <= xor_ln77_51_fu_886_p2[32'd10];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        tmp_41_reg_4492 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            tmp_41_reg_4492 <= xor_ln77_50_fu_880_p2[32'd11];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        tmp_42_reg_4497 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            tmp_42_reg_4497 <= xor_ln77_49_fu_874_p2[32'd12];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        tmp_43_reg_4502 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            tmp_43_reg_4502 <= xor_ln77_48_fu_868_p2[32'd13];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        tmp_44_reg_4507 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            tmp_44_reg_4507 <= xor_ln77_47_fu_862_p2[32'd14];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        tmp_45_reg_4512 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            tmp_45_reg_4512 <= xor_ln77_46_fu_856_p2[32'd15];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        tmp_46_reg_4517 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            tmp_46_reg_4517 <= xor_ln77_45_fu_850_p2[32'd16];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        tmp_47_reg_4522 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            tmp_47_reg_4522 <= xor_ln77_44_fu_844_p2[32'd17];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        tmp_48_reg_4527 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            tmp_48_reg_4527 <= xor_ln77_43_fu_838_p2[32'd18];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        tmp_49_reg_4532 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            tmp_49_reg_4532 <= xor_ln77_42_fu_832_p2[32'd19];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        tmp_50_reg_4537 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            tmp_50_reg_4537 <= xor_ln77_41_fu_826_p2[32'd20];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        tmp_51_reg_4542 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            tmp_51_reg_4542 <= xor_ln77_40_fu_820_p2[32'd21];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        tmp_52_reg_4547 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            tmp_52_reg_4547 <= xor_ln77_39_fu_814_p2[32'd22];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        tmp_53_reg_4552 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            tmp_53_reg_4552 <= xor_ln77_38_fu_808_p2[32'd23];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        tmp_54_reg_4557 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            tmp_54_reg_4557 <= xor_ln77_37_fu_802_p2[32'd24];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        tmp_55_reg_4562 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            tmp_55_reg_4562 <= xor_ln77_36_fu_796_p2[32'd25];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        tmp_56_reg_4567 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            tmp_56_reg_4567 <= xor_ln77_35_fu_790_p2[32'd26];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        tmp_57_reg_4572 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            tmp_57_reg_4572 <= xor_ln77_34_fu_784_p2[32'd27];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        tmp_58_reg_4577 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            tmp_58_reg_4577 <= xor_ln77_33_fu_778_p2[32'd28];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        tmp_59_reg_4582 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            tmp_59_reg_4582 <= xor_ln77_32_fu_772_p2[32'd29];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        tmp_60_reg_4587 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            tmp_60_reg_4587 <= xor_ln77_fu_766_p2[32'd30];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        xor_ln77_10_reg_4642 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            xor_ln77_10_reg_4642 <= xor_ln77_10_fu_1417_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        xor_ln77_11_reg_4647 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            xor_ln77_11_reg_4647 <= xor_ln77_11_fu_1438_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        xor_ln77_12_reg_4652 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            xor_ln77_12_reg_4652 <= xor_ln77_12_fu_1459_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        xor_ln77_13_reg_4657 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            xor_ln77_13_reg_4657 <= xor_ln77_13_fu_1480_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        xor_ln77_14_reg_4662 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            xor_ln77_14_reg_4662 <= xor_ln77_14_fu_1501_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        xor_ln77_15_reg_4667 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            xor_ln77_15_reg_4667 <= xor_ln77_15_fu_1522_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        xor_ln77_16_reg_4672 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            xor_ln77_16_reg_4672 <= xor_ln77_16_fu_1543_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        xor_ln77_17_reg_4677 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            xor_ln77_17_reg_4677 <= xor_ln77_17_fu_1564_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        xor_ln77_18_reg_4682 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            xor_ln77_18_reg_4682 <= xor_ln77_18_fu_1585_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        xor_ln77_19_reg_4687 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            xor_ln77_19_reg_4687 <= xor_ln77_19_fu_1606_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        xor_ln77_1_reg_4597 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            xor_ln77_1_reg_4597 <= xor_ln77_1_fu_1228_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        xor_ln77_20_reg_4692 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            xor_ln77_20_reg_4692 <= xor_ln77_20_fu_1627_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        xor_ln77_21_reg_4697 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            xor_ln77_21_reg_4697 <= xor_ln77_21_fu_1648_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        xor_ln77_22_reg_4702 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            xor_ln77_22_reg_4702 <= xor_ln77_22_fu_1669_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        xor_ln77_23_reg_4707 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            xor_ln77_23_reg_4707 <= xor_ln77_23_fu_1690_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        xor_ln77_24_reg_4712 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            xor_ln77_24_reg_4712 <= xor_ln77_24_fu_1711_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        xor_ln77_25_reg_4717 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            xor_ln77_25_reg_4717 <= xor_ln77_25_fu_1732_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        xor_ln77_26_reg_4722 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            xor_ln77_26_reg_4722 <= xor_ln77_26_fu_1753_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        xor_ln77_27_reg_4727 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            xor_ln77_27_reg_4727 <= xor_ln77_27_fu_1774_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        xor_ln77_28_reg_4732 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            xor_ln77_28_reg_4732 <= xor_ln77_28_fu_1795_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        xor_ln77_29_reg_4737 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            xor_ln77_29_reg_4737 <= xor_ln77_29_fu_1816_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        xor_ln77_2_reg_4602 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            xor_ln77_2_reg_4602 <= xor_ln77_2_fu_1249_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        xor_ln77_30_reg_4742 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            xor_ln77_30_reg_4742 <= xor_ln77_30_fu_1837_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        xor_ln77_3_reg_4607 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            xor_ln77_3_reg_4607 <= xor_ln77_3_fu_1270_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        xor_ln77_4_reg_4612 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            xor_ln77_4_reg_4612 <= xor_ln77_4_fu_1291_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        xor_ln77_5_reg_4617 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            xor_ln77_5_reg_4617 <= xor_ln77_5_fu_1312_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        xor_ln77_61_reg_4437 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            xor_ln77_61_reg_4437 <= xor_ln77_61_fu_946_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        xor_ln77_6_reg_4622 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            xor_ln77_6_reg_4622 <= xor_ln77_6_fu_1333_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        xor_ln77_7_reg_4627 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            xor_ln77_7_reg_4627 <= xor_ln77_7_fu_1354_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        xor_ln77_8_reg_4632 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            xor_ln77_8_reg_4632 <= xor_ln77_8_fu_1375_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        xor_ln77_9_reg_4637 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            xor_ln77_9_reg_4637 <= xor_ln77_9_fu_1396_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        xor_ln804_reg_4592 <= 1'd0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
            xor_ln804_reg_4592 <= xor_ln804_fu_1207_p2;
        end
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((b0_disable_V_load_load_fu_494_p1 == 1'd0) & (b0_enable_V_load_load_fu_503_p1 == 1'd0) & (triggerIn_s_V_fu_486_p3 == 1'd0))) begin
        ap_phi_mux_empty_20_phi_fu_408_p8 = b0_loop_i;
    end else if (((b0_enable_V_load_load_fu_503_p1 == 1'd1) & (triggerIn_s_V_fu_486_p3 == 1'd0))) begin
        ap_phi_mux_empty_20_phi_fu_408_p8 = add_ln66_fu_519_p2;
    end else if (((triggerIn_s_V_fu_486_p3 == 1'd1) | ((b0_disable_V_load_load_fu_494_p1 == 1'd1) & (b0_enable_V_load_load_fu_503_p1 == 1'd0) & (triggerIn_s_V_fu_486_p3 == 1'd0)))) begin
        ap_phi_mux_empty_20_phi_fu_408_p8 = 32'd0;
    end else begin
        ap_phi_mux_empty_20_phi_fu_408_p8 = ap_phi_reg_pp0_iter0_empty_20_reg_405;
    end
end

assign ap_reset_idle_pp0 = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == 1'b1))) begin
        bitsIn_TDATA_blk_n = bitsIn_TVALID_int_regslice;
    end else begin
        bitsIn_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1))) begin
        bitsIn_TREADY_int_regslice = 1'b1;
    end else begin
        bitsIn_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == 1'b1)))) begin
        leftBits_0_ack_out = 1'b1;
    end else begin
        leftBits_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == 1'b1)))) begin
        modOrder_0_ack_out = 1'b1;
    end else begin
        modOrder_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == 1'b1)))) begin
        nBitsdivSSRbits_0_ack_out = 1'b1;
    end else begin
        nBitsdivSSRbits_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1))) begin
        scramblerSeq_V_ce0 = 1'b1;
    end else begin
        scramblerSeq_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_15_reg_4851) & (icmp_ln84_reg_4747 == 1'd1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_14_reg_4841) & (icmp_ln84_reg_4747 == 1'd1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2) & (((cmp_i_i51_reg_4781_pp0_iter1_reg == 1'd1) & (empty_21_reg_441_pp0_iter1_reg == 1'd1) & (icmp_ln84_reg_4747_pp0_iter1_reg == 1'd1)) | ((empty_21_reg_441_pp0_iter1_reg == 1'd1) & (icmp_ln84_reg_4747_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln154_15_reg_4851_pp0_iter1_reg)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_14_reg_4841) & (icmp_ln84_reg_4747 == 1'd1)))) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_13_reg_4837) & (icmp_ln84_reg_4747 == 1'd1)))) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15) & (1'b1 == 1'b1) & (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_13_reg_4837) & (icmp_ln84_reg_4747 == 1'd1)))) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15) & (1'b1 == 1'b1) & (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_12_reg_4833) & (icmp_ln84_reg_4747 == 1'd1)))) | ((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14) & (1'b1 == 1'b1) & (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_12_reg_4833) & (icmp_ln84_reg_4747 == 1'd1)))) | ((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14) & (1'b1 == 1'b1) & (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_11_reg_4829) & (icmp_ln84_reg_4747 == 1'd1)))) | ((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13) & (1'b1 == 1'b1) & (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_11_reg_4829) & (icmp_ln84_reg_4747 == 1'd1)))) | ((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13) & (1'b1 == 1'b1) & (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_10_reg_4825) & (icmp_ln84_reg_4747 == 1'd1)))) | ((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12) & (1'b1 == 1'b1) & (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_10_reg_4825) & (icmp_ln84_reg_4747 == 1'd1)))) | ((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12) & (1'b1 == 1'b1) & (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_9_reg_4821) & (icmp_ln84_reg_4747 == 1'd1)))) | ((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11) & (1'b1 == 1'b1) & (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_9_reg_4821) & (icmp_ln84_reg_4747 == 1'd1)))) | ((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11) & (1'b1 == 1'b1) & (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_8_reg_4817) & (icmp_ln84_reg_4747 == 1'd1)))) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10) & (1'b1 == 1'b1) & (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_8_reg_4817) & (icmp_ln84_reg_4747 == 1'd1)))) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10) & (1'b1 == 1'b1) & (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_7_reg_4813) & (icmp_ln84_reg_4747 == 1'd1)))) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9) & (1'b1 == 1'b1) & (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_7_reg_4813) & (icmp_ln84_reg_4747 == 1'd1)))) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9) & (1'b1 == 1'b1) & (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_6_reg_4809) & (icmp_ln84_reg_4747 == 1'd1)))) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8) & (1'b1 == 1'b1) & (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_6_reg_4809) & (icmp_ln84_reg_4747 == 1'd1)))) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8) & (1'b1 == 1'b1) & (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_5_reg_4805) & (icmp_ln84_reg_4747 == 1'd1)))) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7) & (1'b1 == 1'b1) & (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_5_reg_4805) & (icmp_ln84_reg_4747 == 1'd1)))) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7) & (1'b1 == 1'b1) & (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_4_reg_4801) & (icmp_ln84_reg_4747 == 1'd1)))) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6) & (1'b1 == 1'b1) & (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_4_reg_4801) & (icmp_ln84_reg_4747 == 1'd1)))) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6) & (1'b1 == 1'b1) & (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_3_reg_4797) & (icmp_ln84_reg_4747 == 1'd1)))) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5) & (1'b1 == 1'b1) & (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_3_reg_4797) & (icmp_ln84_reg_4747 == 1'd1)))) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5) & (1'b1 == 1'b1) & (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_2_reg_4793) & (icmp_ln84_reg_4747 == 1'd1)))) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4) & (1'b1 == 1'b1) & (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_2_reg_4793) & (icmp_ln84_reg_4747 == 1'd1)))) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4) & (1'b1 == 1'b1) & (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_1_reg_4789) & (icmp_ln84_reg_4747 == 1'd1)))) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3) & (1'b1 == 1'b1) & (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_1_reg_4789) & (icmp_ln84_reg_4747 == 1'd1)))) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3) & (1'b1 == 1'b1) & (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_reg_4785) & (icmp_ln84_reg_4747 == 1'd1)))) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == 1'b1) & (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_reg_4785) & (icmp_ln84_reg_4747 == 1'd1)))))) begin
        symbolsOut_TDATA_blk_n = symbolsOut_TREADY_int_regslice;
    end else begin
        symbolsOut_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op667_write_state18 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_01001))) begin
        symbolsOut_TDATA_int_regslice = zext_ln258_15_fu_4350_p1;
    end else if (((ap_predicate_op656_write_state17 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_01001))) begin
        symbolsOut_TDATA_int_regslice = zext_ln258_14_fu_4261_p1;
    end else if (((ap_predicate_op643_write_state16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_01001) & (1'b1 == 1'b1))) begin
        symbolsOut_TDATA_int_regslice = zext_ln258_13_fu_4154_p1;
    end else if (((ap_predicate_op630_write_state15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_01001) & (1'b1 == 1'b1))) begin
        symbolsOut_TDATA_int_regslice = zext_ln258_12_fu_4047_p1;
    end else if (((ap_predicate_op617_write_state14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_01001) & (1'b1 == 1'b1))) begin
        symbolsOut_TDATA_int_regslice = zext_ln258_11_fu_3940_p1;
    end else if (((ap_predicate_op604_write_state13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_01001) & (1'b1 == 1'b1))) begin
        symbolsOut_TDATA_int_regslice = zext_ln258_10_fu_3833_p1;
    end else if (((ap_predicate_op591_write_state12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_01001) & (1'b1 == 1'b1))) begin
        symbolsOut_TDATA_int_regslice = zext_ln258_9_fu_3726_p1;
    end else if (((ap_predicate_op578_write_state11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_01001) & (1'b1 == 1'b1))) begin
        symbolsOut_TDATA_int_regslice = zext_ln258_8_fu_3619_p1;
    end else if (((ap_predicate_op565_write_state10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_01001) & (1'b1 == 1'b1))) begin
        symbolsOut_TDATA_int_regslice = zext_ln258_7_fu_3512_p1;
    end else if (((ap_predicate_op552_write_state9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_01001) & (1'b1 == 1'b1))) begin
        symbolsOut_TDATA_int_regslice = zext_ln258_6_fu_3405_p1;
    end else if (((ap_predicate_op534_write_state8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_01001) & (1'b1 == 1'b1))) begin
        symbolsOut_TDATA_int_regslice = zext_ln258_5_fu_3292_p1;
    end else if (((ap_predicate_op474_write_state7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_01001) & (1'b1 == 1'b1))) begin
        symbolsOut_TDATA_int_regslice = zext_ln258_4_fu_2934_p1;
    end else if (((ap_predicate_op459_write_state6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_01001) & (1'b1 == 1'b1))) begin
        symbolsOut_TDATA_int_regslice = zext_ln258_3_fu_2816_p1;
    end else if (((ap_predicate_op438_write_state5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_01001) & (1'b1 == 1'b1))) begin
        symbolsOut_TDATA_int_regslice = zext_ln258_2_fu_2667_p1;
    end else if (((ap_predicate_op423_write_state4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_01001) & (1'b1 == 1'b1))) begin
        symbolsOut_TDATA_int_regslice = zext_ln258_1_fu_2549_p1;
    end else if (((ap_predicate_op408_write_state3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_01001) & (1'b1 == 1'b1))) begin
        symbolsOut_TDATA_int_regslice = zext_ln258_fu_2431_p1;
    end else begin
        symbolsOut_TDATA_int_regslice = 'bx;
    end
end

always @ (*) begin
    if (((ap_predicate_op667_write_state18 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_01001))) begin
        symbolsOut_TLAST_int_regslice = modSymOutT_last_V_15_reg_4989;
    end else if (((ap_predicate_op656_write_state17 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_01001))) begin
        symbolsOut_TLAST_int_regslice = modSymOutT_last_V_14_reg_4984;
    end else if (((ap_predicate_op643_write_state16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_01001) & (1'b1 == 1'b1))) begin
        symbolsOut_TLAST_int_regslice = modSymOutT_last_V_13_reg_4979;
    end else if (((ap_predicate_op630_write_state15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_01001) & (1'b1 == 1'b1))) begin
        symbolsOut_TLAST_int_regslice = modSymOutT_last_V_12_reg_4974;
    end else if (((ap_predicate_op617_write_state14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_01001) & (1'b1 == 1'b1))) begin
        symbolsOut_TLAST_int_regslice = modSymOutT_last_V_11_reg_4969;
    end else if (((ap_predicate_op604_write_state13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_01001) & (1'b1 == 1'b1))) begin
        symbolsOut_TLAST_int_regslice = modSymOutT_last_V_10_reg_4964;
    end else if (((ap_predicate_op591_write_state12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_01001) & (1'b1 == 1'b1))) begin
        symbolsOut_TLAST_int_regslice = modSymOutT_last_V_9_reg_4959;
    end else if (((ap_predicate_op578_write_state11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_01001) & (1'b1 == 1'b1))) begin
        symbolsOut_TLAST_int_regslice = modSymOutT_last_V_8_reg_4954;
    end else if (((ap_predicate_op565_write_state10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_01001) & (1'b1 == 1'b1))) begin
        symbolsOut_TLAST_int_regslice = modSymOutT_last_V_7_reg_4949;
    end else if (((ap_predicate_op552_write_state9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_01001) & (1'b1 == 1'b1))) begin
        symbolsOut_TLAST_int_regslice = modSymOutT_last_V_6_reg_4944;
    end else if (((ap_predicate_op534_write_state8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_01001) & (1'b1 == 1'b1))) begin
        symbolsOut_TLAST_int_regslice = modSymOutT_last_V_5_reg_4939;
    end else if (((ap_predicate_op474_write_state7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_01001) & (1'b1 == 1'b1))) begin
        symbolsOut_TLAST_int_regslice = modSymOutT_last_V_4_fu_2928_p2;
    end else if (((ap_predicate_op459_write_state6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_01001) & (1'b1 == 1'b1))) begin
        symbolsOut_TLAST_int_regslice = modSymOutT_last_V_3_reg_4908;
    end else if (((ap_predicate_op438_write_state5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_01001) & (1'b1 == 1'b1))) begin
        symbolsOut_TLAST_int_regslice = modSymOutT_last_V_2_fu_2661_p2;
    end else if (((ap_predicate_op423_write_state4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_01001) & (1'b1 == 1'b1))) begin
        symbolsOut_TLAST_int_regslice = modSymOutT_last_V_1_fu_2543_p2;
    end else if (((ap_predicate_op408_write_state3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_01001) & (1'b1 == 1'b1))) begin
        symbolsOut_TLAST_int_regslice = modSymOutT_last_V_fu_2425_p2;
    end else begin
        symbolsOut_TLAST_int_regslice = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op643_write_state16 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001) & (1'b1 == 1'b1)) | ((ap_predicate_op630_write_state15 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001) & (1'b1 == 1'b1)) | ((ap_predicate_op617_write_state14 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001) & (1'b1 == 1'b1)) | ((ap_predicate_op604_write_state13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001) & (1'b1 == 1'b1)) | ((ap_predicate_op591_write_state12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001) & (1'b1 == 1'b1)) | ((ap_predicate_op578_write_state11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001) & (1'b1 == 1'b1)) | ((ap_predicate_op565_write_state10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001) & (1'b1 == 1'b1)) | ((ap_predicate_op552_write_state9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001) & (1'b1 == 1'b1)) | ((ap_predicate_op534_write_state8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == 1'b1)) | ((ap_predicate_op474_write_state7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == 1'b1)) | ((ap_predicate_op459_write_state6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == 1'b1)) | ((ap_predicate_op438_write_state5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == 1'b1)) | ((ap_predicate_op423_write_state4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == 1'b1)) | ((ap_predicate_op408_write_state3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == 1'b1)) | ((ap_predicate_op656_write_state17 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_predicate_op667_write_state18 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        symbolsOut_TVALID_int_regslice = 1'b1;
    end else begin
        symbolsOut_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if (((ap_reset_idle_pp0 == 1'b0) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else if (((ap_reset_idle_pp0 == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln66_fu_519_p2 = (b0_loop_i + 32'd1);

assign add_ln84_fu_2021_p2 = ($signed(zext_ln84_fu_2017_p1) + $signed(5'd31));

assign and_ln154_10_fu_2215_p2 = (icmp_ln1027_10_fu_2209_p2 & cmp_i_i123_fu_2067_p2);

assign and_ln154_11_fu_2227_p2 = (icmp_ln1027_11_fu_2221_p2 & cmp_i_i123_fu_2067_p2);

assign and_ln154_12_fu_2239_p2 = (icmp_ln1027_12_fu_2233_p2 & cmp_i_i123_fu_2067_p2);

assign and_ln154_13_fu_2251_p2 = (icmp_ln1027_13_fu_2245_p2 & cmp_i_i123_fu_2067_p2);

assign and_ln154_14_fu_2263_p2 = (icmp_ln1027_14_fu_2257_p2 & cmp_i_i123_fu_2067_p2);

assign and_ln154_15_fu_2285_p2 = (icmp_ln1027_15_fu_2279_p2 & cmp_i_i123_fu_2067_p2);

assign and_ln154_1_fu_2107_p2 = (icmp_ln1027_1_fu_2101_p2 & cmp_i_i123_fu_2067_p2);

assign and_ln154_2_fu_2119_p2 = (icmp_ln1027_2_fu_2113_p2 & cmp_i_i123_fu_2067_p2);

assign and_ln154_3_fu_2131_p2 = (icmp_ln1027_3_fu_2125_p2 & cmp_i_i123_fu_2067_p2);

assign and_ln154_4_fu_2143_p2 = (icmp_ln1027_4_fu_2137_p2 & cmp_i_i123_fu_2067_p2);

assign and_ln154_5_fu_2155_p2 = (icmp_ln1027_5_fu_2149_p2 & cmp_i_i123_fu_2067_p2);

assign and_ln154_6_fu_2167_p2 = (icmp_ln1027_6_fu_2161_p2 & cmp_i_i123_fu_2067_p2);

assign and_ln154_7_fu_2179_p2 = (icmp_ln1027_7_fu_2173_p2 & cmp_i_i123_fu_2067_p2);

assign and_ln154_8_fu_2191_p2 = (icmp_ln1027_8_fu_2185_p2 & cmp_i_i123_fu_2067_p2);

assign and_ln154_9_fu_2203_p2 = (icmp_ln1027_9_fu_2197_p2 & cmp_i_i123_fu_2067_p2);

assign and_ln154_fu_2095_p2 = (icmp_ln1027_fu_2089_p2 & cmp_i_i123_fu_2067_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & (((ap_predicate_op656_write_state17 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op646_write_state17 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)))) | ((bitsIn_TVALID_int_regslice == 1'b0) & (1'b1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state17_io) | ((ap_predicate_op656_write_state17 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op646_write_state17 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)))) | ((bitsIn_TVALID_int_regslice == 1'b0) & (1'b1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state17_io) | ((ap_predicate_op656_write_state17 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op646_write_state17 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)))) | ((bitsIn_TVALID_int_regslice == 1'b0) & (1'b1 == 1'b1)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage10_01001 = ((1'b1 == 1'b1) & (((ap_predicate_op578_write_state11 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op568_write_state11 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage10_11001 = ((1'b1 == 1'b1) & ((1'b1 == ap_block_state11_io) | ((ap_predicate_op578_write_state11 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op568_write_state11 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage10_subdone = ((1'b1 == 1'b1) & ((1'b1 == ap_block_state11_io) | ((ap_predicate_op578_write_state11 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op568_write_state11 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0))));
end

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage11_01001 = ((1'b1 == 1'b1) & (((ap_predicate_op591_write_state12 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op581_write_state12 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage11_11001 = ((1'b1 == 1'b1) & ((1'b1 == ap_block_state12_io) | ((ap_predicate_op591_write_state12 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op581_write_state12 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage11_subdone = ((1'b1 == 1'b1) & ((1'b1 == ap_block_state12_io) | ((ap_predicate_op591_write_state12 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op581_write_state12 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0))));
end

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage12_01001 = ((1'b1 == 1'b1) & (((ap_predicate_op604_write_state13 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op594_write_state13 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage12_11001 = ((1'b1 == 1'b1) & ((1'b1 == ap_block_state13_io) | ((ap_predicate_op604_write_state13 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op594_write_state13 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage12_subdone = ((1'b1 == 1'b1) & ((1'b1 == ap_block_state13_io) | ((ap_predicate_op604_write_state13 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op594_write_state13 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0))));
end

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage13_01001 = ((1'b1 == 1'b1) & (((ap_predicate_op617_write_state14 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op607_write_state14 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage13_11001 = ((1'b1 == 1'b1) & ((1'b1 == ap_block_state14_io) | ((ap_predicate_op617_write_state14 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op607_write_state14 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage13_subdone = ((1'b1 == 1'b1) & ((1'b1 == ap_block_state14_io) | ((ap_predicate_op617_write_state14 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op607_write_state14 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0))));
end

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage14_01001 = ((1'b1 == 1'b1) & (((ap_predicate_op630_write_state15 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op620_write_state15 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage14_11001 = ((1'b1 == 1'b1) & ((1'b1 == ap_block_state15_io) | ((ap_predicate_op630_write_state15 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op620_write_state15 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage14_subdone = ((1'b1 == 1'b1) & ((1'b1 == ap_block_state15_io) | ((ap_predicate_op630_write_state15 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op620_write_state15 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0))));
end

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage15_01001 = ((1'b1 == 1'b1) & (((ap_predicate_op643_write_state16 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op633_write_state16 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage15_11001 = ((1'b1 == 1'b1) & ((1'b1 == ap_block_state16_io) | ((ap_predicate_op643_write_state16 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op633_write_state16 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage15_subdone = ((1'b1 == 1'b1) & ((1'b1 == ap_block_state16_io) | ((ap_predicate_op643_write_state16 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op633_write_state16 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage1_01001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (((ap_predicate_op667_write_state18 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op658_write_state18 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state18_io) | ((ap_predicate_op667_write_state18 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op658_write_state18 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state18_io) | ((ap_predicate_op667_write_state18 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op658_write_state18 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0))));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_01001 = (((ap_predicate_op408_write_state3 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0) & (1'b1 == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & ((regslice_both_symbolsOut_V_data_V_U_apdone_blk == 1'b1) | ((ap_predicate_op669_write_state19 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = (((ap_enable_reg_pp0_iter1 == 1'b1) & ((regslice_both_symbolsOut_V_data_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state19_io) | ((ap_predicate_op669_write_state19 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)))) | ((1'b1 == 1'b1) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op408_write_state3 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = (((ap_enable_reg_pp0_iter1 == 1'b1) & ((regslice_both_symbolsOut_V_data_V_U_apdone_blk == 1'b1) | (1'b1 == ap_block_state19_io) | ((ap_predicate_op669_write_state19 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)))) | ((1'b1 == 1'b1) & ((1'b1 == ap_block_state3_io) | ((ap_predicate_op408_write_state3 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)))));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_01001 = ((1'b1 == 1'b1) & (((ap_predicate_op423_write_state4 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op411_write_state4 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((1'b1 == 1'b1) & ((1'b1 == ap_block_state4_io) | ((ap_predicate_op423_write_state4 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op411_write_state4 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((1'b1 == 1'b1) & ((1'b1 == ap_block_state4_io) | ((ap_predicate_op423_write_state4 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op411_write_state4 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0))));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_01001 = ((1'b1 == 1'b1) & (((ap_predicate_op438_write_state5 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op426_write_state5 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage4_11001 = ((1'b1 == 1'b1) & ((1'b1 == ap_block_state5_io) | ((ap_predicate_op438_write_state5 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op426_write_state5 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = ((1'b1 == 1'b1) & ((1'b1 == ap_block_state5_io) | ((ap_predicate_op438_write_state5 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op426_write_state5 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0))));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_01001 = ((1'b1 == 1'b1) & (((ap_predicate_op459_write_state6 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op449_write_state6 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage5_11001 = ((1'b1 == 1'b1) & ((1'b1 == ap_block_state6_io) | ((ap_predicate_op459_write_state6 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op449_write_state6 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = ((1'b1 == 1'b1) & ((1'b1 == ap_block_state6_io) | ((ap_predicate_op459_write_state6 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op449_write_state6 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0))));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_01001 = ((1'b1 == 1'b1) & (((ap_predicate_op474_write_state7 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op462_write_state7 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage6_11001 = ((1'b1 == 1'b1) & ((1'b1 == ap_block_state7_io) | ((ap_predicate_op474_write_state7 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op462_write_state7 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = ((1'b1 == 1'b1) & ((1'b1 == ap_block_state7_io) | ((ap_predicate_op474_write_state7 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op462_write_state7 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0))));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_01001 = ((1'b1 == 1'b1) & (((ap_predicate_op534_write_state8 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op524_write_state8 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage7_11001 = ((1'b1 == 1'b1) & ((1'b1 == ap_block_state8_io) | ((ap_predicate_op534_write_state8 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op524_write_state8 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone = ((1'b1 == 1'b1) & ((1'b1 == ap_block_state8_io) | ((ap_predicate_op534_write_state8 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op524_write_state8 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0))));
end

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage8_01001 = ((1'b1 == 1'b1) & (((ap_predicate_op552_write_state9 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op542_write_state9 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage8_11001 = ((1'b1 == 1'b1) & ((1'b1 == ap_block_state9_io) | ((ap_predicate_op552_write_state9 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op542_write_state9 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage8_subdone = ((1'b1 == 1'b1) & ((1'b1 == ap_block_state9_io) | ((ap_predicate_op552_write_state9 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op542_write_state9 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0))));
end

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage9_01001 = ((1'b1 == 1'b1) & (((ap_predicate_op565_write_state10 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op555_write_state10 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage9_11001 = ((1'b1 == 1'b1) & ((1'b1 == ap_block_state10_io) | ((ap_predicate_op565_write_state10 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op555_write_state10 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage9_subdone = ((1'b1 == 1'b1) & ((1'b1 == ap_block_state10_io) | ((ap_predicate_op565_write_state10 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op555_write_state10 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0))));
end

always @ (*) begin
    ap_block_state10_io = (((ap_predicate_op565_write_state10 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op555_write_state10 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state10_pp0_stage9_iter0 = (((ap_predicate_op565_write_state10 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op555_write_state10 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state11_io = (((ap_predicate_op578_write_state11 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op568_write_state11 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state11_pp0_stage10_iter0 = (((ap_predicate_op578_write_state11 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op568_write_state11 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state12_io = (((ap_predicate_op591_write_state12 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op581_write_state12 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state12_pp0_stage11_iter0 = (((ap_predicate_op591_write_state12 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op581_write_state12 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state13_io = (((ap_predicate_op604_write_state13 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op594_write_state13 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state13_pp0_stage12_iter0 = (((ap_predicate_op604_write_state13 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op594_write_state13 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state14_io = (((ap_predicate_op617_write_state14 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op607_write_state14 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state14_pp0_stage13_iter0 = (((ap_predicate_op617_write_state14 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op607_write_state14 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state15_io = (((ap_predicate_op630_write_state15 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op620_write_state15 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state15_pp0_stage14_iter0 = (((ap_predicate_op630_write_state15 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op620_write_state15 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state16_io = (((ap_predicate_op643_write_state16 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op633_write_state16 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state16_pp0_stage15_iter0 = (((ap_predicate_op643_write_state16 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op633_write_state16 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state17_io = (((ap_predicate_op656_write_state17 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op646_write_state17 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state17_pp0_stage0_iter1 = (((ap_predicate_op656_write_state17 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op646_write_state17 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state18_io = (((ap_predicate_op667_write_state18 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op658_write_state18 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state18_pp0_stage1_iter1 = (((ap_predicate_op667_write_state18 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op658_write_state18 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state19_io = ((ap_predicate_op669_write_state19 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state19_pp0_stage2_iter1 = ((regslice_both_symbolsOut_V_data_V_U_apdone_blk == 1'b1) | ((ap_predicate_op669_write_state19 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (bitsIn_TVALID_int_regslice == 1'b0);
end

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_io = ((ap_predicate_op408_write_state3 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state3_pp0_stage2_iter0 = ((ap_predicate_op408_write_state3 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state4_io = (((ap_predicate_op423_write_state4 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op411_write_state4 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state4_pp0_stage3_iter0 = (((ap_predicate_op423_write_state4 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op411_write_state4 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state5_io = (((ap_predicate_op438_write_state5 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op426_write_state5 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state5_pp0_stage4_iter0 = (((ap_predicate_op438_write_state5 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op426_write_state5 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state6_io = (((ap_predicate_op459_write_state6 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op449_write_state6 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state6_pp0_stage5_iter0 = (((ap_predicate_op459_write_state6 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op449_write_state6 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state7_io = (((ap_predicate_op474_write_state7 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op462_write_state7 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state7_pp0_stage6_iter0 = (((ap_predicate_op474_write_state7 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op462_write_state7 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state8_io = (((ap_predicate_op534_write_state8 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op524_write_state8 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state8_pp0_stage7_iter0 = (((ap_predicate_op534_write_state8 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op524_write_state8 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state9_io = (((ap_predicate_op552_write_state9 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op542_write_state9 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state9_pp0_stage8_iter0 = (((ap_predicate_op552_write_state9 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op542_write_state9 == 1'b1) & (symbolsOut_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_condition_1022 = ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == 1'b1));
end

always @ (*) begin
    ap_condition_1036 = ((b0_disable_V_load_load_fu_494_p1 == 1'd1) & (b0_enable_V_load_load_fu_503_p1 == 1'd0) & (triggerIn_s_V_fu_486_p3 == 1'd0));
end

always @ (*) begin
    ap_condition_3831 = ((icmp_ln84_fu_2037_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001));
end

always @ (*) begin
    ap_condition_769 = ((1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln84_reg_4747 == 1'd1) & (1'b0 == ap_block_pp0_stage6_11001));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_mux_b0_disable_V_flag_3_phi_fu_464_p4 = ap_phi_reg_pp0_iter0_b0_disable_V_flag_3_reg_461;

assign ap_phi_mux_empty_21_phi_fu_446_p8 = ap_phi_reg_pp0_iter0_empty_21_reg_441;

assign ap_phi_reg_pp0_iter0_empty_20_reg_405 = 'bx;

always @ (*) begin
    ap_predicate_op408_write_state3 = (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_reg_4785) & (icmp_ln84_reg_4747 == 1'd1)));
end

always @ (*) begin
    ap_predicate_op411_write_state4 = (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_reg_4785) & (icmp_ln84_reg_4747 == 1'd1)));
end

always @ (*) begin
    ap_predicate_op423_write_state4 = (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_1_reg_4789) & (icmp_ln84_reg_4747 == 1'd1)));
end

always @ (*) begin
    ap_predicate_op426_write_state5 = (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_1_reg_4789) & (icmp_ln84_reg_4747 == 1'd1)));
end

always @ (*) begin
    ap_predicate_op438_write_state5 = (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_2_reg_4793) & (icmp_ln84_reg_4747 == 1'd1)));
end

always @ (*) begin
    ap_predicate_op449_write_state6 = (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_2_reg_4793) & (icmp_ln84_reg_4747 == 1'd1)));
end

always @ (*) begin
    ap_predicate_op459_write_state6 = (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_3_reg_4797) & (icmp_ln84_reg_4747 == 1'd1)));
end

always @ (*) begin
    ap_predicate_op462_write_state7 = (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_3_reg_4797) & (icmp_ln84_reg_4747 == 1'd1)));
end

always @ (*) begin
    ap_predicate_op474_write_state7 = (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_4_reg_4801) & (icmp_ln84_reg_4747 == 1'd1)));
end

always @ (*) begin
    ap_predicate_op524_write_state8 = (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_4_reg_4801) & (icmp_ln84_reg_4747 == 1'd1)));
end

always @ (*) begin
    ap_predicate_op534_write_state8 = (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_5_reg_4805) & (icmp_ln84_reg_4747 == 1'd1)));
end

always @ (*) begin
    ap_predicate_op542_write_state9 = (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_5_reg_4805) & (icmp_ln84_reg_4747 == 1'd1)));
end

always @ (*) begin
    ap_predicate_op552_write_state9 = (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_6_reg_4809) & (icmp_ln84_reg_4747 == 1'd1)));
end

always @ (*) begin
    ap_predicate_op555_write_state10 = (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_6_reg_4809) & (icmp_ln84_reg_4747 == 1'd1)));
end

always @ (*) begin
    ap_predicate_op565_write_state10 = (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_7_reg_4813) & (icmp_ln84_reg_4747 == 1'd1)));
end

always @ (*) begin
    ap_predicate_op568_write_state11 = (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_7_reg_4813) & (icmp_ln84_reg_4747 == 1'd1)));
end

always @ (*) begin
    ap_predicate_op578_write_state11 = (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_8_reg_4817) & (icmp_ln84_reg_4747 == 1'd1)));
end

always @ (*) begin
    ap_predicate_op581_write_state12 = (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_8_reg_4817) & (icmp_ln84_reg_4747 == 1'd1)));
end

always @ (*) begin
    ap_predicate_op591_write_state12 = (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_9_reg_4821) & (icmp_ln84_reg_4747 == 1'd1)));
end

always @ (*) begin
    ap_predicate_op594_write_state13 = (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_9_reg_4821) & (icmp_ln84_reg_4747 == 1'd1)));
end

always @ (*) begin
    ap_predicate_op604_write_state13 = (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_10_reg_4825) & (icmp_ln84_reg_4747 == 1'd1)));
end

always @ (*) begin
    ap_predicate_op607_write_state14 = (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_10_reg_4825) & (icmp_ln84_reg_4747 == 1'd1)));
end

always @ (*) begin
    ap_predicate_op617_write_state14 = (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_11_reg_4829) & (icmp_ln84_reg_4747 == 1'd1)));
end

always @ (*) begin
    ap_predicate_op620_write_state15 = (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_11_reg_4829) & (icmp_ln84_reg_4747 == 1'd1)));
end

always @ (*) begin
    ap_predicate_op630_write_state15 = (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_12_reg_4833) & (icmp_ln84_reg_4747 == 1'd1)));
end

always @ (*) begin
    ap_predicate_op633_write_state16 = (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_12_reg_4833) & (icmp_ln84_reg_4747 == 1'd1)));
end

always @ (*) begin
    ap_predicate_op643_write_state16 = (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_13_reg_4837) & (icmp_ln84_reg_4747 == 1'd1)));
end

always @ (*) begin
    ap_predicate_op646_write_state17 = (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_13_reg_4837) & (icmp_ln84_reg_4747 == 1'd1)));
end

always @ (*) begin
    ap_predicate_op656_write_state17 = (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_14_reg_4841) & (icmp_ln84_reg_4747 == 1'd1)));
end

always @ (*) begin
    ap_predicate_op658_write_state18 = (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_14_reg_4841) & (icmp_ln84_reg_4747 == 1'd1)));
end

always @ (*) begin
    ap_predicate_op667_write_state18 = (((cmp_i_i51_reg_4781 == 1'd1) & (empty_21_reg_441 == 1'd1) & (icmp_ln84_reg_4747 == 1'd1)) | ((empty_21_reg_441 == 1'd1) & (1'd1 == and_ln154_15_reg_4851) & (icmp_ln84_reg_4747 == 1'd1)));
end

always @ (*) begin
    ap_predicate_op669_write_state19 = (((cmp_i_i51_reg_4781_pp0_iter1_reg == 1'd1) & (empty_21_reg_441_pp0_iter1_reg == 1'd1) & (icmp_ln84_reg_4747_pp0_iter1_reg == 1'd1)) | ((empty_21_reg_441_pp0_iter1_reg == 1'd1) & (icmp_ln84_reg_4747_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln154_15_reg_4851_pp0_iter1_reg)));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign b0_disable_V_load_load_fu_494_p1 = b0_disable_V;

assign b0_enable_V_load_load_fu_503_p1 = b0_enable_V;

assign bitsIn_TREADY = regslice_both_bitsIn_V_data_V_U_ack_in;

assign cmp102_fu_2043_p2 = ((empty_20_reg_405 == 32'd0) ? 1'b1 : 1'b0);

assign cmp_i_i123_fu_2067_p2 = ((sub_i_i144_cast_fu_2059_p1 == conv_i_i121_fu_2063_p1) ? 1'b1 : 1'b0);

assign cmp_i_i51_fu_2077_p2 = (($signed(sub_i_i144_cast_fu_2059_p1) > $signed(conv_i_i121_fu_2063_p1)) ? 1'b1 : 1'b0);

assign conv_i_i121_fu_2063_p1 = empty_20_reg_405;

assign icmp_ln1019_10_fu_2989_p2 = ((sub_i_i115_reg_4855 == 7'd40) ? 1'b1 : 1'b0);

assign icmp_ln1019_11_fu_2999_p2 = ((sub_i_i115_reg_4855 == 7'd44) ? 1'b1 : 1'b0);

assign icmp_ln1019_12_fu_3009_p2 = ((sub_i_i115_reg_4855 == 7'd48) ? 1'b1 : 1'b0);

assign icmp_ln1019_13_fu_3019_p2 = ((sub_i_i115_reg_4855 == 7'd52) ? 1'b1 : 1'b0);

assign icmp_ln1019_14_fu_3029_p2 = ((sub_i_i115_reg_4855 == 7'd56) ? 1'b1 : 1'b0);

assign icmp_ln1019_15_fu_3039_p2 = ((sub_i_i115_reg_4855 == 7'd60) ? 1'b1 : 1'b0);

assign icmp_ln1019_1_fu_2538_p2 = ((sub_i_i115_reg_4855 == 7'd4) ? 1'b1 : 1'b0);

assign icmp_ln1019_2_fu_2656_p2 = ((sub_i_i115_reg_4855 == 7'd8) ? 1'b1 : 1'b0);

assign icmp_ln1019_3_fu_2672_p2 = ((sub_i_i115_reg_4855 == 7'd12) ? 1'b1 : 1'b0);

assign icmp_ln1019_4_fu_2923_p2 = ((sub_i_i115_reg_4855 == 7'd16) ? 1'b1 : 1'b0);

assign icmp_ln1019_5_fu_2939_p2 = ((sub_i_i115_reg_4855 == 7'd20) ? 1'b1 : 1'b0);

assign icmp_ln1019_6_fu_2949_p2 = ((sub_i_i115_reg_4855 == 7'd24) ? 1'b1 : 1'b0);

assign icmp_ln1019_7_fu_2959_p2 = ((sub_i_i115_reg_4855 == 7'd28) ? 1'b1 : 1'b0);

assign icmp_ln1019_8_fu_2969_p2 = ((sub_i_i115_reg_4855 == 7'd32) ? 1'b1 : 1'b0);

assign icmp_ln1019_9_fu_2979_p2 = ((sub_i_i115_reg_4855 == 7'd36) ? 1'b1 : 1'b0);

assign icmp_ln1019_fu_2419_p2 = ((sub_i_i115_fu_2303_p2 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln1027_10_fu_2209_p2 = (($signed(sub_i_i_fu_2083_p2) > $signed(7'd40)) ? 1'b1 : 1'b0);

assign icmp_ln1027_11_fu_2221_p2 = (($signed(sub_i_i_fu_2083_p2) > $signed(7'd44)) ? 1'b1 : 1'b0);

assign icmp_ln1027_12_fu_2233_p2 = (($signed(sub_i_i_fu_2083_p2) > $signed(7'd48)) ? 1'b1 : 1'b0);

assign icmp_ln1027_13_fu_2245_p2 = (($signed(sub_i_i_fu_2083_p2) > $signed(7'd52)) ? 1'b1 : 1'b0);

assign icmp_ln1027_14_fu_2257_p2 = (($signed(sub_i_i_fu_2083_p2) > $signed(7'd56)) ? 1'b1 : 1'b0);

assign icmp_ln1027_15_fu_2279_p2 = (($signed(sub_i_i_fu_2083_p2) > $signed(7'd60)) ? 1'b1 : 1'b0);

assign icmp_ln1027_1_fu_2101_p2 = (($signed(sub_i_i_fu_2083_p2) > $signed(7'd4)) ? 1'b1 : 1'b0);

assign icmp_ln1027_2_fu_2113_p2 = (($signed(sub_i_i_fu_2083_p2) > $signed(7'd8)) ? 1'b1 : 1'b0);

assign icmp_ln1027_3_fu_2125_p2 = (($signed(sub_i_i_fu_2083_p2) > $signed(7'd12)) ? 1'b1 : 1'b0);

assign icmp_ln1027_4_fu_2137_p2 = (($signed(sub_i_i_fu_2083_p2) > $signed(7'd16)) ? 1'b1 : 1'b0);

assign icmp_ln1027_5_fu_2149_p2 = (($signed(sub_i_i_fu_2083_p2) > $signed(7'd20)) ? 1'b1 : 1'b0);

assign icmp_ln1027_6_fu_2161_p2 = (($signed(sub_i_i_fu_2083_p2) > $signed(7'd24)) ? 1'b1 : 1'b0);

assign icmp_ln1027_7_fu_2173_p2 = (($signed(sub_i_i_fu_2083_p2) > $signed(7'd28)) ? 1'b1 : 1'b0);

assign icmp_ln1027_8_fu_2185_p2 = (($signed(sub_i_i_fu_2083_p2) > $signed(7'd32)) ? 1'b1 : 1'b0);

assign icmp_ln1027_9_fu_2197_p2 = (($signed(sub_i_i_fu_2083_p2) > $signed(7'd36)) ? 1'b1 : 1'b0);

assign icmp_ln1027_fu_2089_p2 = (($signed(sub_i_i_fu_2083_p2) > $signed(7'd0)) ? 1'b1 : 1'b0);

assign icmp_ln84_fu_2037_p2 = ((tmp_127_fu_2027_p4 == 4'd0) ? 1'b1 : 1'b0);

assign idxprom_fu_544_p1 = ap_phi_mux_empty_20_phi_fu_408_p8;

assign leftBits_cast_fu_2073_p1 = leftBits_0_data_reg;

assign modSymOutT_data_V_fu_2412_p3 = ((cmp102_reg_4751[0:0] == 1'b1) ? p_Result_50_fu_2384_p6 : p_Result_51_fu_2398_p6);

assign modSymOutT_last_V_10_fu_2994_p2 = (icmp_ln1019_10_fu_2989_p2 & cmp_i_i123_reg_4756);

assign modSymOutT_last_V_11_fu_3004_p2 = (icmp_ln1019_11_fu_2999_p2 & cmp_i_i123_reg_4756);

assign modSymOutT_last_V_12_fu_3014_p2 = (icmp_ln1019_12_fu_3009_p2 & cmp_i_i123_reg_4756);

assign modSymOutT_last_V_13_fu_3024_p2 = (icmp_ln1019_13_fu_3019_p2 & cmp_i_i123_reg_4756);

assign modSymOutT_last_V_14_fu_3034_p2 = (icmp_ln1019_14_fu_3029_p2 & cmp_i_i123_reg_4756);

assign modSymOutT_last_V_15_fu_3044_p2 = (icmp_ln1019_15_fu_3039_p2 & cmp_i_i123_reg_4756);

assign modSymOutT_last_V_1_fu_2543_p2 = (icmp_ln1019_1_fu_2538_p2 & cmp_i_i123_reg_4756);

assign modSymOutT_last_V_2_fu_2661_p2 = (icmp_ln1019_2_fu_2656_p2 & cmp_i_i123_reg_4756);

assign modSymOutT_last_V_3_fu_2677_p2 = (icmp_ln1019_3_fu_2672_p2 & cmp_i_i123_reg_4756);

assign modSymOutT_last_V_4_fu_2928_p2 = (icmp_ln1019_4_fu_2923_p2 & cmp_i_i123_reg_4756);

assign modSymOutT_last_V_5_fu_2944_p2 = (icmp_ln1019_5_fu_2939_p2 & cmp_i_i123_reg_4756);

assign modSymOutT_last_V_6_fu_2954_p2 = (icmp_ln1019_6_fu_2949_p2 & cmp_i_i123_reg_4756);

assign modSymOutT_last_V_7_fu_2964_p2 = (icmp_ln1019_7_fu_2959_p2 & cmp_i_i123_reg_4756);

assign modSymOutT_last_V_8_fu_2974_p2 = (icmp_ln1019_8_fu_2969_p2 & cmp_i_i123_reg_4756);

assign modSymOutT_last_V_9_fu_2984_p2 = (icmp_ln1019_9_fu_2979_p2 & cmp_i_i123_reg_4756);

assign modSymOutT_last_V_fu_2425_p2 = (icmp_ln1019_fu_2419_p2 & cmp_i_i123_reg_4756);

assign nBitsdivSSRbits_cast_fu_2049_p1 = nBitsdivSSRbits_0_data_reg;

assign or_ln144_10_fu_3089_p2 = (modSymOutT_last_V_12_fu_3014_p2 | modSymOutT_last_V_11_fu_3004_p2);

assign or_ln144_11_fu_3095_p2 = (modSymOutT_last_V_15_fu_3044_p2 | modSymOutT_last_V_14_fu_3034_p2);

assign or_ln144_12_fu_3101_p2 = (or_ln144_11_fu_3095_p2 | modSymOutT_last_V_13_fu_3024_p2);

assign or_ln144_13_fu_3107_p2 = (or_ln144_12_fu_3101_p2 | or_ln144_10_fu_3089_p2);

assign or_ln144_14_fu_3113_p2 = (or_ln144_9_fu_3083_p2 | or_ln144_13_fu_3107_p2);

assign or_ln144_15_fu_3119_p2 = (or_ln144_6_fu_3066_p2 | or_ln144_14_fu_3113_p2);

assign or_ln144_16_fu_2698_p2 = (modSymOutT_last_V_reg_4874 | modSymOutT_last_V_1_reg_4886);

assign or_ln144_17_fu_2702_p2 = (modSymOutT_last_V_3_fu_2677_p2 | modSymOutT_last_V_2_fu_2661_p2);

assign or_ln144_18_fu_2708_p2 = (or_ln144_17_fu_2702_p2 | or_ln144_16_fu_2698_p2);

assign or_ln144_19_fu_3125_p2 = (modSymOutT_last_V_5_fu_2944_p2 | modSymOutT_last_V_4_fu_2928_p2);

assign or_ln144_1_fu_2687_p2 = (modSymOutT_last_V_2_fu_2661_p2 | modSymOutT_last_V_1_reg_4886);

assign or_ln144_20_fu_3131_p2 = (modSymOutT_last_V_7_fu_2964_p2 | modSymOutT_last_V_6_fu_2954_p2);

assign or_ln144_21_fu_3137_p2 = (or_ln144_20_fu_3131_p2 | or_ln144_19_fu_3125_p2);

assign or_ln144_22_fu_3143_p2 = (or_ln144_21_fu_3137_p2 | or_ln144_18_reg_4919);

assign or_ln144_23_fu_3148_p2 = (modSymOutT_last_V_9_fu_2984_p2 | modSymOutT_last_V_8_fu_2974_p2);

assign or_ln144_24_fu_3154_p2 = (modSymOutT_last_V_11_fu_3004_p2 | modSymOutT_last_V_10_fu_2994_p2);

assign or_ln144_25_fu_3160_p2 = (or_ln144_24_fu_3154_p2 | or_ln144_23_fu_3148_p2);

assign or_ln144_26_fu_3166_p2 = (modSymOutT_last_V_13_fu_3024_p2 | modSymOutT_last_V_12_fu_3014_p2);

assign or_ln144_27_fu_3172_p2 = (or_ln144_26_fu_3166_p2 | or_ln144_11_fu_3095_p2);

assign or_ln144_28_fu_3178_p2 = (or_ln144_27_fu_3172_p2 | or_ln144_25_fu_3160_p2);

assign or_ln144_29_fu_3184_p2 = (or_ln144_28_fu_3178_p2 | or_ln144_22_fu_3143_p2);

assign or_ln144_2_fu_2692_p2 = (or_ln144_fu_2682_p2 | or_ln144_1_fu_2687_p2);

assign or_ln144_3_fu_3049_p2 = (modSymOutT_last_V_4_fu_2928_p2 | modSymOutT_last_V_3_reg_4908);

assign or_ln144_4_fu_3054_p2 = (modSymOutT_last_V_6_fu_2954_p2 | modSymOutT_last_V_5_fu_2944_p2);

assign or_ln144_5_fu_3060_p2 = (or_ln144_4_fu_3054_p2 | or_ln144_3_fu_3049_p2);

assign or_ln144_6_fu_3066_p2 = (or_ln144_5_fu_3060_p2 | or_ln144_2_reg_4914);

assign or_ln144_7_fu_3071_p2 = (modSymOutT_last_V_8_fu_2974_p2 | modSymOutT_last_V_7_fu_2964_p2);

assign or_ln144_8_fu_3077_p2 = (modSymOutT_last_V_9_fu_2984_p2 | modSymOutT_last_V_10_fu_2994_p2);

assign or_ln144_9_fu_3083_p2 = (or_ln144_8_fu_3077_p2 | or_ln144_7_fu_3071_p2);

assign or_ln144_fu_2682_p2 = (modSymOutT_last_V_reg_4874 | b0_disable_V_flag_1_reg_421);

integer ap_tvar_int_0;

always @ (tmp_s_fu_3190_p3) begin
    for (ap_tvar_int_0 = 2 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 1 - 0) begin
            p_Result_11_fu_3202_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_11_fu_3202_p4[ap_tvar_int_0] = tmp_s_fu_3190_p3[1 - ap_tvar_int_0];
        end
    end
end

integer ap_tvar_int_1;

always @ (tmp_10_fu_3196_p3) begin
    for (ap_tvar_int_1 = 2 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 1 - 0) begin
            p_Result_12_fu_3240_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            p_Result_12_fu_3240_p4[ap_tvar_int_1] = tmp_10_fu_3196_p3[1 - ap_tvar_int_1];
        end
    end
end

integer ap_tvar_int_2;

always @ (tmp_11_fu_3303_p3) begin
    for (ap_tvar_int_2 = 2 - 1; ap_tvar_int_2 >= 0; ap_tvar_int_2 = ap_tvar_int_2 - 1) begin
        if (ap_tvar_int_2 > 1 - 0) begin
            p_Result_14_fu_3315_p4[ap_tvar_int_2] = 1'b0;
        end else begin
            p_Result_14_fu_3315_p4[ap_tvar_int_2] = tmp_11_fu_3303_p3[1 - ap_tvar_int_2];
        end
    end
end

integer ap_tvar_int_3;

always @ (tmp_12_fu_3309_p3) begin
    for (ap_tvar_int_3 = 2 - 1; ap_tvar_int_3 >= 0; ap_tvar_int_3 = ap_tvar_int_3 - 1) begin
        if (ap_tvar_int_3 > 1 - 0) begin
            p_Result_15_fu_3353_p4[ap_tvar_int_3] = 1'b0;
        end else begin
            p_Result_15_fu_3353_p4[ap_tvar_int_3] = tmp_12_fu_3309_p3[1 - ap_tvar_int_3];
        end
    end
end

integer ap_tvar_int_4;

always @ (tmp_13_fu_3410_p3) begin
    for (ap_tvar_int_4 = 2 - 1; ap_tvar_int_4 >= 0; ap_tvar_int_4 = ap_tvar_int_4 - 1) begin
        if (ap_tvar_int_4 > 1 - 0) begin
            p_Result_17_fu_3422_p4[ap_tvar_int_4] = 1'b0;
        end else begin
            p_Result_17_fu_3422_p4[ap_tvar_int_4] = tmp_13_fu_3410_p3[1 - ap_tvar_int_4];
        end
    end
end

integer ap_tvar_int_5;

always @ (tmp_14_fu_3416_p3) begin
    for (ap_tvar_int_5 = 2 - 1; ap_tvar_int_5 >= 0; ap_tvar_int_5 = ap_tvar_int_5 - 1) begin
        if (ap_tvar_int_5 > 1 - 0) begin
            p_Result_18_fu_3460_p4[ap_tvar_int_5] = 1'b0;
        end else begin
            p_Result_18_fu_3460_p4[ap_tvar_int_5] = tmp_14_fu_3416_p3[1 - ap_tvar_int_5];
        end
    end
end

integer ap_tvar_int_6;

always @ (tmp_1_fu_2297_p3) begin
    for (ap_tvar_int_6 = 2 - 1; ap_tvar_int_6 >= 0; ap_tvar_int_6 = ap_tvar_int_6 - 1) begin
        if (ap_tvar_int_6 > 1 - 0) begin
            p_Result_1_fu_2346_p4[ap_tvar_int_6] = 1'b0;
        end else begin
            p_Result_1_fu_2346_p4[ap_tvar_int_6] = tmp_1_fu_2297_p3[1 - ap_tvar_int_6];
        end
    end
end

integer ap_tvar_int_7;

always @ (tmp_15_fu_3517_p3) begin
    for (ap_tvar_int_7 = 2 - 1; ap_tvar_int_7 >= 0; ap_tvar_int_7 = ap_tvar_int_7 - 1) begin
        if (ap_tvar_int_7 > 1 - 0) begin
            p_Result_20_fu_3529_p4[ap_tvar_int_7] = 1'b0;
        end else begin
            p_Result_20_fu_3529_p4[ap_tvar_int_7] = tmp_15_fu_3517_p3[1 - ap_tvar_int_7];
        end
    end
end

integer ap_tvar_int_8;

always @ (tmp_16_fu_3523_p3) begin
    for (ap_tvar_int_8 = 2 - 1; ap_tvar_int_8 >= 0; ap_tvar_int_8 = ap_tvar_int_8 - 1) begin
        if (ap_tvar_int_8 > 1 - 0) begin
            p_Result_21_fu_3567_p4[ap_tvar_int_8] = 1'b0;
        end else begin
            p_Result_21_fu_3567_p4[ap_tvar_int_8] = tmp_16_fu_3523_p3[1 - ap_tvar_int_8];
        end
    end
end

integer ap_tvar_int_9;

always @ (tmp_17_fu_3624_p3) begin
    for (ap_tvar_int_9 = 2 - 1; ap_tvar_int_9 >= 0; ap_tvar_int_9 = ap_tvar_int_9 - 1) begin
        if (ap_tvar_int_9 > 1 - 0) begin
            p_Result_23_fu_3636_p4[ap_tvar_int_9] = 1'b0;
        end else begin
            p_Result_23_fu_3636_p4[ap_tvar_int_9] = tmp_17_fu_3624_p3[1 - ap_tvar_int_9];
        end
    end
end

integer ap_tvar_int_10;

always @ (tmp_18_fu_3630_p3) begin
    for (ap_tvar_int_10 = 2 - 1; ap_tvar_int_10 >= 0; ap_tvar_int_10 = ap_tvar_int_10 - 1) begin
        if (ap_tvar_int_10 > 1 - 0) begin
            p_Result_24_fu_3674_p4[ap_tvar_int_10] = 1'b0;
        end else begin
            p_Result_24_fu_3674_p4[ap_tvar_int_10] = tmp_18_fu_3630_p3[1 - ap_tvar_int_10];
        end
    end
end

integer ap_tvar_int_11;

always @ (tmp_19_fu_3731_p3) begin
    for (ap_tvar_int_11 = 2 - 1; ap_tvar_int_11 >= 0; ap_tvar_int_11 = ap_tvar_int_11 - 1) begin
        if (ap_tvar_int_11 > 1 - 0) begin
            p_Result_26_fu_3743_p4[ap_tvar_int_11] = 1'b0;
        end else begin
            p_Result_26_fu_3743_p4[ap_tvar_int_11] = tmp_19_fu_3731_p3[1 - ap_tvar_int_11];
        end
    end
end

integer ap_tvar_int_12;

always @ (tmp_20_fu_3737_p3) begin
    for (ap_tvar_int_12 = 2 - 1; ap_tvar_int_12 >= 0; ap_tvar_int_12 = ap_tvar_int_12 - 1) begin
        if (ap_tvar_int_12 > 1 - 0) begin
            p_Result_27_fu_3781_p4[ap_tvar_int_12] = 1'b0;
        end else begin
            p_Result_27_fu_3781_p4[ap_tvar_int_12] = tmp_20_fu_3737_p3[1 - ap_tvar_int_12];
        end
    end
end

integer ap_tvar_int_13;

always @ (tmp_21_fu_3838_p3) begin
    for (ap_tvar_int_13 = 2 - 1; ap_tvar_int_13 >= 0; ap_tvar_int_13 = ap_tvar_int_13 - 1) begin
        if (ap_tvar_int_13 > 1 - 0) begin
            p_Result_29_fu_3850_p4[ap_tvar_int_13] = 1'b0;
        end else begin
            p_Result_29_fu_3850_p4[ap_tvar_int_13] = tmp_21_fu_3838_p3[1 - ap_tvar_int_13];
        end
    end
end

integer ap_tvar_int_14;

always @ (tmp_7_fu_2720_p3) begin
    for (ap_tvar_int_14 = 2 - 1; ap_tvar_int_14 >= 0; ap_tvar_int_14 = ap_tvar_int_14 - 1) begin
        if (ap_tvar_int_14 > 1 - 0) begin
            p_Result_2_fu_2764_p4[ap_tvar_int_14] = 1'b0;
        end else begin
            p_Result_2_fu_2764_p4[ap_tvar_int_14] = tmp_7_fu_2720_p3[1 - ap_tvar_int_14];
        end
    end
end

integer ap_tvar_int_15;

always @ (tmp_22_fu_3844_p3) begin
    for (ap_tvar_int_15 = 2 - 1; ap_tvar_int_15 >= 0; ap_tvar_int_15 = ap_tvar_int_15 - 1) begin
        if (ap_tvar_int_15 > 1 - 0) begin
            p_Result_30_fu_3888_p4[ap_tvar_int_15] = 1'b0;
        end else begin
            p_Result_30_fu_3888_p4[ap_tvar_int_15] = tmp_22_fu_3844_p3[1 - ap_tvar_int_15];
        end
    end
end

integer ap_tvar_int_16;

always @ (tmp_23_fu_3945_p3) begin
    for (ap_tvar_int_16 = 2 - 1; ap_tvar_int_16 >= 0; ap_tvar_int_16 = ap_tvar_int_16 - 1) begin
        if (ap_tvar_int_16 > 1 - 0) begin
            p_Result_32_fu_3957_p4[ap_tvar_int_16] = 1'b0;
        end else begin
            p_Result_32_fu_3957_p4[ap_tvar_int_16] = tmp_23_fu_3945_p3[1 - ap_tvar_int_16];
        end
    end
end

integer ap_tvar_int_17;

always @ (tmp_24_fu_3951_p3) begin
    for (ap_tvar_int_17 = 2 - 1; ap_tvar_int_17 >= 0; ap_tvar_int_17 = ap_tvar_int_17 - 1) begin
        if (ap_tvar_int_17 > 1 - 0) begin
            p_Result_33_fu_3995_p4[ap_tvar_int_17] = 1'b0;
        end else begin
            p_Result_33_fu_3995_p4[ap_tvar_int_17] = tmp_24_fu_3951_p3[1 - ap_tvar_int_17];
        end
    end
end

integer ap_tvar_int_18;

always @ (tmp_25_fu_4052_p3) begin
    for (ap_tvar_int_18 = 2 - 1; ap_tvar_int_18 >= 0; ap_tvar_int_18 = ap_tvar_int_18 - 1) begin
        if (ap_tvar_int_18 > 1 - 0) begin
            p_Result_35_fu_4064_p4[ap_tvar_int_18] = 1'b0;
        end else begin
            p_Result_35_fu_4064_p4[ap_tvar_int_18] = tmp_25_fu_4052_p3[1 - ap_tvar_int_18];
        end
    end
end

integer ap_tvar_int_19;

always @ (tmp_26_fu_4058_p3) begin
    for (ap_tvar_int_19 = 2 - 1; ap_tvar_int_19 >= 0; ap_tvar_int_19 = ap_tvar_int_19 - 1) begin
        if (ap_tvar_int_19 > 1 - 0) begin
            p_Result_36_fu_4102_p4[ap_tvar_int_19] = 1'b0;
        end else begin
            p_Result_36_fu_4102_p4[ap_tvar_int_19] = tmp_26_fu_4058_p3[1 - ap_tvar_int_19];
        end
    end
end

integer ap_tvar_int_20;

always @ (tmp_27_fu_4159_p3) begin
    for (ap_tvar_int_20 = 2 - 1; ap_tvar_int_20 >= 0; ap_tvar_int_20 = ap_tvar_int_20 - 1) begin
        if (ap_tvar_int_20 > 1 - 0) begin
            p_Result_38_fu_4171_p4[ap_tvar_int_20] = 1'b0;
        end else begin
            p_Result_38_fu_4171_p4[ap_tvar_int_20] = tmp_27_fu_4159_p3[1 - ap_tvar_int_20];
        end
    end
end

integer ap_tvar_int_21;

always @ (tmp_28_fu_4165_p3) begin
    for (ap_tvar_int_21 = 2 - 1; ap_tvar_int_21 >= 0; ap_tvar_int_21 = ap_tvar_int_21 - 1) begin
        if (ap_tvar_int_21 > 1 - 0) begin
            p_Result_39_fu_4209_p4[ap_tvar_int_21] = 1'b0;
        end else begin
            p_Result_39_fu_4209_p4[ap_tvar_int_21] = tmp_28_fu_4165_p3[1 - ap_tvar_int_21];
        end
    end
end

integer ap_tvar_int_22;

always @ (tmp_29_fu_4266_p3) begin
    for (ap_tvar_int_22 = 2 - 1; ap_tvar_int_22 >= 0; ap_tvar_int_22 = ap_tvar_int_22 - 1) begin
        if (ap_tvar_int_22 > 1 - 0) begin
            p_Result_41_fu_4272_p4[ap_tvar_int_22] = 1'b0;
        end else begin
            p_Result_41_fu_4272_p4[ap_tvar_int_22] = tmp_29_fu_4266_p3[1 - ap_tvar_int_22];
        end
    end
end

integer ap_tvar_int_23;

always @ (p_Result_49_fu_1885_p65) begin
    for (ap_tvar_int_23 = 2 - 1; ap_tvar_int_23 >= 0; ap_tvar_int_23 = ap_tvar_int_23 - 1) begin
        if (ap_tvar_int_23 > 63 - 62) begin
            p_Result_42_fu_2269_p4[ap_tvar_int_23] = 1'b0;
        end else begin
            p_Result_42_fu_2269_p4[ap_tvar_int_23] = p_Result_49_fu_1885_p65[63 - ap_tvar_int_23];
        end
    end
end

assign p_Result_49_fu_1885_p65 = {{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{{xor_ln804_1_fu_1879_p2}, {xor_ln77_31_fu_1858_p2}}, {xor_ln77_30_fu_1837_p2}}, {xor_ln77_29_fu_1816_p2}}, {xor_ln77_28_fu_1795_p2}}, {xor_ln77_27_fu_1774_p2}}, {xor_ln77_26_fu_1753_p2}}, {xor_ln77_25_fu_1732_p2}}, {xor_ln77_24_fu_1711_p2}}, {xor_ln77_23_fu_1690_p2}}, {xor_ln77_22_fu_1669_p2}}, {xor_ln77_21_fu_1648_p2}}, {xor_ln77_20_fu_1627_p2}}, {xor_ln77_19_fu_1606_p2}}, {xor_ln77_18_fu_1585_p2}}, {xor_ln77_17_fu_1564_p2}}, {xor_ln77_16_fu_1543_p2}}, {xor_ln77_15_fu_1522_p2}}, {xor_ln77_14_fu_1501_p2}}, {xor_ln77_13_fu_1480_p2}}, {xor_ln77_12_fu_1459_p2}}, {xor_ln77_11_fu_1438_p2}}, {xor_ln77_10_fu_1417_p2}}, {xor_ln77_9_fu_1396_p2}}, {xor_ln77_8_fu_1375_p2}}, {xor_ln77_7_fu_1354_p2}}, {xor_ln77_6_fu_1333_p2}}, {xor_ln77_5_fu_1312_p2}}, {xor_ln77_4_fu_1291_p2}}, {xor_ln77_3_fu_1270_p2}}, {xor_ln77_2_fu_1249_p2}}, {xor_ln77_1_fu_1228_p2}}, {xor_ln804_fu_1207_p2}}, {tmp_60_fu_1184_p3}}, {tmp_59_fu_1176_p3}}, {tmp_58_fu_1168_p3}}, {tmp_57_fu_1160_p3}}, {tmp_56_fu_1152_p3}}, {tmp_55_fu_1144_p3}}, {tmp_54_fu_1136_p3}}, {tmp_53_fu_1128_p3}}, {tmp_52_fu_1120_p3}}, {tmp_51_fu_1112_p3}}, {tmp_50_fu_1104_p3}}, {tmp_49_fu_1096_p3}}, {tmp_48_fu_1088_p3}}, {tmp_47_fu_1080_p3}}, {tmp_46_fu_1072_p3}}, {tmp_45_fu_1064_p3}}, {tmp_44_fu_1056_p3}}, {tmp_43_fu_1048_p3}}, {tmp_42_fu_1040_p3}}, {tmp_41_fu_1032_p3}}, {tmp_40_fu_1024_p3}}, {tmp_39_fu_1016_p3}}, {tmp_38_fu_1008_p3}}, {tmp_37_fu_1000_p3}}, {tmp_36_fu_992_p3}}, {tmp_35_fu_984_p3}}, {tmp_34_fu_976_p3}}, {tmp_33_fu_968_p3}}, {tmp_32_fu_960_p3}}, {tmp_31_fu_952_p3}}, {xor_ln77_61_fu_946_p2}};

integer ap_tvar_int_24;

always @ (tmp_2_fu_2436_p3) begin
    for (ap_tvar_int_24 = 2 - 1; ap_tvar_int_24 >= 0; ap_tvar_int_24 = ap_tvar_int_24 - 1) begin
        if (ap_tvar_int_24 > 1 - 0) begin
            p_Result_4_fu_2448_p4[ap_tvar_int_24] = 1'b0;
        end else begin
            p_Result_4_fu_2448_p4[ap_tvar_int_24] = tmp_2_fu_2436_p3[1 - ap_tvar_int_24];
        end
    end
end

assign p_Result_50_fu_2384_p6 = {{{{{{{{1'd1}, {b1_modSyms_V_3_fu_2370_p6}}}, {b1_modSyms_V_1_fu_2332_p6}}}, {b1_modSyms_V_2_fu_2356_p6}}}, {b1_modSyms_V_fu_2318_p6}};

assign p_Result_51_fu_2398_p6 = {{{{{{{{1'd0}, {b1_modSyms_V_3_fu_2370_p6}}}, {b1_modSyms_V_1_fu_2332_p6}}}, {b1_modSyms_V_2_fu_2356_p6}}}, {b1_modSyms_V_fu_2318_p6}};

assign p_Result_52_fu_2524_p6 = {{{{{{{{1'd0}, {b1_modSyms_V_7_fu_2510_p6}}}, {b1_modSyms_V_5_fu_2472_p6}}}, {b1_modSyms_V_6_fu_2496_p6}}}, {b1_modSyms_V_4_fu_2458_p6}};

assign p_Result_53_fu_2642_p6 = {{{{{{{{1'd0}, {b1_modSyms_V_11_fu_2628_p6}}}, {b1_modSyms_V_9_fu_2590_p6}}}, {b1_modSyms_V_10_fu_2614_p6}}}, {b1_modSyms_V_8_fu_2576_p6}};

assign p_Result_54_fu_2802_p6 = {{{{{{{{1'd0}, {b1_modSyms_V_15_fu_2788_p6}}}, {b1_modSyms_V_13_fu_2750_p6}}}, {b1_modSyms_V_14_fu_2774_p6}}}, {b1_modSyms_V_12_fu_2736_p6}};

assign p_Result_55_fu_2909_p6 = {{{{{{{{1'd0}, {b1_modSyms_V_19_fu_2895_p6}}}, {b1_modSyms_V_17_fu_2857_p6}}}, {b1_modSyms_V_18_fu_2881_p6}}}, {b1_modSyms_V_16_fu_2843_p6}};

assign p_Result_56_fu_3278_p6 = {{{{{{{{1'd0}, {b1_modSyms_V_23_fu_3264_p6}}}, {b1_modSyms_V_21_fu_3226_p6}}}, {b1_modSyms_V_22_fu_3250_p6}}}, {b1_modSyms_V_20_fu_3212_p6}};

assign p_Result_57_fu_3391_p6 = {{{{{{{{1'd0}, {b1_modSyms_V_27_fu_3377_p6}}}, {b1_modSyms_V_25_fu_3339_p6}}}, {b1_modSyms_V_26_fu_3363_p6}}}, {b1_modSyms_V_24_fu_3325_p6}};

assign p_Result_58_fu_3498_p6 = {{{{{{{{1'd0}, {b1_modSyms_V_31_fu_3484_p6}}}, {b1_modSyms_V_29_fu_3446_p6}}}, {b1_modSyms_V_30_fu_3470_p6}}}, {b1_modSyms_V_28_fu_3432_p6}};

assign p_Result_59_fu_3605_p6 = {{{{{{{{1'd0}, {b1_modSyms_V_35_fu_3591_p6}}}, {b1_modSyms_V_33_fu_3553_p6}}}, {b1_modSyms_V_34_fu_3577_p6}}}, {b1_modSyms_V_32_fu_3539_p6}};

integer ap_tvar_int_25;

always @ (tmp_3_fu_2442_p3) begin
    for (ap_tvar_int_25 = 2 - 1; ap_tvar_int_25 >= 0; ap_tvar_int_25 = ap_tvar_int_25 - 1) begin
        if (ap_tvar_int_25 > 1 - 0) begin
            p_Result_5_fu_2486_p4[ap_tvar_int_25] = 1'b0;
        end else begin
            p_Result_5_fu_2486_p4[ap_tvar_int_25] = tmp_3_fu_2442_p3[1 - ap_tvar_int_25];
        end
    end
end

assign p_Result_60_fu_3712_p6 = {{{{{{{{1'd0}, {b1_modSyms_V_39_fu_3698_p6}}}, {b1_modSyms_V_37_fu_3660_p6}}}, {b1_modSyms_V_38_fu_3684_p6}}}, {b1_modSyms_V_36_fu_3646_p6}};

assign p_Result_61_fu_3819_p6 = {{{{{{{{1'd0}, {b1_modSyms_V_43_fu_3805_p6}}}, {b1_modSyms_V_41_fu_3767_p6}}}, {b1_modSyms_V_42_fu_3791_p6}}}, {b1_modSyms_V_40_fu_3753_p6}};

assign p_Result_62_fu_3926_p6 = {{{{{{{{1'd0}, {b1_modSyms_V_47_fu_3912_p6}}}, {b1_modSyms_V_45_fu_3874_p6}}}, {b1_modSyms_V_46_fu_3898_p6}}}, {b1_modSyms_V_44_fu_3860_p6}};

assign p_Result_63_fu_4033_p6 = {{{{{{{{1'd0}, {b1_modSyms_V_51_fu_4019_p6}}}, {b1_modSyms_V_49_fu_3981_p6}}}, {b1_modSyms_V_50_fu_4005_p6}}}, {b1_modSyms_V_48_fu_3967_p6}};

assign p_Result_64_fu_4140_p6 = {{{{{{{{1'd0}, {b1_modSyms_V_55_fu_4126_p6}}}, {b1_modSyms_V_53_fu_4088_p6}}}, {b1_modSyms_V_54_fu_4112_p6}}}, {b1_modSyms_V_52_fu_4074_p6}};

assign p_Result_65_fu_4247_p6 = {{{{{{{{1'd0}, {b1_modSyms_V_59_fu_4233_p6}}}, {b1_modSyms_V_57_fu_4195_p6}}}, {b1_modSyms_V_58_fu_4219_p6}}}, {b1_modSyms_V_56_fu_4181_p6}};

assign p_Result_66_fu_4336_p6 = {{{{{{{{1'd0}, {b1_modSyms_V_63_fu_4323_p6}}}, {b1_modSyms_V_61_fu_4296_p6}}}, {b1_modSyms_V_62_fu_4310_p6}}}, {b1_modSyms_V_60_fu_4282_p6}};

integer ap_tvar_int_26;

always @ (tmp_8_fu_2821_p3) begin
    for (ap_tvar_int_26 = 2 - 1; ap_tvar_int_26 >= 0; ap_tvar_int_26 = ap_tvar_int_26 - 1) begin
        if (ap_tvar_int_26 > 1 - 0) begin
            p_Result_6_fu_2833_p4[ap_tvar_int_26] = 1'b0;
        end else begin
            p_Result_6_fu_2833_p4[ap_tvar_int_26] = tmp_8_fu_2821_p3[1 - ap_tvar_int_26];
        end
    end
end

integer ap_tvar_int_27;

always @ (tmp_4_fu_2554_p3) begin
    for (ap_tvar_int_27 = 2 - 1; ap_tvar_int_27 >= 0; ap_tvar_int_27 = ap_tvar_int_27 - 1) begin
        if (ap_tvar_int_27 > 1 - 0) begin
            p_Result_7_fu_2566_p4[ap_tvar_int_27] = 1'b0;
        end else begin
            p_Result_7_fu_2566_p4[ap_tvar_int_27] = tmp_4_fu_2554_p3[1 - ap_tvar_int_27];
        end
    end
end

integer ap_tvar_int_28;

always @ (tmp_5_fu_2560_p3) begin
    for (ap_tvar_int_28 = 2 - 1; ap_tvar_int_28 >= 0; ap_tvar_int_28 = ap_tvar_int_28 - 1) begin
        if (ap_tvar_int_28 > 1 - 0) begin
            p_Result_8_fu_2604_p4[ap_tvar_int_28] = 1'b0;
        end else begin
            p_Result_8_fu_2604_p4[ap_tvar_int_28] = tmp_5_fu_2560_p3[1 - ap_tvar_int_28];
        end
    end
end

integer ap_tvar_int_29;

always @ (tmp_9_fu_2827_p3) begin
    for (ap_tvar_int_29 = 2 - 1; ap_tvar_int_29 >= 0; ap_tvar_int_29 = ap_tvar_int_29 - 1) begin
        if (ap_tvar_int_29 > 1 - 0) begin
            p_Result_9_fu_2871_p4[ap_tvar_int_29] = 1'b0;
        end else begin
            p_Result_9_fu_2871_p4[ap_tvar_int_29] = tmp_9_fu_2827_p3[1 - ap_tvar_int_29];
        end
    end
end

integer ap_tvar_int_30;

always @ (tmp_6_fu_2714_p3) begin
    for (ap_tvar_int_30 = 2 - 1; ap_tvar_int_30 >= 0; ap_tvar_int_30 = ap_tvar_int_30 - 1) begin
        if (ap_tvar_int_30 > 1 - 0) begin
            p_Result_s_22_fu_2726_p4[ap_tvar_int_30] = 1'b0;
        end else begin
            p_Result_s_22_fu_2726_p4[ap_tvar_int_30] = tmp_6_fu_2714_p3[1 - ap_tvar_int_30];
        end
    end
end

integer ap_tvar_int_31;

always @ (tmp_fu_2291_p3) begin
    for (ap_tvar_int_31 = 2 - 1; ap_tvar_int_31 >= 0; ap_tvar_int_31 = ap_tvar_int_31 - 1) begin
        if (ap_tvar_int_31 > 1 - 0) begin
            p_Result_s_fu_2308_p4[ap_tvar_int_31] = 1'b0;
        end else begin
            p_Result_s_fu_2308_p4[ap_tvar_int_31] = tmp_fu_2291_p3[1 - ap_tvar_int_31];
        end
    end
end

assign scramblerSeq_V_address0 = idxprom_fu_544_p1;

assign sub_i_i115_fu_2303_p2 = ($signed(leftBits_cast_reg_4776) + $signed(7'd126));

assign sub_i_i144_cast_fu_2059_p1 = $signed(sub_i_i144_fu_2053_p2);

assign sub_i_i144_fu_2053_p2 = ($signed(nBitsdivSSRbits_cast_fu_2049_p1) + $signed(13'd8191));

assign sub_i_i_fu_2083_p2 = ($signed(leftBits_cast_fu_2073_p1) + $signed(7'd127));

assign symbolsOut_TVALID = regslice_both_symbolsOut_V_data_V_U_vld_out;

assign tmp_100_fu_1599_p3 = p_cast_reg_4355[32'd50];

assign tmp_101_fu_1612_p3 = scramblerSeq_V_q0[32'd51];

assign tmp_102_fu_1620_p3 = p_cast_reg_4355[32'd51];

assign tmp_103_fu_1633_p3 = scramblerSeq_V_q0[32'd52];

assign tmp_104_fu_1641_p3 = p_cast_reg_4355[32'd52];

assign tmp_105_fu_1654_p3 = scramblerSeq_V_q0[32'd53];

assign tmp_106_fu_1662_p3 = p_cast_reg_4355[32'd53];

assign tmp_107_fu_1675_p3 = scramblerSeq_V_q0[32'd54];

assign tmp_108_fu_1683_p3 = p_cast_reg_4355[32'd54];

assign tmp_109_fu_1696_p3 = scramblerSeq_V_q0[32'd55];

assign tmp_10_fu_3196_p3 = {{tmp_53_reg_4552}, {tmp_52_reg_4547}};

assign tmp_110_fu_1704_p3 = p_cast_reg_4355[32'd55];

assign tmp_111_fu_1717_p3 = scramblerSeq_V_q0[32'd56];

assign tmp_112_fu_1725_p3 = p_cast_reg_4355[32'd56];

assign tmp_113_fu_1738_p3 = scramblerSeq_V_q0[32'd57];

assign tmp_114_fu_1746_p3 = p_cast_reg_4355[32'd57];

assign tmp_115_fu_1759_p3 = scramblerSeq_V_q0[32'd58];

assign tmp_116_fu_1767_p3 = p_cast_reg_4355[32'd58];

assign tmp_117_fu_1780_p3 = scramblerSeq_V_q0[32'd59];

assign tmp_118_fu_1788_p3 = p_cast_reg_4355[32'd59];

assign tmp_119_fu_1801_p3 = scramblerSeq_V_q0[32'd60];

assign tmp_11_fu_3303_p3 = {{tmp_55_reg_4562}, {tmp_54_reg_4557}};

assign tmp_120_fu_1809_p3 = p_cast_reg_4355[32'd60];

assign tmp_121_fu_1822_p3 = scramblerSeq_V_q0[32'd61];

assign tmp_122_fu_1830_p3 = p_cast_reg_4355[32'd61];

assign tmp_123_fu_1843_p3 = scramblerSeq_V_q0[32'd62];

assign tmp_124_fu_1851_p3 = p_cast_reg_4355[32'd62];

assign tmp_125_fu_1864_p3 = scramblerSeq_V_q0[32'd63];

assign tmp_126_fu_1872_p3 = p_cast_reg_4355[32'd63];

assign tmp_127_fu_2027_p4 = {{add_ln84_fu_2021_p2[4:1]}};

assign tmp_12_fu_3309_p3 = {{tmp_57_reg_4572}, {tmp_56_reg_4567}};

assign tmp_13_fu_3410_p3 = {{tmp_59_reg_4582}, {tmp_58_reg_4577}};

assign tmp_14_fu_3416_p3 = {{xor_ln804_reg_4592}, {tmp_60_reg_4587}};

assign tmp_15_fu_3517_p3 = {{xor_ln77_2_reg_4602}, {xor_ln77_1_reg_4597}};

assign tmp_16_fu_3523_p3 = {{xor_ln77_4_reg_4612}, {xor_ln77_3_reg_4607}};

assign tmp_17_fu_3624_p3 = {{xor_ln77_6_reg_4622}, {xor_ln77_5_reg_4617}};

assign tmp_18_fu_3630_p3 = {{xor_ln77_8_reg_4632}, {xor_ln77_7_reg_4627}};

assign tmp_19_fu_3731_p3 = {{xor_ln77_10_reg_4642}, {xor_ln77_9_reg_4637}};

assign tmp_1_fu_2297_p3 = {{tmp_33_reg_4452}, {tmp_32_reg_4447}};

assign tmp_20_fu_3737_p3 = {{xor_ln77_12_reg_4652}, {xor_ln77_11_reg_4647}};

assign tmp_21_fu_3838_p3 = {{xor_ln77_14_reg_4662}, {xor_ln77_13_reg_4657}};

assign tmp_22_fu_3844_p3 = {{xor_ln77_16_reg_4672}, {xor_ln77_15_reg_4667}};

assign tmp_23_fu_3945_p3 = {{xor_ln77_18_reg_4682}, {xor_ln77_17_reg_4677}};

assign tmp_24_fu_3951_p3 = {{xor_ln77_20_reg_4692}, {xor_ln77_19_reg_4687}};

assign tmp_25_fu_4052_p3 = {{xor_ln77_22_reg_4702}, {xor_ln77_21_reg_4697}};

assign tmp_26_fu_4058_p3 = {{xor_ln77_24_reg_4712}, {xor_ln77_23_reg_4707}};

assign tmp_27_fu_4159_p3 = {{xor_ln77_26_reg_4722}, {xor_ln77_25_reg_4717}};

assign tmp_28_fu_4165_p3 = {{xor_ln77_28_reg_4732}, {xor_ln77_27_reg_4727}};

assign tmp_29_fu_4266_p3 = {{xor_ln77_30_reg_4742}, {xor_ln77_29_reg_4737}};

assign tmp_2_fu_2436_p3 = {{tmp_35_reg_4462}, {tmp_34_reg_4457}};

assign tmp_31_fu_952_p3 = xor_ln77_60_fu_940_p2[32'd1];

assign tmp_32_fu_960_p3 = xor_ln77_59_fu_934_p2[32'd2];

assign tmp_33_fu_968_p3 = xor_ln77_58_fu_928_p2[32'd3];

assign tmp_34_fu_976_p3 = xor_ln77_57_fu_922_p2[32'd4];

assign tmp_35_fu_984_p3 = xor_ln77_56_fu_916_p2[32'd5];

assign tmp_36_fu_992_p3 = xor_ln77_55_fu_910_p2[32'd6];

assign tmp_37_fu_1000_p3 = xor_ln77_54_fu_904_p2[32'd7];

assign tmp_38_fu_1008_p3 = xor_ln77_53_fu_898_p2[32'd8];

assign tmp_39_fu_1016_p3 = xor_ln77_52_fu_892_p2[32'd9];

assign tmp_3_fu_2442_p3 = {{tmp_37_reg_4472}, {tmp_36_reg_4467}};

assign tmp_40_fu_1024_p3 = xor_ln77_51_fu_886_p2[32'd10];

assign tmp_41_fu_1032_p3 = xor_ln77_50_fu_880_p2[32'd11];

assign tmp_42_fu_1040_p3 = xor_ln77_49_fu_874_p2[32'd12];

assign tmp_43_fu_1048_p3 = xor_ln77_48_fu_868_p2[32'd13];

assign tmp_44_fu_1056_p3 = xor_ln77_47_fu_862_p2[32'd14];

assign tmp_45_fu_1064_p3 = xor_ln77_46_fu_856_p2[32'd15];

assign tmp_46_fu_1072_p3 = xor_ln77_45_fu_850_p2[32'd16];

assign tmp_47_fu_1080_p3 = xor_ln77_44_fu_844_p2[32'd17];

assign tmp_48_fu_1088_p3 = xor_ln77_43_fu_838_p2[32'd18];

assign tmp_49_fu_1096_p3 = xor_ln77_42_fu_832_p2[32'd19];

assign tmp_4_fu_2554_p3 = {{tmp_39_reg_4482}, {tmp_38_reg_4477}};

assign tmp_50_fu_1104_p3 = xor_ln77_41_fu_826_p2[32'd20];

assign tmp_51_fu_1112_p3 = xor_ln77_40_fu_820_p2[32'd21];

assign tmp_52_fu_1120_p3 = xor_ln77_39_fu_814_p2[32'd22];

assign tmp_53_fu_1128_p3 = xor_ln77_38_fu_808_p2[32'd23];

assign tmp_54_fu_1136_p3 = xor_ln77_37_fu_802_p2[32'd24];

assign tmp_55_fu_1144_p3 = xor_ln77_36_fu_796_p2[32'd25];

assign tmp_56_fu_1152_p3 = xor_ln77_35_fu_790_p2[32'd26];

assign tmp_57_fu_1160_p3 = xor_ln77_34_fu_784_p2[32'd27];

assign tmp_58_fu_1168_p3 = xor_ln77_33_fu_778_p2[32'd28];

assign tmp_59_fu_1176_p3 = xor_ln77_32_fu_772_p2[32'd29];

assign tmp_5_fu_2560_p3 = {{tmp_41_reg_4492}, {tmp_40_reg_4487}};

assign tmp_60_fu_1184_p3 = xor_ln77_fu_766_p2[32'd30];

assign tmp_61_fu_1192_p3 = scramblerSeq_V_q0[32'd31];

assign tmp_62_fu_1200_p3 = p_cast_reg_4355[32'd31];

assign tmp_63_fu_1213_p3 = scramblerSeq_V_q0[32'd32];

assign tmp_64_fu_1221_p3 = p_cast_reg_4355[32'd32];

assign tmp_65_fu_1234_p3 = scramblerSeq_V_q0[32'd33];

assign tmp_66_fu_1242_p3 = p_cast_reg_4355[32'd33];

assign tmp_67_fu_1255_p3 = scramblerSeq_V_q0[32'd34];

assign tmp_68_fu_1263_p3 = p_cast_reg_4355[32'd34];

assign tmp_69_fu_1276_p3 = scramblerSeq_V_q0[32'd35];

assign tmp_6_fu_2714_p3 = {{tmp_43_reg_4502}, {tmp_42_reg_4497}};

assign tmp_70_fu_1284_p3 = p_cast_reg_4355[32'd35];

assign tmp_71_fu_1297_p3 = scramblerSeq_V_q0[32'd36];

assign tmp_72_fu_1305_p3 = p_cast_reg_4355[32'd36];

assign tmp_73_fu_1318_p3 = scramblerSeq_V_q0[32'd37];

assign tmp_74_fu_1326_p3 = p_cast_reg_4355[32'd37];

assign tmp_75_fu_1339_p3 = scramblerSeq_V_q0[32'd38];

assign tmp_76_fu_1347_p3 = p_cast_reg_4355[32'd38];

assign tmp_77_fu_1360_p3 = scramblerSeq_V_q0[32'd39];

assign tmp_78_fu_1368_p3 = p_cast_reg_4355[32'd39];

assign tmp_79_fu_1381_p3 = scramblerSeq_V_q0[32'd40];

assign tmp_7_fu_2720_p3 = {{tmp_45_reg_4512}, {tmp_44_reg_4507}};

assign tmp_80_fu_1389_p3 = p_cast_reg_4355[32'd40];

assign tmp_81_fu_1402_p3 = scramblerSeq_V_q0[32'd41];

assign tmp_82_fu_1410_p3 = p_cast_reg_4355[32'd41];

assign tmp_83_fu_1423_p3 = scramblerSeq_V_q0[32'd42];

assign tmp_84_fu_1431_p3 = p_cast_reg_4355[32'd42];

assign tmp_85_fu_1444_p3 = scramblerSeq_V_q0[32'd43];

assign tmp_86_fu_1452_p3 = p_cast_reg_4355[32'd43];

assign tmp_87_fu_1465_p3 = scramblerSeq_V_q0[32'd44];

assign tmp_88_fu_1473_p3 = p_cast_reg_4355[32'd44];

assign tmp_89_fu_1486_p3 = scramblerSeq_V_q0[32'd45];

assign tmp_8_fu_2821_p3 = {{tmp_47_reg_4522}, {tmp_46_reg_4517}};

assign tmp_90_fu_1494_p3 = p_cast_reg_4355[32'd45];

assign tmp_91_fu_1507_p3 = scramblerSeq_V_q0[32'd46];

assign tmp_92_fu_1515_p3 = p_cast_reg_4355[32'd46];

assign tmp_93_fu_1528_p3 = scramblerSeq_V_q0[32'd47];

assign tmp_94_fu_1536_p3 = p_cast_reg_4355[32'd47];

assign tmp_95_fu_1549_p3 = scramblerSeq_V_q0[32'd48];

assign tmp_96_fu_1557_p3 = p_cast_reg_4355[32'd48];

assign tmp_97_fu_1570_p3 = scramblerSeq_V_q0[32'd49];

assign tmp_98_fu_1578_p3 = p_cast_reg_4355[32'd49];

assign tmp_99_fu_1591_p3 = scramblerSeq_V_q0[32'd50];

assign tmp_9_fu_2827_p3 = {{tmp_49_reg_4532}, {tmp_48_reg_4527}};

assign tmp_fu_2291_p3 = {{tmp_31_reg_4442}, {xor_ln77_61_reg_4437}};

assign tmp_s_fu_3190_p3 = {{tmp_51_reg_4542}, {tmp_50_reg_4537}};

assign triggerIn_s_V_fu_486_p3 = bitsIn_TDATA_int_regslice[32'd64];

assign trunc_ln779_fu_549_p1 = scramblerSeq_V_q0[30:0];

assign trunc_ln77_10_fu_587_p1 = scramblerSeq_V_q0[4:0];

assign trunc_ln77_11_fu_591_p1 = p_cast_reg_4355[5:0];

assign trunc_ln77_12_fu_594_p1 = scramblerSeq_V_q0[5:0];

assign trunc_ln77_13_fu_598_p1 = p_cast_reg_4355[6:0];

assign trunc_ln77_14_fu_601_p1 = scramblerSeq_V_q0[6:0];

assign trunc_ln77_15_fu_605_p1 = p_cast_reg_4355[7:0];

assign trunc_ln77_16_fu_608_p1 = scramblerSeq_V_q0[7:0];

assign trunc_ln77_17_fu_612_p1 = p_cast_reg_4355[8:0];

assign trunc_ln77_18_fu_615_p1 = scramblerSeq_V_q0[8:0];

assign trunc_ln77_19_fu_619_p1 = p_cast_reg_4355[9:0];

assign trunc_ln77_1_fu_556_p1 = p_cast_reg_4355[0:0];

assign trunc_ln77_20_fu_622_p1 = scramblerSeq_V_q0[9:0];

assign trunc_ln77_21_fu_626_p1 = p_cast_reg_4355[10:0];

assign trunc_ln77_22_fu_629_p1 = scramblerSeq_V_q0[10:0];

assign trunc_ln77_23_fu_633_p1 = p_cast_reg_4355[11:0];

assign trunc_ln77_24_fu_636_p1 = scramblerSeq_V_q0[11:0];

assign trunc_ln77_25_fu_640_p1 = p_cast_reg_4355[12:0];

assign trunc_ln77_26_fu_643_p1 = scramblerSeq_V_q0[12:0];

assign trunc_ln77_27_fu_647_p1 = p_cast_reg_4355[13:0];

assign trunc_ln77_28_fu_650_p1 = scramblerSeq_V_q0[13:0];

assign trunc_ln77_29_fu_654_p1 = p_cast_reg_4355[14:0];

assign trunc_ln77_2_fu_559_p1 = scramblerSeq_V_q0[0:0];

assign trunc_ln77_30_fu_657_p1 = scramblerSeq_V_q0[14:0];

assign trunc_ln77_31_fu_661_p1 = p_cast_reg_4355[15:0];

assign trunc_ln77_32_fu_664_p1 = scramblerSeq_V_q0[15:0];

assign trunc_ln77_33_fu_668_p1 = p_cast_reg_4355[16:0];

assign trunc_ln77_34_fu_671_p1 = scramblerSeq_V_q0[16:0];

assign trunc_ln77_35_fu_675_p1 = p_cast_reg_4355[17:0];

assign trunc_ln77_36_fu_678_p1 = scramblerSeq_V_q0[17:0];

assign trunc_ln77_37_fu_682_p1 = p_cast_reg_4355[18:0];

assign trunc_ln77_38_fu_685_p1 = scramblerSeq_V_q0[18:0];

assign trunc_ln77_39_fu_689_p1 = p_cast_reg_4355[19:0];

assign trunc_ln77_3_fu_563_p1 = p_cast_reg_4355[1:0];

assign trunc_ln77_40_fu_692_p1 = scramblerSeq_V_q0[19:0];

assign trunc_ln77_41_fu_696_p1 = p_cast_reg_4355[20:0];

assign trunc_ln77_42_fu_699_p1 = scramblerSeq_V_q0[20:0];

assign trunc_ln77_43_fu_703_p1 = p_cast_reg_4355[21:0];

assign trunc_ln77_44_fu_706_p1 = scramblerSeq_V_q0[21:0];

assign trunc_ln77_45_fu_710_p1 = p_cast_reg_4355[22:0];

assign trunc_ln77_46_fu_713_p1 = scramblerSeq_V_q0[22:0];

assign trunc_ln77_47_fu_717_p1 = p_cast_reg_4355[23:0];

assign trunc_ln77_48_fu_720_p1 = scramblerSeq_V_q0[23:0];

assign trunc_ln77_49_fu_724_p1 = p_cast_reg_4355[24:0];

assign trunc_ln77_4_fu_566_p1 = scramblerSeq_V_q0[1:0];

assign trunc_ln77_50_fu_727_p1 = scramblerSeq_V_q0[24:0];

assign trunc_ln77_51_fu_731_p1 = p_cast_reg_4355[25:0];

assign trunc_ln77_52_fu_734_p1 = scramblerSeq_V_q0[25:0];

assign trunc_ln77_53_fu_738_p1 = p_cast_reg_4355[26:0];

assign trunc_ln77_54_fu_741_p1 = scramblerSeq_V_q0[26:0];

assign trunc_ln77_55_fu_745_p1 = p_cast_reg_4355[27:0];

assign trunc_ln77_56_fu_748_p1 = scramblerSeq_V_q0[27:0];

assign trunc_ln77_57_fu_752_p1 = p_cast_reg_4355[28:0];

assign trunc_ln77_58_fu_755_p1 = scramblerSeq_V_q0[28:0];

assign trunc_ln77_59_fu_759_p1 = p_cast_reg_4355[29:0];

assign trunc_ln77_5_fu_570_p1 = p_cast_reg_4355[2:0];

assign trunc_ln77_60_fu_762_p1 = scramblerSeq_V_q0[29:0];

assign trunc_ln77_6_fu_573_p1 = scramblerSeq_V_q0[2:0];

assign trunc_ln77_7_fu_577_p1 = p_cast_reg_4355[3:0];

assign trunc_ln77_8_fu_580_p1 = scramblerSeq_V_q0[3:0];

assign trunc_ln77_9_fu_584_p1 = p_cast_reg_4355[4:0];

assign trunc_ln77_fu_553_p1 = p_cast_reg_4355[30:0];

assign xor_ln77_10_fu_1417_p2 = (tmp_82_fu_1410_p3 ^ tmp_81_fu_1402_p3);

assign xor_ln77_11_fu_1438_p2 = (tmp_84_fu_1431_p3 ^ tmp_83_fu_1423_p3);

assign xor_ln77_12_fu_1459_p2 = (tmp_86_fu_1452_p3 ^ tmp_85_fu_1444_p3);

assign xor_ln77_13_fu_1480_p2 = (tmp_88_fu_1473_p3 ^ tmp_87_fu_1465_p3);

assign xor_ln77_14_fu_1501_p2 = (tmp_90_fu_1494_p3 ^ tmp_89_fu_1486_p3);

assign xor_ln77_15_fu_1522_p2 = (tmp_92_fu_1515_p3 ^ tmp_91_fu_1507_p3);

assign xor_ln77_16_fu_1543_p2 = (tmp_94_fu_1536_p3 ^ tmp_93_fu_1528_p3);

assign xor_ln77_17_fu_1564_p2 = (tmp_96_fu_1557_p3 ^ tmp_95_fu_1549_p3);

assign xor_ln77_18_fu_1585_p2 = (tmp_98_fu_1578_p3 ^ tmp_97_fu_1570_p3);

assign xor_ln77_19_fu_1606_p2 = (tmp_99_fu_1591_p3 ^ tmp_100_fu_1599_p3);

assign xor_ln77_1_fu_1228_p2 = (tmp_64_fu_1221_p3 ^ tmp_63_fu_1213_p3);

assign xor_ln77_20_fu_1627_p2 = (tmp_102_fu_1620_p3 ^ tmp_101_fu_1612_p3);

assign xor_ln77_21_fu_1648_p2 = (tmp_104_fu_1641_p3 ^ tmp_103_fu_1633_p3);

assign xor_ln77_22_fu_1669_p2 = (tmp_106_fu_1662_p3 ^ tmp_105_fu_1654_p3);

assign xor_ln77_23_fu_1690_p2 = (tmp_108_fu_1683_p3 ^ tmp_107_fu_1675_p3);

assign xor_ln77_24_fu_1711_p2 = (tmp_110_fu_1704_p3 ^ tmp_109_fu_1696_p3);

assign xor_ln77_25_fu_1732_p2 = (tmp_112_fu_1725_p3 ^ tmp_111_fu_1717_p3);

assign xor_ln77_26_fu_1753_p2 = (tmp_114_fu_1746_p3 ^ tmp_113_fu_1738_p3);

assign xor_ln77_27_fu_1774_p2 = (tmp_116_fu_1767_p3 ^ tmp_115_fu_1759_p3);

assign xor_ln77_28_fu_1795_p2 = (tmp_118_fu_1788_p3 ^ tmp_117_fu_1780_p3);

assign xor_ln77_29_fu_1816_p2 = (tmp_120_fu_1809_p3 ^ tmp_119_fu_1801_p3);

assign xor_ln77_2_fu_1249_p2 = (tmp_66_fu_1242_p3 ^ tmp_65_fu_1234_p3);

assign xor_ln77_30_fu_1837_p2 = (tmp_122_fu_1830_p3 ^ tmp_121_fu_1822_p3);

assign xor_ln77_31_fu_1858_p2 = (tmp_124_fu_1851_p3 ^ tmp_123_fu_1843_p3);

assign xor_ln77_32_fu_772_p2 = (trunc_ln77_60_fu_762_p1 ^ trunc_ln77_59_fu_759_p1);

assign xor_ln77_33_fu_778_p2 = (trunc_ln77_58_fu_755_p1 ^ trunc_ln77_57_fu_752_p1);

assign xor_ln77_34_fu_784_p2 = (trunc_ln77_56_fu_748_p1 ^ trunc_ln77_55_fu_745_p1);

assign xor_ln77_35_fu_790_p2 = (trunc_ln77_54_fu_741_p1 ^ trunc_ln77_53_fu_738_p1);

assign xor_ln77_36_fu_796_p2 = (trunc_ln77_52_fu_734_p1 ^ trunc_ln77_51_fu_731_p1);

assign xor_ln77_37_fu_802_p2 = (trunc_ln77_50_fu_727_p1 ^ trunc_ln77_49_fu_724_p1);

assign xor_ln77_38_fu_808_p2 = (trunc_ln77_48_fu_720_p1 ^ trunc_ln77_47_fu_717_p1);

assign xor_ln77_39_fu_814_p2 = (trunc_ln77_46_fu_713_p1 ^ trunc_ln77_45_fu_710_p1);

assign xor_ln77_3_fu_1270_p2 = (tmp_68_fu_1263_p3 ^ tmp_67_fu_1255_p3);

assign xor_ln77_40_fu_820_p2 = (trunc_ln77_44_fu_706_p1 ^ trunc_ln77_43_fu_703_p1);

assign xor_ln77_41_fu_826_p2 = (trunc_ln77_42_fu_699_p1 ^ trunc_ln77_41_fu_696_p1);

assign xor_ln77_42_fu_832_p2 = (trunc_ln77_40_fu_692_p1 ^ trunc_ln77_39_fu_689_p1);

assign xor_ln77_43_fu_838_p2 = (trunc_ln77_38_fu_685_p1 ^ trunc_ln77_37_fu_682_p1);

assign xor_ln77_44_fu_844_p2 = (trunc_ln77_36_fu_678_p1 ^ trunc_ln77_35_fu_675_p1);

assign xor_ln77_45_fu_850_p2 = (trunc_ln77_34_fu_671_p1 ^ trunc_ln77_33_fu_668_p1);

assign xor_ln77_46_fu_856_p2 = (trunc_ln77_32_fu_664_p1 ^ trunc_ln77_31_fu_661_p1);

assign xor_ln77_47_fu_862_p2 = (trunc_ln77_30_fu_657_p1 ^ trunc_ln77_29_fu_654_p1);

assign xor_ln77_48_fu_868_p2 = (trunc_ln77_28_fu_650_p1 ^ trunc_ln77_27_fu_647_p1);

assign xor_ln77_49_fu_874_p2 = (trunc_ln77_26_fu_643_p1 ^ trunc_ln77_25_fu_640_p1);

assign xor_ln77_4_fu_1291_p2 = (tmp_70_fu_1284_p3 ^ tmp_69_fu_1276_p3);

assign xor_ln77_50_fu_880_p2 = (trunc_ln77_24_fu_636_p1 ^ trunc_ln77_23_fu_633_p1);

assign xor_ln77_51_fu_886_p2 = (trunc_ln77_22_fu_629_p1 ^ trunc_ln77_21_fu_626_p1);

assign xor_ln77_52_fu_892_p2 = (trunc_ln77_20_fu_622_p1 ^ trunc_ln77_19_fu_619_p1);

assign xor_ln77_53_fu_898_p2 = (trunc_ln77_18_fu_615_p1 ^ trunc_ln77_17_fu_612_p1);

assign xor_ln77_54_fu_904_p2 = (trunc_ln77_16_fu_608_p1 ^ trunc_ln77_15_fu_605_p1);

assign xor_ln77_55_fu_910_p2 = (trunc_ln77_14_fu_601_p1 ^ trunc_ln77_13_fu_598_p1);

assign xor_ln77_56_fu_916_p2 = (trunc_ln77_12_fu_594_p1 ^ trunc_ln77_11_fu_591_p1);

assign xor_ln77_57_fu_922_p2 = (trunc_ln77_9_fu_584_p1 ^ trunc_ln77_10_fu_587_p1);

assign xor_ln77_58_fu_928_p2 = (trunc_ln77_8_fu_580_p1 ^ trunc_ln77_7_fu_577_p1);

assign xor_ln77_59_fu_934_p2 = (trunc_ln77_6_fu_573_p1 ^ trunc_ln77_5_fu_570_p1);

assign xor_ln77_5_fu_1312_p2 = (tmp_72_fu_1305_p3 ^ tmp_71_fu_1297_p3);

assign xor_ln77_60_fu_940_p2 = (trunc_ln77_4_fu_566_p1 ^ trunc_ln77_3_fu_563_p1);

assign xor_ln77_61_fu_946_p2 = (trunc_ln77_2_fu_559_p1 ^ trunc_ln77_1_fu_556_p1);

assign xor_ln77_6_fu_1333_p2 = (tmp_74_fu_1326_p3 ^ tmp_73_fu_1318_p3);

assign xor_ln77_7_fu_1354_p2 = (tmp_76_fu_1347_p3 ^ tmp_75_fu_1339_p3);

assign xor_ln77_8_fu_1375_p2 = (tmp_78_fu_1368_p3 ^ tmp_77_fu_1360_p3);

assign xor_ln77_9_fu_1396_p2 = (tmp_80_fu_1389_p3 ^ tmp_79_fu_1381_p3);

assign xor_ln77_fu_766_p2 = (trunc_ln77_fu_553_p1 ^ trunc_ln779_fu_549_p1);

assign xor_ln804_1_fu_1879_p2 = (tmp_126_fu_1872_p3 ^ tmp_125_fu_1864_p3);

assign xor_ln804_fu_1207_p2 = (tmp_62_fu_1200_p3 ^ tmp_61_fu_1192_p3);

assign zext_ln258_10_fu_3833_p1 = p_Result_61_fu_3819_p6;

assign zext_ln258_11_fu_3940_p1 = p_Result_62_fu_3926_p6;

assign zext_ln258_12_fu_4047_p1 = p_Result_63_fu_4033_p6;

assign zext_ln258_13_fu_4154_p1 = p_Result_64_fu_4140_p6;

assign zext_ln258_14_fu_4261_p1 = p_Result_65_fu_4247_p6;

assign zext_ln258_15_fu_4350_p1 = p_Result_66_fu_4336_p6;

assign zext_ln258_1_fu_2549_p1 = p_Result_52_fu_2524_p6;

assign zext_ln258_2_fu_2667_p1 = p_Result_53_fu_2642_p6;

assign zext_ln258_3_fu_2816_p1 = p_Result_54_fu_2802_p6;

assign zext_ln258_4_fu_2934_p1 = p_Result_55_fu_2909_p6;

assign zext_ln258_5_fu_3292_p1 = p_Result_56_fu_3278_p6;

assign zext_ln258_6_fu_3405_p1 = p_Result_57_fu_3391_p6;

assign zext_ln258_7_fu_3512_p1 = p_Result_58_fu_3498_p6;

assign zext_ln258_8_fu_3619_p1 = p_Result_59_fu_3605_p6;

assign zext_ln258_9_fu_3726_p1 = p_Result_60_fu_3712_p6;

assign zext_ln258_fu_2431_p1 = modSymOutT_data_V_fu_2412_p3;

assign zext_ln84_fu_2017_p1 = modOrder_0_data_reg;

always @ (posedge ap_clk) begin
    modOrder_0_vld_reg <= 1'b0;
    nBitsdivSSRbits_0_vld_reg <= 1'b0;
    leftBits_0_vld_reg <= 1'b0;
    leftBits_cast_reg_4776[6] <= 1'b0;
end


reg find_kernel_block = 0;
// synthesis translate_off
`include "nrPDSCH_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on

endmodule //nrPDSCH


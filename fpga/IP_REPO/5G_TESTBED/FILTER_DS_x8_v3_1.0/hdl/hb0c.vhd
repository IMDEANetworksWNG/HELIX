-- -------------------------------------------------------------
-- 
-- File Name: hdlsrc\HBF_64_test_simulink\hb0c.vhd
-- Created: 2021-12-08 13:38:15
-- 
-- Generated by MATLAB 9.10 and HDL Coder 3.18
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: hb0c
-- Source Path: HBF_64_test_simulink/HBF_x8/hb0c
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY hb0c IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        hdl_in_re                         :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
        hdl_in_im                         :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
        valid_in                          :   IN    std_logic;
        Out1_re                           :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
        Out1_im                           :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
        Out2                              :   OUT   std_logic
        );
END hb0c;


ARCHITECTURE rtl OF hb0c IS

  -- Component Declarations
  COMPONENT FIR_Decimation_HDL_Optimized_block
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          dataIn_re                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          dataIn_im                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          validIn                         :   IN    std_logic;
          dataOut_re                      :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En22
          dataOut_im                      :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En22
          validOut                        :   OUT   std_logic
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : FIR_Decimation_HDL_Optimized_block
    USE ENTITY work.FIR_Decimation_HDL_Optimized_block(rtl);

  -- Signals
  SIGNAL hdl_out_re                       : std_logic_vector(23 DOWNTO 0);  -- ufix24
  SIGNAL hdl_out_im                       : std_logic_vector(23 DOWNTO 0);  -- ufix24
  SIGNAL FIR_Decimation_HDL_Optimized_out2 : std_logic;
  SIGNAL hdl_out_re_signed                : signed(23 DOWNTO 0);  -- sfix24_En22
  SIGNAL hdl_out_im_signed                : signed(23 DOWNTO 0);  -- sfix24_En22
  SIGNAL Data_Type_Conversion_out1_re     : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL Data_Type_Conversion_out1_im     : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL Delay2_out1_re                   : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL Delay2_out1_im                   : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL Delay3_out1                      : std_logic;

BEGIN
  u_FIR_Decimation_HDL_Optimized : FIR_Decimation_HDL_Optimized_block
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              dataIn_re => hdl_in_re,  -- sfix16_En15
              dataIn_im => hdl_in_im,  -- sfix16_En15
              validIn => valid_in,
              dataOut_re => hdl_out_re,  -- sfix24_En22
              dataOut_im => hdl_out_im,  -- sfix24_En22
              validOut => FIR_Decimation_HDL_Optimized_out2
              );

  hdl_out_re_signed <= signed(hdl_out_re);

  hdl_out_im_signed <= signed(hdl_out_im);

  
  Data_Type_Conversion_out1_re <= X"7FFF" WHEN (hdl_out_re_signed(23) = '0') AND (hdl_out_re_signed(22) /= '0') ELSE
      X"8000" WHEN (hdl_out_re_signed(23) = '1') AND (hdl_out_re_signed(22) /= '1') ELSE
      hdl_out_re_signed(22 DOWNTO 7);
  
  Data_Type_Conversion_out1_im <= X"7FFF" WHEN (hdl_out_im_signed(23) = '0') AND (hdl_out_im_signed(22) /= '0') ELSE
      X"8000" WHEN (hdl_out_im_signed(23) = '1') AND (hdl_out_im_signed(22) /= '1') ELSE
      hdl_out_im_signed(22 DOWNTO 7);

  Delay2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay2_out1_re <= to_signed(16#0000#, 16);
      Delay2_out1_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay2_out1_re <= Data_Type_Conversion_out1_re;
        Delay2_out1_im <= Data_Type_Conversion_out1_im;
      END IF;
    END IF;
  END PROCESS Delay2_process;


  Out1_re <= std_logic_vector(Delay2_out1_re);

  Out1_im <= std_logic_vector(Delay2_out1_im);

  Delay3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay3_out1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay3_out1 <= FIR_Decimation_HDL_Optimized_out2;
      END IF;
    END IF;
  END PROCESS Delay3_process;


  Out2 <= Delay3_out1;

END rtl;


-- -------------------------------------------------------------
-- 
-- File Name: hdlsrc\HBF_64_test_simulink\hb0a.vhd
-- Created: 2021-12-08 13:38:15
-- 
-- Generated by MATLAB 9.10 and HDL Coder 3.18
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: hb0a
-- Source Path: HBF_64_test_simulink/HBF_x8/hb0a
-- Hierarchy Level: 1
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.HBF_x8_pkg.ALL;

ENTITY hb0a IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        hdl_in_re                         :   IN    vector_of_std_logic_vector16(0 TO 1);  -- sfix16_En15 [2]
        hdl_in_im                         :   IN    vector_of_std_logic_vector16(0 TO 1);  -- sfix16_En15 [2]
        valid_in                          :   IN    std_logic;
        Out1_re                           :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
        Out1_im                           :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
        Out2                              :   OUT   std_logic
        );
END hb0a;


ARCHITECTURE rtl OF hb0a IS

  -- Component Declarations
  COMPONENT CICDecimation
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb                             :   IN    std_logic;
          dataIn_re                       :   IN    vector_of_std_logic_vector16(0 TO 1);  -- sfix16_En15 [2]
          dataIn_im                       :   IN    vector_of_std_logic_vector16(0 TO 1);  -- sfix16_En15 [2]
          validIn                         :   IN    std_logic;
          dataOut_re                      :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En13
          dataOut_im                      :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En13
          validOut                        :   OUT   std_logic
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : CICDecimation
    USE ENTITY work.CICDecimation(rtl);

  -- Signals
  SIGNAL hdl_out_re                       : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL hdl_out_im                       : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL CIC_Decimation_HDL_Optimized_out2 : std_logic;
  SIGNAL hdl_out_re_signed                : signed(15 DOWNTO 0);  -- sfix16_En13
  SIGNAL hdl_out_im_signed                : signed(15 DOWNTO 0);  -- sfix16_En13
  SIGNAL Shift_Arithmetic_out1_re         : signed(15 DOWNTO 0);  -- sfix16_En13
  SIGNAL Shift_Arithmetic_out1_im         : signed(15 DOWNTO 0);  -- sfix16_En13
  SIGNAL Data_Type_Conversion_out1_re     : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL Data_Type_Conversion_out1_im     : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL Delay2_out1_re                   : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL Delay2_out1_im                   : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL Delay3_out1                      : std_logic;

BEGIN
  -- StartHere
  u_CIC_Decimation_HDL_Optimized_inst : CICDecimation
    PORT MAP( clk => clk,
              reset => reset,
              enb => enb,
              dataIn_re => hdl_in_re,  -- sfix16_En15 [2]
              dataIn_im => hdl_in_im,  -- sfix16_En15 [2]
              validIn => valid_in,
              dataOut_re => hdl_out_re,  -- sfix16_En13
              dataOut_im => hdl_out_im,  -- sfix16_En13
              validOut => CIC_Decimation_HDL_Optimized_out2
              );

  hdl_out_re_signed <= signed(hdl_out_re);

  hdl_out_im_signed <= signed(hdl_out_im);

  Shift_Arithmetic_out1_re <= SHIFT_RIGHT(hdl_out_re_signed, 2);
  Shift_Arithmetic_out1_im <= SHIFT_RIGHT(hdl_out_im_signed, 2);

  
  Data_Type_Conversion_out1_re <= X"7FFF" WHEN (Shift_Arithmetic_out1_re(15) = '0') AND (Shift_Arithmetic_out1_re(14 DOWNTO 13) /= "00") ELSE
      X"8000" WHEN (Shift_Arithmetic_out1_re(15) = '1') AND (Shift_Arithmetic_out1_re(14 DOWNTO 13) /= "11") ELSE
      Shift_Arithmetic_out1_re(13 DOWNTO 0) & '0' & '0';
  
  Data_Type_Conversion_out1_im <= X"7FFF" WHEN (Shift_Arithmetic_out1_im(15) = '0') AND (Shift_Arithmetic_out1_im(14 DOWNTO 13) /= "00") ELSE
      X"8000" WHEN (Shift_Arithmetic_out1_im(15) = '1') AND (Shift_Arithmetic_out1_im(14 DOWNTO 13) /= "11") ELSE
      Shift_Arithmetic_out1_im(13 DOWNTO 0) & '0' & '0';

  Delay2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay2_out1_re <= to_signed(16#0000#, 16);
      Delay2_out1_im <= to_signed(16#0000#, 16);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay2_out1_re <= Data_Type_Conversion_out1_re;
        Delay2_out1_im <= Data_Type_Conversion_out1_im;
      END IF;
    END IF;
  END PROCESS Delay2_process;


  Out1_re <= std_logic_vector(Delay2_out1_re);

  Out1_im <= std_logic_vector(Delay2_out1_im);

  Delay3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      Delay3_out1 <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        Delay3_out1 <= CIC_Decimation_HDL_Optimized_out2;
      END IF;
    END IF;
  END PROCESS Delay3_process;


  Out2 <= Delay3_out1;

END rtl;


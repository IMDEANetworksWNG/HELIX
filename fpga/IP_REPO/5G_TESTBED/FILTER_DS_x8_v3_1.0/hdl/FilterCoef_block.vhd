-- -------------------------------------------------------------
-- 
-- File Name: hdlsrc\HBF_64_test_simulink\FilterCoef_block.vhd
-- Created: 2021-12-08 13:38:15
-- 
-- Generated by MATLAB 9.10 and HDL Coder 3.18
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: FilterCoef_block
-- Source Path: HBF_64_test_simulink/HBF_x8/hb0c/FIR Decimation HDL Optimized/FilterBank/FilterCoef
-- Hierarchy Level: 4
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.HBF_x8_pkg.ALL;

ENTITY FilterCoef_block IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        validIn                           :   IN    std_logic;
        syncReset                         :   IN    std_logic;
        CoefOut                           :   OUT   vector_of_std_logic_vector8(0 TO 3)  -- sfix8_En7 [4]
        );
END FilterCoef_block;


ARCHITECTURE rtl OF FilterCoef_block IS

  -- Constants
  CONSTANT Coef_table_table_data          : vector_of_signed8(0 TO 1) := 
    (to_signed(16#00#, 8), to_signed(-16#04#, 8));  -- sfix8 [2]
  CONSTANT Coef_table_table_data_2        : vector_of_signed8(0 TO 1) := 
    (to_signed(16#40#, 8), to_signed(16#24#, 8));  -- sfix8 [2]
  CONSTANT Coef_table_table_data_4        : vector_of_signed8(0 TO 1) := 
    (to_signed(16#00#, 8), to_signed(16#24#, 8));  -- sfix8 [2]
  CONSTANT Coef_table_table_data_6        : vector_of_signed8(0 TO 1) := 
    (to_signed(16#00#, 8), to_signed(-16#04#, 8));  -- sfix8 [2]

  -- Signals
  SIGNAL CoefAddr_cnt                     : std_logic;  -- ufix1
  SIGNAL CoefAddr_state                   : std_logic;  -- ufix1
  SIGNAL CoefAddr_cnt_next                : std_logic;  -- ufix1
  SIGNAL CoefAddr_state_next              : std_logic;  -- ufix1
  SIGNAL CoefAddr_1                       : std_logic;  -- ufix1
  SIGNAL Coef_table_cast                  : signed(31 DOWNTO 0);  -- int32
  SIGNAL CoefData                         : signed(7 DOWNTO 0);  -- sfix8_En7
  SIGNAL CoefReg                          : signed(7 DOWNTO 0);  -- sfix8_En7
  SIGNAL Coef_table_cast_1                : signed(31 DOWNTO 0);  -- int32
  SIGNAL CoefData_1                       : signed(7 DOWNTO 0);  -- sfix8_En7
  SIGNAL CoefReg_1                        : signed(7 DOWNTO 0);  -- sfix8_En7
  SIGNAL Coef_table_cast_2                : signed(31 DOWNTO 0);  -- int32
  SIGNAL CoefData_2                       : signed(7 DOWNTO 0);  -- sfix8_En7
  SIGNAL CoefReg_2                        : signed(7 DOWNTO 0);  -- sfix8_En7
  SIGNAL Coef_table_cast_3                : signed(31 DOWNTO 0);  -- int32
  SIGNAL CoefData_3                       : signed(7 DOWNTO 0);  -- sfix8_En7
  SIGNAL CoefReg_3                        : signed(7 DOWNTO 0);  -- sfix8_En7
  SIGNAL CoefOut_tmp                      : vector_of_signed8(0 TO 3);  -- sfix8_En7 [4]

BEGIN
  -- CoefAddr
  CoefAddr_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      CoefAddr_cnt <= '0';
      CoefAddr_state <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF syncReset = '1' THEN
          CoefAddr_cnt <= '0';
          CoefAddr_state <= '0';
        ELSE 
          CoefAddr_cnt <= CoefAddr_cnt_next;
          CoefAddr_state <= CoefAddr_state_next;
        END IF;
      END IF;
    END IF;
  END PROCESS CoefAddr_process;

  CoefAddr_output : PROCESS (CoefAddr_cnt, CoefAddr_state, validIn)
    VARIABLE add_cast : unsigned(1 DOWNTO 0);
    VARIABLE add_temp : unsigned(1 DOWNTO 0);
  BEGIN
    add_temp := to_unsigned(16#0#, 2);
    add_cast := to_unsigned(16#0#, 2);
    CoefAddr_cnt_next <= CoefAddr_cnt;
    CoefAddr_state_next <= CoefAddr_state;
    CoefAddr_1 <= CoefAddr_cnt;
    CASE CoefAddr_state IS
      WHEN '0' =>
        CoefAddr_state_next <= '0';
        CoefAddr_cnt_next <= '0';
        IF validIn = '1' THEN 
          CoefAddr_state_next <= '1';
        END IF;
      WHEN '1' =>
        CoefAddr_state_next <= '1';
        IF validIn = '1' THEN 
          IF CoefAddr_cnt = '1' THEN 
            CoefAddr_cnt_next <= '0';
          ELSE 
            add_cast := '0' & CoefAddr_cnt;
            add_temp := add_cast + to_unsigned(16#1#, 2);
            CoefAddr_cnt_next <= add_temp(0);
          END IF;
        END IF;
      WHEN OTHERS => 
        CoefAddr_cnt_next <= '0';
        CoefAddr_state_next <= '0';
    END CASE;
  END PROCESS CoefAddr_output;


  -- CoefTable_1
  Coef_table_cast <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & CoefAddr_1;
  CoefData <= Coef_table_table_data(to_integer(Coef_table_cast));

  FilterCoef_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      CoefReg <= to_signed(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        CoefReg <= CoefData;
      END IF;
    END IF;
  END PROCESS FilterCoef_process;


  -- CoefTable_2
  Coef_table_cast_1 <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & CoefAddr_1;
  CoefData_1 <= Coef_table_table_data_2(to_integer(Coef_table_cast_1));

  FilterCoef_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      CoefReg_1 <= to_signed(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        CoefReg_1 <= CoefData_1;
      END IF;
    END IF;
  END PROCESS FilterCoef_1_process;


  -- CoefTable_3
  Coef_table_cast_2 <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & CoefAddr_1;
  CoefData_2 <= Coef_table_table_data_4(to_integer(Coef_table_cast_2));

  FilterCoef_2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      CoefReg_2 <= to_signed(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        CoefReg_2 <= CoefData_2;
      END IF;
    END IF;
  END PROCESS FilterCoef_2_process;


  -- CoefTable_4
  Coef_table_cast_3 <= '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & '0' & CoefAddr_1;
  CoefData_3 <= Coef_table_table_data_6(to_integer(Coef_table_cast_3));

  FilterCoef_3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      CoefReg_3 <= to_signed(16#00#, 8);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        CoefReg_3 <= CoefData_3;
      END IF;
    END IF;
  END PROCESS FilterCoef_3_process;


  CoefOut_tmp(0) <= CoefReg;
  CoefOut_tmp(1) <= CoefReg_1;
  CoefOut_tmp(2) <= CoefReg_2;
  CoefOut_tmp(3) <= CoefReg_3;

  outputgen: FOR k IN 0 TO 3 GENERATE
    CoefOut(k) <= std_logic_vector(CoefOut_tmp(k));
  END GENERATE;

END rtl;


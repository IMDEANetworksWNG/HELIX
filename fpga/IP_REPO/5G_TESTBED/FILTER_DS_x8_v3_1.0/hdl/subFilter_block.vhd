-- -------------------------------------------------------------
-- 
-- File Name: hdlsrc\HBF_64_test_simulink\subFilter_block.vhd
-- Created: 2021-12-08 13:38:15
-- 
-- Generated by MATLAB 9.10 and HDL Coder 3.18
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: subFilter_block
-- Source Path: HBF_64_test_simulink/HBF_x8/hb0c/FIR Decimation HDL Optimized/FilterBank/subFilter
-- Hierarchy Level: 4
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;
USE work.HBF_x8_pkg.ALL;

ENTITY subFilter_block IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb                               :   IN    std_logic;
        dinReg2_0_re                      :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
        coefIn                            :   IN    vector_of_std_logic_vector8(0 TO 3);  -- sfix8_En7 [4]
        dinRegVld                         :   IN    std_logic;
        syncReset                         :   IN    std_logic;
        dout_1_re                         :   OUT   std_logic_vector(23 DOWNTO 0);  -- sfix24_En22
        doutVld                           :   OUT   std_logic
        );
END subFilter_block;


ARCHITECTURE rtl OF subFilter_block IS

  -- Component Declarations
  COMPONENT FilterTapSystolicWvldin_block
    PORT( clk                             :   IN    std_logic;
          enb                             :   IN    std_logic;
          dinReg2_0_re                    :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          coefIn_0                        :   IN    std_logic_vector(7 DOWNTO 0);  -- sfix8_En7
          addin                           :   IN    std_logic_vector(23 DOWNTO 0);  -- sfix24_En22
          dinRegVld                       :   IN    std_logic;
          dinDly2                         :   OUT   std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          tapout                          :   OUT   std_logic_vector(23 DOWNTO 0)  -- sfix24_En22
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : FilterTapSystolicWvldin_block
    USE ENTITY work.FilterTapSystolicWvldin_block(rtl);

  -- Signals
  SIGNAL intdelay_reg                     : std_logic_vector(0 TO 9);  -- ufix1 [10]
  SIGNAL vldShift                         : std_logic;
  SIGNAL vldOutTmp                        : std_logic;
  SIGNAL ZERO_OUT                         : signed(23 DOWNTO 0);  -- sfix24_En22
  SIGNAL addin                            : signed(23 DOWNTO 0);  -- sfix24_En22
  SIGNAL dinDly2                          : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL tapout                           : std_logic_vector(23 DOWNTO 0);  -- ufix24
  SIGNAL dinDly2_signed                   : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL intdelay_reg_1                   : vector_of_signed16(0 TO 1);  -- sfix16 [2]
  SIGNAL dlyLineOut2                      : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL tapout_signed                    : signed(23 DOWNTO 0);  -- sfix24_En22
  SIGNAL dlyLineOut1                      : signed(23 DOWNTO 0);  -- sfix24_En22
  SIGNAL dinDly2_1                        : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL tapout_1                         : std_logic_vector(23 DOWNTO 0);  -- ufix24
  SIGNAL dinDly2_signed_1                 : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL intdelay_reg_2                   : vector_of_signed16(0 TO 1);  -- sfix16 [2]
  SIGNAL dlyLineOut2_1                    : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL tapout_signed_1                  : signed(23 DOWNTO 0);  -- sfix24_En22
  SIGNAL dlyLineOut1_1                    : signed(23 DOWNTO 0);  -- sfix24_En22
  SIGNAL dinDly2_2                        : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL tapout_2                         : std_logic_vector(23 DOWNTO 0);  -- ufix24
  SIGNAL dinDly2_signed_2                 : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL intdelay_reg_3                   : vector_of_signed16(0 TO 1);  -- sfix16 [2]
  SIGNAL dlyLineOut2_2                    : signed(15 DOWNTO 0);  -- sfix16_En15
  SIGNAL tapout_signed_2                  : signed(23 DOWNTO 0);  -- sfix24_En22
  SIGNAL dlyLineOut1_2                    : signed(23 DOWNTO 0);  -- sfix24_En22
  SIGNAL dinDly2deadOut                   : std_logic_vector(15 DOWNTO 0);  -- ufix16
  SIGNAL tapout_3                         : std_logic_vector(23 DOWNTO 0);  -- ufix24
  SIGNAL tapout_signed_3                  : signed(23 DOWNTO 0);  -- sfix24_En22
  SIGNAL muxOut                           : signed(23 DOWNTO 0);  -- sfix24_En22
  SIGNAL dout_1_re_tmp                    : signed(23 DOWNTO 0);  -- sfix24_En22

BEGIN
  u_FilterTap_1 : FilterTapSystolicWvldin_block
    PORT MAP( clk => clk,
              enb => enb,
              dinReg2_0_re => dinReg2_0_re,  -- sfix16_En15
              coefIn_0 => coefIn(0),  -- sfix8_En7
              addin => std_logic_vector(addin),  -- sfix24_En22
              dinRegVld => dinRegVld,
              dinDly2 => dinDly2,  -- sfix16_En15
              tapout => tapout  -- sfix24_En22
              );

  u_FilterTap_2 : FilterTapSystolicWvldin_block
    PORT MAP( clk => clk,
              enb => enb,
              dinReg2_0_re => std_logic_vector(dlyLineOut2),  -- sfix16_En15
              coefIn_0 => coefIn(1),  -- sfix8_En7
              addin => std_logic_vector(dlyLineOut1),  -- sfix24_En22
              dinRegVld => dinRegVld,
              dinDly2 => dinDly2_1,  -- sfix16_En15
              tapout => tapout_1  -- sfix24_En22
              );

  u_FilterTap_3 : FilterTapSystolicWvldin_block
    PORT MAP( clk => clk,
              enb => enb,
              dinReg2_0_re => std_logic_vector(dlyLineOut2_1),  -- sfix16_En15
              coefIn_0 => coefIn(2),  -- sfix8_En7
              addin => std_logic_vector(dlyLineOut1_1),  -- sfix24_En22
              dinRegVld => dinRegVld,
              dinDly2 => dinDly2_2,  -- sfix16_En15
              tapout => tapout_2  -- sfix24_En22
              );

  u_FilterTap_4 : FilterTapSystolicWvldin_block
    PORT MAP( clk => clk,
              enb => enb,
              dinReg2_0_re => std_logic_vector(dlyLineOut2_2),  -- sfix16_En15
              coefIn_0 => coefIn(3),  -- sfix8_En7
              addin => std_logic_vector(dlyLineOut1_2),  -- sfix24_En22
              dinRegVld => dinRegVld,
              dinDly2 => dinDly2deadOut,  -- sfix16_En15
              tapout => tapout_3  -- sfix24_En22
              );

  intdelay_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      intdelay_reg <= (OTHERS => '0');
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF syncReset = '1' THEN
          intdelay_reg <= (OTHERS => '0');
        ELSIF dinRegVld = '1' THEN
          intdelay_reg(0) <= dinRegVld;
          intdelay_reg(1 TO 9) <= intdelay_reg(0 TO 8);
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_process;

  vldShift <= intdelay_reg(9);

  vldOutTmp <= dinRegVld AND vldShift;

  ZERO_OUT <= to_signed(16#000000#, 24);

  addin <= to_signed(16#000000#, 24);

  dinDly2_signed <= signed(dinDly2);

  intdelay_1_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      intdelay_reg_1 <= (OTHERS => to_signed(16#0000#, 16));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF syncReset = '1' THEN
          intdelay_reg_1 <= (OTHERS => to_signed(16#0000#, 16));
        ELSIF dinRegVld = '1' THEN
          intdelay_reg_1(0) <= dinDly2_signed;
          intdelay_reg_1(1) <= intdelay_reg_1(0);
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_1_process;

  dlyLineOut2 <= intdelay_reg_1(1);

  tapout_signed <= signed(tapout);

  intdelay_2_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dlyLineOut1 <= to_signed(16#000000#, 24);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF syncReset = '1' THEN
          dlyLineOut1 <= to_signed(16#000000#, 24);
        ELSIF dinRegVld = '1' THEN
          dlyLineOut1 <= tapout_signed;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_2_process;


  dinDly2_signed_1 <= signed(dinDly2_1);

  intdelay_3_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      intdelay_reg_2 <= (OTHERS => to_signed(16#0000#, 16));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF syncReset = '1' THEN
          intdelay_reg_2 <= (OTHERS => to_signed(16#0000#, 16));
        ELSIF dinRegVld = '1' THEN
          intdelay_reg_2(0) <= dinDly2_signed_1;
          intdelay_reg_2(1) <= intdelay_reg_2(0);
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_3_process;

  dlyLineOut2_1 <= intdelay_reg_2(1);

  tapout_signed_1 <= signed(tapout_1);

  intdelay_4_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dlyLineOut1_1 <= to_signed(16#000000#, 24);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF syncReset = '1' THEN
          dlyLineOut1_1 <= to_signed(16#000000#, 24);
        ELSIF dinRegVld = '1' THEN
          dlyLineOut1_1 <= tapout_signed_1;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_4_process;


  dinDly2_signed_2 <= signed(dinDly2_2);

  intdelay_5_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      intdelay_reg_3 <= (OTHERS => to_signed(16#0000#, 16));
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF syncReset = '1' THEN
          intdelay_reg_3 <= (OTHERS => to_signed(16#0000#, 16));
        ELSIF dinRegVld = '1' THEN
          intdelay_reg_3(0) <= dinDly2_signed_2;
          intdelay_reg_3(1) <= intdelay_reg_3(0);
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_5_process;

  dlyLineOut2_2 <= intdelay_reg_3(1);

  tapout_signed_2 <= signed(tapout_2);

  intdelay_6_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dlyLineOut1_2 <= to_signed(16#000000#, 24);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF syncReset = '1' THEN
          dlyLineOut1_2 <= to_signed(16#000000#, 24);
        ELSIF dinRegVld = '1' THEN
          dlyLineOut1_2 <= tapout_signed_2;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_6_process;


  tapout_signed_3 <= signed(tapout_3);

  
  muxOut <= ZERO_OUT WHEN vldOutTmp = '0' ELSE
      tapout_signed_3;

  intdelay_7_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      dout_1_re_tmp <= to_signed(16#000000#, 24);
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF syncReset = '1' THEN
          dout_1_re_tmp <= to_signed(16#000000#, 24);
        ELSE 
          dout_1_re_tmp <= muxOut;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_7_process;


  dout_1_re <= std_logic_vector(dout_1_re_tmp);

  intdelay_8_process : PROCESS (clk, reset)
  BEGIN
    IF reset = '1' THEN
      doutVld <= '0';
    ELSIF clk'EVENT AND clk = '1' THEN
      IF enb = '1' THEN
        IF syncReset = '1' THEN
          doutVld <= '0';
        ELSE 
          doutVld <= vldOutTmp;
        END IF;
      END IF;
    END IF;
  END PROCESS intdelay_8_process;


END rtl;

